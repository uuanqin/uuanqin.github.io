{"data":{"title":"Ant Design Pro 前端项目初始化到部署上线","slug":"技术学习/Ant Design Pro 前端项目初始化到部署上线","description":"备忘一下 Ant Design Pro 上线关键流程","date":"2024-04-10T16:18:37.000Z","updated":"2025-07-02T15:10:01.351Z","language":"zh-CN","comments":true,"url":"p/3d8f61f0/","cover":"https://cdn.gallery.uuanqin.top/img/20240410234822.webp","images":[],"content":"<h1 id=\"初始化\"><a class=\"markdownIt-Anchor\" href=\"#初始化\"></a> 初始化</h1>\n\n<div class=\"callout\" data-callout=\"warning\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">搭建方法随时可能更新，请注意查看最新官网相关文档</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>Ant Design Pro 是基于 Ant Design 和 umi 的封装的一整套企业级中后台前端/设计解决方案。</p>\n<p>官网：<a href=\"https://pro.ant.design/zh-CN/docs/getting-started/\">pro.ant.design/zh-CN/docs/getting-started/</a></p>\n<p>一些准备：</p>\n<ul>\n<li>前端开发工具可以使用 vscode，或 WebStorm。</li>\n<li>yarn：<a href=\"https://yarn.nodejs.cn/en/docs/install#windows-stable\">安装 | Yarn 中文网 (nodejs.cn)</a>。yarn 是并行的 npm。一句话：<code>npm install --global yarn</code></li>\n</ul>\n<p>由于国内网络和前端的特殊性，在安装依赖等方面可能会失败或导致无法启动，浪费大量的时间，因此 Ant Design 推荐使用 <a href=\"https://www.npmjs.com/package/tyarn\">tyarn - npm (npmjs.com)</a> 及 <a href=\"https://www.npmjs.com/package/cnpm\">cnpm - npm (npmjs.com)</a> 工具。</p>\n<p>主要搭建指令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i @ant-design/pro-cli -g   # 全局安装</span><br><span class=\"line\">pro create myapp               # 在项目文件夹下使用，myapp为项目名</span><br></pre></td></tr></table></figure>\n\n<div class=\"callout\" data-callout=\"error\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-zap\"><polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"/></svg>\n</div>\n<div class=\"callout-title-inner\">一个可能遇到的问题</div>\n</div>\n<div class=\"callout-content\"><p>/usr/local/lib/node_modules/@ant-design/pro-cli/src/create/generators/ant-design-pro/index.js:10<br />\nconst sortPackage = require(‘sort-package-json’);<br />\nError [ERR_REQUIRE_ESM]: require() of ES Module</p>\n<p>解决方法：<br />\n进入 <code>@ant-design/pro-cli</code> 全局安装目录（一般在 <code>C:\\Users\\yourname\\AppData\\Roaming\\npm\\node_modules\\@ant-design\\pro-cli</code>）中执行 <code>npm i sort-package-json@1.55.0 -D</code>（如果初始化失败则 <code>npm cache clean --force</code>）。</p>\n</div></div><p>下载完成后终端输入：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn # 如果可以的话，是 tyarn。如果还出错，再试试 cnpm install</span><br></pre></td></tr></table></figure>\n<p>项目目录可看到生成好的依赖包：<code>node_modules</code></p>\n<p>注意：脚手架工具生成了项目后</p>\n<ul>\n<li>不要改动任何代码，先保证项目能运行</li>\n<li>确认环境是否匹配、安装项目依赖</li>\n</ul>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn run start <span class=\"comment\"># 你可以看看package.json里的script，以模拟数据的方式运行</span></span><br><span class=\"line\"><span class=\"comment\"># npm run start也行</span></span><br></pre></td></tr></table></figure>\n<p>注意使用 F12 及时看错误。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240410232133.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<blockquote>\n<p>react 是对 js 的一层封装，而 umi 是对 react 的进一步封装。</p>\n</blockquote>\n<h2 id=\"可选ant-design-pro-项目瘦身\"><a class=\"markdownIt-Anchor\" href=\"#可选ant-design-pro-项目瘦身\"></a> 【可选】Ant Design Pro 项目瘦身</h2>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">项目瘦身过程中，每做一步就运行测试</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>移除国际化模块（国际化集成了多种语言，如无国际化需求可以删掉）：<code>npm run i18n-remove</code>。这个脚本将会尝试删除项目中所有的 i18n 代码，对于复杂的运行时代码，表现并不好，慎用。</p>\n<p>然后自己手动删掉 <code>/src/locales</code> 文件夹。</p>\n<p>一些解决方案：</p>\n<ul>\n<li><a href=\"https://github.com/ant-design/ant-design-pro/issues/11143\">移除国际化出现SyntaxError: Export ‘SelectLang’ is not defined. (11:55) · Issue #11143</a>。把项目根目录下 <code>src/components/index.js</code> 中的 <code>SelectLang</code> 变量删除后就行。</li>\n<li><a href=\"https://github.com/ant-design/ant-design-pro/issues/10452\">🐛 BUG执行删除国际化命令报错 · Issue #10452 · ant-design/ant-design-pro (github.com)</a></li>\n<li>左侧导航栏不显示问题：移除国际化后，项目左侧导航栏菜单和右上角退出登陆按钮不显示了。解决方法：给 <code>/config/route.ts</code> 配置文件的每一个路由都加上对应的 name 属性，如果不添加 name 属性，则菜单默认展示的是 path 属性。这里一定要给每一个路由都添加对应的 name 属性，不然导航栏还是不显示。</li>\n</ul>\n<p>其它文件的删除（不同版本下的操作略有不同）：</p>\n<ul>\n<li>移除测试工具：<code>/tests</code></li>\n<li>（在老版本中出现）移除 e2e（自动化测试）：删除 <code>src/e2e</code> 文件夹</li>\n<li>（在老版本中出现）移出自动化测试框架 <code>playwright.config.ts</code></li>\n<li>移除默认页面时记得删掉路由</li>\n<li>移除 <code>/src/services/swagger</code> 接口文档工具</li>\n</ul>\n<h2 id=\"可选但不推荐umi-ui-加速开发\"><a class=\"markdownIt-Anchor\" href=\"#可选但不推荐umi-ui-加速开发\"></a> 【可选但不推荐】Umi UI 加速开发</h2>\n\n<div class=\"callout\" data-callout=\"warning\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">目前不再推荐使用 Umi UI 组件</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>只有框架的 V3 版本支持悬浮的 Umi UI 按钮：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i @ant-design/pro-cli@3.1.0 -g</span><br><span class=\"line\">pro -v <span class=\"comment\"># 查看当前安装的版本</span></span><br></pre></td></tr></table></figure>\n<p>旧版本脚手架：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240410233405.webp\" alt=\"image.png\" /></p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn add @umijs/preset-ui -D</span><br></pre></td></tr></table></figure>\n<h1 id=\"多环境\"><a class=\"markdownIt-Anchor\" href=\"#多环境\"></a> 多环境</h1>\n<p>关键的环境变量：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">process.<span class=\"property\">env</span>.<span class=\"property\">NODE_ENV</span></span><br><span class=\"line\"><span class=\"comment\">// &#x27;development&#x27;, &#x27;production&#x27;</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"构建\"><a class=\"markdownIt-Anchor\" href=\"#构建\"></a> 构建</h1>\n<p>执行构建命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run build</span><br></pre></td></tr></table></figure>\n<p>构建生成的文件在文件夹 <code>/dist</code> 中。</p>\n<h1 id=\"部署\"><a class=\"markdownIt-Anchor\" href=\"#部署\"></a> 部署</h1>\n<h2 id=\"本地部署\"><a class=\"markdownIt-Anchor\" href=\"#本地部署\"></a> 本地部署</h2>\n<blockquote>\n<p><a href=\"https://www.npmjs.com/package/serve\">serve</a> 工具可以在本地启动一个静态文件服务器。如果你需要将网站部署到正式环境，可以使用 Vercel 进行部署。</p>\n</blockquote>\n<p>安装 serve 工具：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm install serve -g <span class=\"comment\"># 全局安装</span></span><br></pre></td></tr></table></figure>\n<p>进入生成的文件夹 <code>/dist</code> 中，执行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">/dist&gt; serve</span><br><span class=\"line\"></span><br><span class=\"line\">   ┌──────────────────────────────────────────┐</span><br><span class=\"line\">   │                                          │</span><br><span class=\"line\">   │   Serving!                               │</span><br><span class=\"line\">   │                                          │</span><br><span class=\"line\">   │   - Local:    http://localhost:3000      │</span><br><span class=\"line\">   │   - Network:  http://192.168.30.1:3000   │</span><br><span class=\"line\">   │                                          │</span><br><span class=\"line\">   │   Copied <span class=\"built_in\">local</span> address to clipboard!     │</span><br><span class=\"line\">   │                                          │</span><br><span class=\"line\">   └──────────────────────────────────────────┘</span><br></pre></td></tr></table></figure>\n<h2 id=\"nginx-部署\"><a class=\"markdownIt-Anchor\" href=\"#nginx-部署\"></a> Nginx 部署</h2>\n<blockquote>\n<p>Linux+Nginx</p>\n</blockquote>\n<p>将文件夹 <code>/dist</code> 压缩成包 <code>dist.zip</code> 上传到服务器。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 解压文件</span></span><br><span class=\"line\">unzip dist.zip -d myapp</span><br><span class=\"line\"><span class=\"comment\"># 把dist内容移出一层</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> myapp/dist</span><br><span class=\"line\"><span class=\"built_in\">mv</span> * ../</span><br><span class=\"line\"><span class=\"built_in\">cd</span> ..</span><br><span class=\"line\"><span class=\"built_in\">rm</span> -rf dist</span><br></pre></td></tr></table></figure>\n<p>假设 myapp 文件夹目录位置为：<code>/var/www/temp_test/myapp</code>。Nginx 配置文件的写法为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">\tserver_name\tprojects.uuanqin.top; # 域名</span><br><span class=\"line\">\t# 前端</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\troot /var/www/temp_test/myapp;</span><br><span class=\"line\">\t\tindex\tindex.html\tindex.htm;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面是配置文件关键内容写法，端口号什么的自行补充。上面的配置可以使用 certbot 工具启用 HTTPS。详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/6f54b93a/\"><span class=\"yukari\">站内文章</span>Linux 服务器 HTTPS 的配置</a>。</p>\n<p>重启 Nginx：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">systemctl restart nginx</span><br><span class=\"line\"><span class=\"comment\"># 或 service nginx restart</span></span><br></pre></td></tr></table></figure>\n<p>完成登录。</p>\n<h2 id=\"docker-容器部署\"><a class=\"markdownIt-Anchor\" href=\"#docker-容器部署\"></a> Docker 容器部署</h2>\n<p>项目源码中新建一个文件夹 <code>docker</code> 用于存放构建 Docker 需要的相关文件。</p>\n<p>在文件夹 <code>docker</code> 中新建 <code>nginx.conf</code>：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server &#123;</span><br><span class=\"line\">    listen 80;</span><br><span class=\"line\">    # gzip config</span><br><span class=\"line\">    gzip on;</span><br><span class=\"line\">    gzip_min_length 1k;</span><br><span class=\"line\">    gzip_comp_level 9;</span><br><span class=\"line\">    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;</span><br><span class=\"line\">    gzip_vary on;</span><br><span class=\"line\">    gzip_disable &quot;MSIE [1-6]\\.&quot;;</span><br><span class=\"line\">    root /usr/share/nginx/html;</span><br><span class=\"line\">    include /etc/nginx/mime.types;</span><br><span class=\"line\"></span><br><span class=\"line\">\t# 如果用户访问某个网页找不到的话就降级尝试访问index.html</span><br><span class=\"line\">    location / &#123;</span><br><span class=\"line\">        try_files $uri /index.html;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>项目源码根目录中新建 Dockerfile：</p>\n<figure class=\"highlight dockerfile\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">FROM</span> nginx</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 指定工作目录</span></span><br><span class=\"line\"><span class=\"keyword\">WORKDIR</span><span class=\"language-bash\"> /usr/share/nginx/html/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 【可选】指定用户</span></span><br><span class=\"line\"><span class=\"keyword\">USER</span> root</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 把我们的配置文件复制到服务器Nginx的配置文件中</span></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> ./docker/nginx.conf /etc/nginx/conf.d/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">COPY</span><span class=\"language-bash\"> ./dist  /usr/share/nginx/html/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 【可选】显示指定端口</span></span><br><span class=\"line\"><span class=\"keyword\">EXPOSE</span> <span class=\"number\">80</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">CMD</span><span class=\"language-bash\"> [<span class=\"string\">&quot;nginx&quot;</span>, <span class=\"string\">&quot;-g&quot;</span>, <span class=\"string\">&quot;daemon off;&quot;</span>]</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>Docker 构建：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端</span></span><br><span class=\"line\">docker build -t myapp:v0.0.1 .</span><br></pre></td></tr></table></figure>\n<p>Docker 运行：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 前端</span></span><br><span class=\"line\">docker run -p 1122:80 -d myapp:v0.0.1 <span class=\"comment\"># 主机端口改一下比如1122，80可能会被占用；-d 表示后台运行</span></span><br></pre></td></tr></table></figure>\n<p>那么服务器上的 nginx 增加以下配置，以将请求转发到 1122 端口。比如我的设置为，访问 <code>projects.uuanqin.top</code> 请求时将进行转发。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">server&#123;</span><br><span class=\"line\">\tserver_name\tprojects.uuanqin.top;</span><br><span class=\"line\">\t# 前端</span><br><span class=\"line\">\tlocation / &#123;</span><br><span class=\"line\">\t\tproxy_pass http://localhost:1122;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上面是配置文件关键内容写法，端口号什么的自行补充。上面的配置可以使用 certbot 工具启用 HTTPS。详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/6f54b93a/\"><span class=\"yukari\">站内文章</span>Linux 服务器 HTTPS 的配置</a>。</p>\n<p>浏览器访问：<code>projects.uuanqin.top</code> 即可打开前端应用。</p>\n<p>附 docker 常用命令：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">docker ps <span class=\"comment\"># 查看运行的镜像</span></span><br><span class=\"line\">docker <span class=\"built_in\">kill</span> &lt;CONTAINER...&gt; <span class=\"comment\"># 杀死运行中的容器</span></span><br><span class=\"line\">docker logs &lt;CONTAINER&gt; <span class=\"comment\"># 追踪容器的日志输出</span></span><br><span class=\"line\">docker images <span class=\"comment\"># 查看镜像</span></span><br><span class=\"line\">docker rmi -f IMAGE [IMAGE...] <span class=\"comment\"># 移除镜像</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://pro.ant.design/zh-CN/docs/getting-started/\">开始使用 - Ant Design Pro</a></li>\n<li><a href=\"https://github.com/ant-design/ant-design-pro/issues/10505\">🐛 [BUG]pro create myapp fail · Issue #10505 · ant-design/ant-design-pro (github.com)</a></li>\n<li><a href=\"https://yuyuanweb.feishu.cn/wiki/DclswHMhkiRXckkWve1ckXTonDh\">知识星球·编程导航 - 用户中心系统</a></li>\n</ul>\n","raw":"---\ntitle: Ant Design Pro 前端项目初始化到部署上线\ntags:\n  - 阿里巴巴\n  - 前端\n  - Ant Design\n  - umijs\n  - npm\n  - yarn\n  - cnpm\n  - tyarn\n  - 蚂蚁金服\n  - React\n  - Nginx\n  - Linux\ncover: 'https://cdn.gallery.uuanqin.top/img/20240410234822.webp'\ndescription: 备忘一下 Ant Design Pro 上线关键流程\nabbrlink: 3d8f61f0\ncategories:\n  - 技术学习\ndate: 2024-04-11 00:18:37\ntop_img:\n---\n\n# 初始化\n\n> [!warning] 搭建方法随时可能更新，请注意查看最新官网相关文档\n\n Ant Design Pro 是基于 Ant Design 和 umi 的封装的一整套企业级中后台前端/设计解决方案。\n\n 官网：[pro.ant.design/zh-CN/docs/getting-started/](https://pro.ant.design/zh-CN/docs/getting-started/)\n\n一些准备：\n\n- 前端开发工具可以使用 vscode，或 WebStorm。\n- yarn：[安装 | Yarn 中文网 (nodejs.cn)](https://yarn.nodejs.cn/en/docs/install#windows-stable)。yarn 是并行的 npm。一句话：`npm install --global yarn`\n\n由于国内网络和前端的特殊性，在安装依赖等方面可能会失败或导致无法启动，浪费大量的时间，因此 Ant Design 推荐使用 [tyarn - npm (npmjs.com)](https://www.npmjs.com/package/tyarn) 及 [cnpm - npm (npmjs.com)](https://www.npmjs.com/package/cnpm) 工具。\n\n主要搭建指令：\n\n```shell\nnpm i @ant-design/pro-cli -g   # 全局安装\npro create myapp               # 在项目文件夹下使用，myapp为项目名\n```\n\n> [!error] 一个可能遇到的问题\n> /usr/local/lib/node_modules/@ant-design/pro-cli/src/create/generators/ant-design-pro/index.js:10\n> const sortPackage = require('sort-package-json');\n> Error \\[ERR_REQUIRE_ESM\\]: require() of ES Module\n>\n> 解决方法：\n> 进入 `@ant-design/pro-cli` 全局安装目录（一般在 `C:\\Users\\yourname\\AppData\\Roaming\\npm\\node_modules\\@ant-design\\pro-cli`）中执行 `npm i sort-package-json@1.55.0 -D`（如果初始化失败则 `npm cache clean --force`）。\n\n下载完成后终端输入：\n\n```shell\nyarn # 如果可以的话，是 tyarn。如果还出错，再试试 cnpm install\n```\n\n项目目录可看到生成好的依赖包：`node_modules`\n\n注意：脚手架工具生成了项目后\n\n- 不要改动任何代码，先保证项目能运行\n- 确认环境是否匹配、安装项目依赖\n\n```sh\nyarn run start # 你可以看看package.json里的script，以模拟数据的方式运行\n# npm run start也行\n```\n\n注意使用 F12 及时看错误。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240410232133.webp)\n\n> react 是对 js 的一层封装，而 umi 是对 react 的进一步封装。\n\n## 【可选】Ant Design Pro 项目瘦身\n\n> [!hint] 项目瘦身过程中，每做一步就运行测试\n\n移除国际化模块（国际化集成了多种语言，如无国际化需求可以删掉）：`npm run i18n-remove`。这个脚本将会尝试删除项目中所有的 i18n 代码，对于复杂的运行时代码，表现并不好，慎用。\n\n然后自己手动删掉 `/src/locales` 文件夹。\n\n一些解决方案：\n\n- [移除国际化出现SyntaxError: Export 'SelectLang' is not defined. (11:55) · Issue #11143](https://github.com/ant-design/ant-design-pro/issues/11143)。把项目根目录下 `src/components/index.js` 中的 `SelectLang` 变量删除后就行。\n- [🐛 BUG执行删除国际化命令报错 · Issue #10452 · ant-design/ant-design-pro (github.com)](https://github.com/ant-design/ant-design-pro/issues/10452)\n- 左侧导航栏不显示问题：移除国际化后，项目左侧导航栏菜单和右上角退出登陆按钮不显示了。解决方法：给 `/config/route.ts` 配置文件的每一个路由都加上对应的 name 属性，如果不添加 name 属性，则菜单默认展示的是 path 属性。这里一定要给每一个路由都添加对应的 name 属性，不然导航栏还是不显示。\n\n其它文件的删除（不同版本下的操作略有不同）：\n\n- 移除测试工具：`/tests`\n- （在老版本中出现）移除 e2e（自动化测试）：删除 `src/e2e` 文件夹\n- （在老版本中出现）移出自动化测试框架 `playwright.config.ts`\n- 移除默认页面时记得删掉路由\n- 移除 `/src/services/swagger` 接口文档工具\n\n## 【可选但不推荐】Umi UI 加速开发\n\n> [!warning] 目前不再推荐使用 Umi UI 组件\n\n只有框架的 V3 版本支持悬浮的 Umi UI 按钮：\n\n```sh\nnpm i @ant-design/pro-cli@3.1.0 -g\npro -v # 查看当前安装的版本\n```\n\n旧版本脚手架：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240410233405.webp)\n\n```sh\nyarn add @umijs/preset-ui -D\n```\n\n\n# 多环境\n\n关键的环境变量：\n\n```js\nprocess.env.NODE_ENV\n// 'development', 'production'\n```\n\n\n# 构建\n\n执行构建命令：\n\n```sh\nnpm run build\n```\n\n构建生成的文件在文件夹 `/dist` 中。\n\n# 部署\n\n## 本地部署\n\n> [serve](https://www.npmjs.com/package/serve) 工具可以在本地启动一个静态文件服务器。如果你需要将网站部署到正式环境，可以使用 Vercel 进行部署。\n\n安装 serve 工具：\n\n```sh\nnpm install serve -g # 全局安装\n```\n\n进入生成的文件夹 `/dist` 中，执行：\n\n```sh\n/dist> serve\n\n   ┌──────────────────────────────────────────┐\n   │                                          │\n   │   Serving!                               │\n   │                                          │\n   │   - Local:    http://localhost:3000      │\n   │   - Network:  http://192.168.30.1:3000   │\n   │                                          │\n   │   Copied local address to clipboard!     │\n   │                                          │\n   └──────────────────────────────────────────┘\n```\n\n## Nginx 部署\n\n> Linux+Nginx\n\n将文件夹 `/dist` 压缩成包 `dist.zip` 上传到服务器。\n\n```sh\n# 解压文件\nunzip dist.zip -d myapp\n# 把dist内容移出一层\ncd myapp/dist\nmv * ../\ncd ..\nrm -rf dist\n```\n\n假设 myapp 文件夹目录位置为：`/var/www/temp_test/myapp`。Nginx 配置文件的写法为：\n\n```\nserver{\n\tserver_name\tprojects.uuanqin.top; # 域名\n\t# 前端\n\tlocation / {\n\t\troot /var/www/temp_test/myapp;\n\t\tindex\tindex.html\tindex.htm;\n\t}\n}\n```\n\n上面是配置文件关键内容写法，端口号什么的自行补充。上面的配置可以使用 certbot 工具启用 HTTPS。详看：[[Linux 服务器 HTTPS 的配置]]。\n\n重启 Nginx：\n\n```sh\nsystemctl restart nginx\n# 或 service nginx restart\n```\n\n完成登录。\n\n## Docker 容器部署\n\n项目源码中新建一个文件夹 `docker` 用于存放构建 Docker 需要的相关文件。\n\n在文件夹 `docker` 中新建 `nginx.conf`：\n\n```\nserver {\n    listen 80;\n    # gzip config\n    gzip on;\n    gzip_min_length 1k;\n    gzip_comp_level 9;\n    gzip_types text/plain text/css text/javascript application/json application/javascript application/x-javascript application/xml;\n    gzip_vary on;\n    gzip_disable \"MSIE [1-6]\\.\";\n    root /usr/share/nginx/html;\n    include /etc/nginx/mime.types;\n\n\t# 如果用户访问某个网页找不到的话就降级尝试访问index.html\n    location / {\n        try_files $uri /index.html;\n    }\n}\n```\n\n项目源码根目录中新建 Dockerfile：\n\n```dockerfile\nFROM nginx\n\n# 指定工作目录\nWORKDIR /usr/share/nginx/html/\n\n# 【可选】指定用户\nUSER root\n\n# 把我们的配置文件复制到服务器Nginx的配置文件中\nCOPY ./docker/nginx.conf /etc/nginx/conf.d/\n\nCOPY ./dist  /usr/share/nginx/html/\n\n# 【可选】显示指定端口\nEXPOSE 80\n\nCMD [\"nginx\", \"-g\", \"daemon off;\"]\n\n```\n\nDocker 构建：\n\n```sh\n# 前端\ndocker build -t myapp:v0.0.1 .\n```\n\nDocker 运行：\n\n```sh\n# 前端\ndocker run -p 1122:80 -d myapp:v0.0.1 # 主机端口改一下比如1122，80可能会被占用；-d 表示后台运行\n```\n\n那么服务器上的 nginx 增加以下配置，以将请求转发到 1122 端口。比如我的设置为，访问 `projects.uuanqin.top` 请求时将进行转发。\n\n```\nserver{\n\tserver_name\tprojects.uuanqin.top;\n\t# 前端\n\tlocation / {\n\t\tproxy_pass http://localhost:1122;\n\t}\n}\n```\n\n上面是配置文件关键内容写法，端口号什么的自行补充。上面的配置可以使用 certbot 工具启用 HTTPS。详看：[[Linux 服务器 HTTPS 的配置]]。\n\n浏览器访问：`projects.uuanqin.top` 即可打开前端应用。\n\n附 docker 常用命令：\n\n```sh\ndocker ps # 查看运行的镜像\ndocker kill <CONTAINER...> # 杀死运行中的容器\ndocker logs <CONTAINER> # 追踪容器的日志输出\ndocker images # 查看镜像\ndocker rmi -f IMAGE [IMAGE...] # 移除镜像\n```\n\n\n# 本文参考\n- [开始使用 - Ant Design Pro](https://pro.ant.design/zh-CN/docs/getting-started/)\n- [🐛 [BUG]pro create myapp fail · Issue #10505 · ant-design/ant-design-pro (github.com)](https://github.com/ant-design/ant-design-pro/issues/10505)\n- [知识星球·编程导航 - 用户中心系统](https://yuyuanweb.feishu.cn/wiki/DclswHMhkiRXckkWve1ckXTonDh)\n\n","categories":[{"name":"技术学习","api":"api/categories/技术学习.json"}],"tags":[{"name":"Linux","api":"api/tags/Linux.json"},{"name":"Nginx","api":"api/tags/Nginx.json"},{"name":"阿里巴巴","api":"api/tags/阿里巴巴.json"},{"name":"前端","api":"api/tags/前端.json"},{"name":"Ant Design","api":"api/tags/Ant-Design.json"},{"name":"umijs","api":"api/tags/umijs.json"},{"name":"npm","api":"api/tags/npm.json"},{"name":"yarn","api":"api/tags/yarn.json"},{"name":"cnpm","api":"api/tags/cnpm.json"},{"name":"tyarn","api":"api/tags/tyarn.json"},{"name":"蚂蚁金服","api":"api/tags/蚂蚁金服.json"},{"name":"React","api":"api/tags/React.json"}]},"api":"api/posts/p/3d8f61f0.json"}