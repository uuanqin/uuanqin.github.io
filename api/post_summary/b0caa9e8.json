{"title":"友链朋友圈（By @冰糖红茶）—— Server - SQLite 部署方案","tags":["Butterfly","Linux","Python","SQLite"],"cover":"https://cdn.gallery.uuanqin.top/img/new-out-of-date-cover.png","description":"简要介绍我在服务器的部署友链朋友圈过程以示参考","abbrlink":"b0caa9e8","categories":["Archive","OutOfDate"],"date":"2023-08-13T23:57:42.000Z","top_img":null,"summary":"> [!warning] 这是一篇过期文章 `241030` > @Rock-Candy-Tea（冰糖红茶）开发的友链朋友圈项目已年久失修，项目贡献者 @CCKNBC 建议迁往 Friend-Circle-Lite:轻量友链朋友圈（作者 @清羽飞扬 ） 本来不想写的，觉得自己看文档就能实现。但是实际操作过程出现了很多状况，文档不是太详细，MySQL 部署失败......~~于是打算水一篇 😓~~。 官方文档：友链朋友圈 - 使用手册 环境 我采用的方案是 Server + SQLite 的部署方案。 根据文档要求 Python 环境为 3.8，原本我的服务器版本为 3.6，需要升级。（此处由于我忽略版本导致踩坑） 安装 Git： 项目安装 找个好地方克隆仓库： 编辑 `/hexo_circle_of_friends/fc_settings.yaml` 文件： 部署与测试 API： > [!error] ERROR: Could not find a version that satisfies the requirement aiofiles (from versions: none) 部署时如遇找不到包的错误，可尝试更换源下载。如针对以上报错，可以执行： 但是依赖列表这么多，总不能一个个下。我们可以直接执行这条指令： 完事后，重新部署即可。 Nginx 配置 由于之前 [^cdn] 弄了好一会这个配置，为的是网站实现全程 HTTPS 访问。现在我也想让外部访问朋友圈接口时也使用 HTTPS。 [^cdn]: 参见我的折腾过程：[[Nginx 与 CDN 完成重定向：从 HTTP 重定向到 HTTPS、从 WWW 重定向到根]] 通过 location 正则匹配，识别出 `/fc_backend/` 开头的链接为朋友圈 API 的请求，并将其转发到端口 8000（朋友圈默认端口）。发送给 8000 端口的地址不包含 `/fc_backend/`。 当然，这里需要前端也要配合发出 `/fc_backend/` 开头的请求。 修改配置文件后别忘了重启 Nginx。 前端部署 这里我采用了文档方案。 注意 `private_api_url` 中的设置。..."}