{"title":"利用 Cron 编写简单的定时脚本","tags":["GitHub","cron","Python","Webhook","script","SDK","CDN","腾讯云"],"cover":"https://cdn.gallery.uuanqin.top/img/githubstarcover.webp","abbrlink":"b9dad4e7","description":"介绍一些简单定时脚本的编写并利用 Webhook 推送","categories":["核心协同","自动化"],"date":"2024-07-24T22:43:43.000Z","top_img":null,"summary":"> [!notice] 文章重要更新 `240724` > 由于近期惨遭某些省的 IP 多轮恶意刷量，现新增两个小脚本加强网站被攻击状况的感知。 > 原文写于 `231206`。 > [!hint] 除了使用自建服务器上的 Cron 执行定时脚本以外，还可以使用 GitHub Action 完成这项工作。 这篇文章通过一些简单的 Python 脚本演示定时脚本配合 Webhook 的使用。 通过这个思路，你可以展开更多的想法： 实时监测 GitHub 的各项信息并推送 NPM 包下载量监测 LeetCode 每日一题 排名监测 获取某官网上的重要公告 监控云服务平台的各项数据 ...... 本文主要介绍： 获取用户 Github 上的 Star 数量并推送的脚本编写 根据用户名监测某作者 NPM 包年下载量 实时监测多吉云团队公布的文章「近期部分加速域名晚间遭遇恶意流量事件说明」通告是否更新 监控腾讯云 CDN 请求数是否超限 获取 Github 上的 Star 数量并推送 GitHub 应用注册 打开你的 GitHub 主页（profile）进入开发者选项： 选择「新建一个」GitHub APP。根据需要进行相关设置的填写。 生成密钥： 记住密钥，待会脚本需要调用。 脚本的编写 这里参考了 songquanpeng/scripts 的实现，并进行修复与改编。 这个 python 脚本（这里命名为 `github_stars.py`）所做的工作： 调用 GitHub API（Repositories - GitHub Docs） 统计所有项目的 star 数量 与上次统计结果进行比较（结果保存在本地） 调用推送服务发送 POST JSON 格式的请求 执行脚本需要的三个参数： GitHub 用户名 GitHub API 令牌 调用的推送服务（将发送 POST）请求 源代码【非面向对象版本】如下： 注意，代码中不要使用奇奇怪怪的字符，比如 emoji 表情等，导致 utf-8 和 gbk 都不能识别。 这里我使用了自己的部署服务。使用示例： 把脚本放在 Linux 服务器上，记得测试。 > 这里使用的 API 似乎有点老了，但是还能用。我在文档中没有找到确切的对应文档说明。 定时执行 新建 cron 文件： 添加定时任务： 每天早上 8 点 02 分调用该脚本。..."}