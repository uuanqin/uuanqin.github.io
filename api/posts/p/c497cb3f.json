{"data":{"title":"DHT11 驱动程序","slug":"嵌入式/DHT11 驱动程序","description":"给出标准库及 HAL 驱动示例。","date":"2024-04-23T14:37:40.000Z","updated":"2024-12-23T17:39:01.903Z","language":"zh-CN","comments":true,"url":"p/c497cb3f/","cover":"https://cdn.gallery.uuanqin.top/img/20240404231344.webp","images":[],"content":"<h1 id=\"dht11-简介\"><a class=\"markdownIt-Anchor\" href=\"#dht11-简介\"></a> DHT11 简介</h1>\n<p>DHT11 数字温湿度传感器是一款含有已校准数字信号输出的温湿度复合传感器。DHT11 有 3 脚和 4 脚两款，在使用上没有差别，接线都一样，主要接三根，四脚的款式有一脚悬空。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240404222618.webp\" alt=\"img\" width=\"350px\" /></p>\n<p>典型接线线路如下图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240423202538.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<p>引脚：</p>\n<table>\n<thead>\n<tr>\n<th>Pin</th>\n<th>名称</th>\n<th>注释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1</td>\n<td>VDD</td>\n<td>供电 3-5.5V</td>\n</tr>\n<tr>\n<td>2</td>\n<td>GND</td>\n<td>接地，电源负极</td>\n</tr>\n<tr>\n<td>3</td>\n<td>DATA</td>\n<td>串行数据，单总线</td>\n</tr>\n<tr>\n<td>4</td>\n<td>NC</td>\n<td>空脚，请悬空</td>\n</tr>\n</tbody>\n</table>\n<p>DHT11 采样频率为 1HZ，建议平均 1~2s 读取一次数据。</p>\n<h1 id=\"单总线协议\"><a class=\"markdownIt-Anchor\" href=\"#单总线协议\"></a> 单总线协议</h1>\n<p>DHT11 采用单总线协议与单片机通信，也就是使用一根 DATA 线进行数据的收发。单片机发送一次复位信号后，DHT11 从低功耗模式转换到高速模式，等待主机复位结束后，DHT11 发送响应信号，并拉高总线准备传输数据。</p>\n<p>数据格式（共 40bit）：</p>\n<ol>\n<li>8bit 湿度整数数据</li>\n<li>8bit 湿度小数数据</li>\n<li>8bit 温度整数数据</li>\n<li>8bit 温度小数数据</li>\n<li>8bit 校验和</li>\n</ol>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240430173533.webp\" alt=\"image.png\" /></p>\n<p>DHT11 的 DATA 传输一次完整的数据为 40bit，按照高位在前，低位在后的顺序传输。</p>\n<p>DHT11 只有在接收到开始信号后才触发一次温湿度采集，如果没有接收到主机发送复位信号，DHT11 不主动进行温湿度采集。当数据采集完毕且无开始信号后，DHT11 自动切换到低速模式。</p>\n<h2 id=\"初始化\"><a class=\"markdownIt-Anchor\" href=\"#初始化\"></a> 初始化</h2>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202412240137520.webp\" alt=\"image.png\" /></p>\n<p>DHT11 初始化过程分为：</p>\n<ul>\n<li>主机发送复位信号：首先主机拉低总线至少 <strong>18ms</strong>，然后再拉高总线，延时 20~40us，取中间值 30us，此时复位信号发送完毕。</li>\n<li>DHT11 发送响应信号：DHT11 检测到复位信号后，触发一次采样，并拉低总线 80us 表示响应信号，告诉主机数据已经准备好了；然后 DHT11 拉高总线 80us，之后开始传输数据。</li>\n</ul>\n<blockquote>\n<p>注意，主机一开始拉低总线是 18 <strong>毫秒</strong>，不是 18 微秒。</p>\n</blockquote>\n<p>从模式下，DHT11 接收到开始信号触发一次温湿度采集，如果没有接收到主机发送开始信号，DHT11 不会主动进行温湿度采集。采集数据后转换到低速模式。</p>\n<p>实际上 DHT11 的响应时间并不是标准的 80us，往往存在误差，当响应时间处于 20~100us 之间时就可以认定响应成功。</p>\n<h2 id=\"dht11-传输数据\"><a class=\"markdownIt-Anchor\" href=\"#dht11-传输数据\"></a> DHT11 传输数据</h2>\n<p>DHT11 在拉高总线 80us 后开始传输数据。每 1bit 数据都以 50us 低电平时隙开始，告诉主机开始传输一位数据了。DHT11 以高电平的长短定义数据位是 0 还是 1，当 50us 低电平时隙过后拉高总线，高电平持续 26~28us 表示数据“0”；持续 70us 表示数据“1”。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202412240138433.webp\" alt=\"image.png\" /></p>\n<p>当 最后 1bit 数据传送完毕后，DHT11 拉低总线 50us，表示数据传输完毕，随后总线由上拉电阻拉高进入空闲状态。</p>\n<p>区分 0 和 1 的方法：当数据位之前的 50us 低电平时隙过后，总线肯定会拉高，此时延时 40us 后检测总线状态，如果为高，说明此时处于 70us 的时隙，则数据为“1”；如果为低，说明此时处于下一位数据 50us 的开始时隙，那么上一位数据肯定是“0”。</p>\n<h1 id=\"驱动实现\"><a class=\"markdownIt-Anchor\" href=\"#驱动实现\"></a> 驱动实现</h1>\n<h2 id=\"标准库\"><a class=\"markdownIt-Anchor\" href=\"#标准库\"></a> 标准库</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> _DHT11_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _DHT11_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_GPIO_Init_OUT</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_GPIO_Init_IN</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_Start</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">char</span> <span class=\"title function_\">DHT11_REC_Byte</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_REC_Data</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span>  <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span>  <span class=\"string\">&quot;SysTick.h&quot;</span>           <span class=\"comment\">// 延时函数</span></span></span><br><span class=\"line\"><span class=\"comment\">//数据</span></span><br><span class=\"line\"><span class=\"type\">unsigned</span> <span class=\"type\">int</span> rec_data[<span class=\"number\">4</span>];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// GPIOB</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DHT11_GPIO_Pin_x GPIO_Pin_11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> dht11_high GPIO_SetBits(GPIOB, DHT11_GPIO_Pin_x)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> dht11_low GPIO_ResetBits(GPIOB, DHT11_GPIO_Pin_x)</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> Read_Data GPIO_ReadInputDataBit(GPIOB, DHT11_GPIO_Pin_x)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对于stm32来说，是输出</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DH11_GPIO_Init_OUT</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Mode  = GPIO_Mode_Out_PP; <span class=\"comment\">//推挽输出</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Pin   = DHT11_GPIO_Pin_x;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//对于stm32来说，是输入</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DH11_GPIO_Init_IN</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN_FLOATING; <span class=\"comment\">//浮空输入</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Pin   = DHT11_GPIO_Pin_x;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tGPIO_Init(GPIOB, &amp;GPIO_InitStructure);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//主机发送开始信号</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_Start</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tDH11_GPIO_Init_OUT(); <span class=\"comment\">//输出模式</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdht11_high; <span class=\"comment\">//先拉高</span></span><br><span class=\"line\">\tDelay_us(<span class=\"number\">30</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdht11_low; <span class=\"comment\">//拉低电平至少18us</span></span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">20</span>); <span class=\"comment\">// ms 没错</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tdht11_high; <span class=\"comment\">//拉高电平20~40us</span></span><br><span class=\"line\">\tDelay_us(<span class=\"number\">30</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tDH11_GPIO_Init_IN(); <span class=\"comment\">//输入模式</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取一个字节</span></span><br><span class=\"line\"><span class=\"type\">char</span> <span class=\"title function_\">DHT11_Rec_Byte</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> i = <span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> data;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++) <span class=\"comment\">//1个数据就是1个字节byte，1个字节byte有8位bit</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( Read_Data == <span class=\"number\">0</span>); <span class=\"comment\">//从1bit开始，低电平变高电平，等待低电平结束</span></span><br><span class=\"line\">\t\tDelay_us(<span class=\"number\">30</span>); <span class=\"comment\">//延迟30us是为了区别数据0和数据1，0只有26~28us</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tdata &lt;&lt;= <span class=\"number\">1</span>; <span class=\"comment\">//左移</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>( Read_Data == <span class=\"number\">1</span> ) <span class=\"comment\">//如果过了30us还是高电平的话就是数据1</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tdata |= <span class=\"number\">1</span>; <span class=\"comment\">//数据+1</span></span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( Read_Data == <span class=\"number\">1</span> ); <span class=\"comment\">//高电平变低电平，等待高电平结束</span></span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> data;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//获取数据</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_REC_Data</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> R_H,R_L,T_H,T_L;</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">char</span> RH,RL,TH,TL,CHECK;</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tDHT11_Start(); <span class=\"comment\">//主机发送信号</span></span><br><span class=\"line\">\tdht11_high; <span class=\"comment\">//拉高电平</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>( Read_Data == <span class=\"number\">0</span> ) <span class=\"comment\">//判断DHT11是否响应</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( Read_Data == <span class=\"number\">0</span>); <span class=\"comment\">//低电平变高电平，等待低电平结束</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">while</span>( Read_Data == <span class=\"number\">1</span>); <span class=\"comment\">//高电平变低电平，等待高电平结束</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tR_H = DHT11_Rec_Byte();</span><br><span class=\"line\">\t\tR_L = DHT11_Rec_Byte();</span><br><span class=\"line\">\t\tT_H = DHT11_Rec_Byte();</span><br><span class=\"line\">\t\tT_L = DHT11_Rec_Byte();</span><br><span class=\"line\">\t\tCHECK = DHT11_Rec_Byte(); <span class=\"comment\">//接收5个数据</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\tdht11_low; <span class=\"comment\">//当最后一bit数据传送完毕后，DHT11拉低总线 50us</span></span><br><span class=\"line\">\t\tDelay_us(<span class=\"number\">55</span>); <span class=\"comment\">//这里延时55us</span></span><br><span class=\"line\">\t\tdht11_high; <span class=\"comment\">//随后总线由上拉电阻拉高进入空闲状态。</span></span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(R_H + R_L + T_H + T_L == CHECK) <span class=\"comment\">//和检验位对比，判断校验接收到的数据是否正确</span></span><br><span class=\"line\">\t\t&#123;</span><br><span class=\"line\">\t\t\tRH = R_H;</span><br><span class=\"line\">\t\t\tRL = R_L;</span><br><span class=\"line\">\t\t\tTH = T_H;</span><br><span class=\"line\">\t\t\tTL = T_L;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\trec_data[<span class=\"number\">0</span>] = RH;</span><br><span class=\"line\">\trec_data[<span class=\"number\">1</span>] = RL;</span><br><span class=\"line\">\trec_data[<span class=\"number\">2</span>] = TH;</span><br><span class=\"line\">\trec_data[<span class=\"number\">3</span>] = TL;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">unsigned</span> <span class=\"type\">int</span> rec_data[<span class=\"number\">4</span>]; <span class=\"comment\">// 直接使用里面的数据</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main_task</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\t<span class=\"comment\">// 直接使用rec_data里面的数据。注意间隔一定时间再读取，以免错误。</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"hal\"><a class=\"markdownIt-Anchor\" href=\"#hal\"></a> HAL</h2>\n<p>DHT11 对时序要求严格，需要微妙级延时，我们常用的 HAL_Delay 是毫秒级时延。由于 FreeRTOS 是不支持微秒级延时的，需要自己定义微秒级别的延时函数（详见：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/c5d0cc56/\"><span class=\"yukari\">站内文章</span>STM32 延时函数（FreeRTOS）</a>。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> __dht11_h</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> __dht11_h</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">uint8_t</span> temperature;         </span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">uint8_t</span> humidity; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_REST</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;                            <span class=\"comment\">//复位DHT11</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Check</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;                       <span class=\"comment\">//DHT11状态反馈</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Read_Bit</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;                    <span class=\"comment\">//读DHT11一位数据</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Read_Byte</span><span class=\"params\">(<span class=\"type\">void</span>)</span>;                   <span class=\"comment\">//读DHT11一字节数据</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Read_Data</span><span class=\"params\">(<span class=\"type\">uint8_t</span>* humi,<span class=\"type\">uint8_t</span>* temp)</span>;     <span class=\"comment\">//DHT11数据显示</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span> <span class=\"comment\">/*__dht11_h*/</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f1xx_hal.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;delay.h&quot;</span> # us级延时函数</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DHT11_GPIOx\t\tGPIOB</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DHT11_GPIO_PIN\tGPIO_PIN_11</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> temperature;      <span class=\"comment\">//给一个初始化,用以判断               </span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> humidity; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_OUT</span><span class=\"params\">(<span class=\"type\">void</span> )</span><span class=\"comment\">//输出引脚</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStruct;</span><br><span class=\"line\">\tGPIO_InitStruct.Pin = DHT11_GPIO_PIN;</span><br><span class=\"line\">\tGPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;</span><br><span class=\"line\">\tGPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class=\"line\">\tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class=\"line\">\tHAL_GPIO_Init(DHT11_GPIOx, &amp;GPIO_InitStruct);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_IN</span><span class=\"params\">(<span class=\"type\">void</span> )</span><span class=\"comment\">//输入引脚</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStruct;</span><br><span class=\"line\">\tGPIO_InitStruct.Pin = DHT11_GPIO_PIN;</span><br><span class=\"line\">\tGPIO_InitStruct.Mode = GPIO_MODE_INPUT ;</span><br><span class=\"line\">\tGPIO_InitStruct.Pull = GPIO_PULLUP;</span><br><span class=\"line\">\tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;</span><br><span class=\"line\">\tHAL_GPIO_Init(DHT11_GPIOx, &amp;GPIO_InitStruct);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">DHT11_REST</span><span class=\"params\">(<span class=\"type\">void</span> )</span> <span class=\"comment\">//主机发出起始信号</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tDHT11_OUT();</span><br><span class=\"line\">\tHAL_GPIO_WritePin (DHT11_GPIOx ,DHT11_GPIO_PIN ,GPIO_PIN_RESET );</span><br><span class=\"line\">\tHAL_Delay (<span class=\"number\">20</span>); <span class=\"comment\">// ms</span></span><br><span class=\"line\">\tHAL_GPIO_WritePin (DHT11_GPIOx ,DHT11_GPIO_PIN ,GPIO_PIN_SET );</span><br><span class=\"line\">\tdelay_us (<span class=\"number\">30</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//gpio端口为输入模式时,配置为上拉输入或者浮空输入,因外接上拉电阻,默认为高电平</span></span><br><span class=\"line\"><span class=\"comment\">//当有负信号输入时,gpio端口为1.</span></span><br><span class=\"line\"><span class=\"comment\">//若有负信号输入，当信号引脚连接到GND或者其他低电平信号时，GPIO端口会检测到低电平并显示为0。</span></span><br><span class=\"line\"><span class=\"comment\">//这是因为负信号的优先级高于上拉电阻的电平设置。</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Check</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> retry = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    DHT11_IN();  <span class=\"comment\">// 设置数据引脚为输入模式</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (HAL_GPIO_ReadPin(DHT11_GPIOx, DHT11_GPIO_PIN) == <span class=\"number\">1</span> &amp;&amp; retry &lt; <span class=\"number\">80</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retry++;</span><br><span class=\"line\">        delay_us(<span class=\"number\">1</span>);  <span class=\"comment\">// 延迟1微秒</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retry &gt;= <span class=\"number\">80</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  <span class=\"comment\">// 如果在规定时间内引脚仍为高电平，表示传感器未响应，返回错误代码 1</span></span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">        retry = <span class=\"number\">0</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">while</span> (HAL_GPIO_ReadPin(DHT11_GPIOx, DHT11_GPIO_PIN) == <span class=\"number\">0</span> &amp;&amp; retry &lt; <span class=\"number\">80</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        retry++;</span><br><span class=\"line\">        delay_us(<span class=\"number\">1</span>);  <span class=\"comment\">// 延迟1微秒</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (retry &gt;= <span class=\"number\">80</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  <span class=\"comment\">// 如果在规定时间内引脚仍为低电平，表示传感器未响应，返回错误代码 1</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  <span class=\"comment\">// 传感器响应正常，返回成功代码 0</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//读取一个位,参考高低电平的时序</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Read_Bit</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint8_t</span> retry=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>((HAL_GPIO_ReadPin (DHT11_GPIOx ,DHT11_GPIO_PIN)==<span class=\"number\">1</span>) &amp;&amp; (retry &lt;<span class=\"number\">100</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tretry ++;</span><br><span class=\"line\">\t\tdelay_us (<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tretry=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>((HAL_GPIO_ReadPin(DHT11_GPIOx ,DHT11_GPIO_PIN)==<span class=\"number\">0</span>) &amp;&amp; (retry &lt;<span class=\"number\">100</span>))</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tretry ++;</span><br><span class=\"line\">\t\tdelay_us (<span class=\"number\">1</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\tdelay_us (<span class=\"number\">40</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(HAL_GPIO_ReadPin (DHT11_GPIOx ,DHT11_GPIO_PIN )==<span class=\"number\">1</span>)</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;<span class=\"comment\">// 返回读取到的位为高电平</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span> </span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;<span class=\"comment\">// 返回读取到的位为低电平</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//读取一个字节,接收数据</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Read_Byte</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint8_t</span> dat=<span class=\"number\">0</span>;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(<span class=\"type\">uint8_t</span> i=<span class=\"number\">0</span>;i&lt;<span class=\"number\">8</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tdat &lt;&lt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\tdat |= DHT11_Read_Bit();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> dat;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//更据上面的数据格式,解码数据</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">DHT11_Read_Data</span><span class=\"params\">(<span class=\"type\">uint8_t</span>* humi, <span class=\"type\">uint8_t</span>* temp)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> buf[<span class=\"number\">5</span>];  <span class=\"comment\">// 存储读取到的5个字节数据的缓冲区</span></span><br><span class=\"line\"></span><br><span class=\"line\">    DHT11_REST();  <span class=\"comment\">// 初始化传感器通信</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (DHT11_Check() == <span class=\"number\">0</span>)  <span class=\"comment\">// 检查传感器是否正常响应</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">uint8_t</span> i = <span class=\"number\">0</span>; i &lt; <span class=\"number\">5</span>; i++)</span><br><span class=\"line\">            buf[i] = DHT11_Read_Byte();  <span class=\"comment\">// 逐个字节读取传感器发送的数据</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> ((buf[<span class=\"number\">0</span>] + buf[<span class=\"number\">1</span>] + buf[<span class=\"number\">2</span>] + buf[<span class=\"number\">3</span>]) == buf[<span class=\"number\">4</span>])  <span class=\"comment\">// 校验数据的准确性</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            *humi = buf[<span class=\"number\">0</span>];  <span class=\"comment\">// 将湿度值存储到指定的变量中</span></span><br><span class=\"line\">            *temp = buf[<span class=\"number\">2</span>];  <span class=\"comment\">// 将温度值存储到指定的变量中</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1</span>;  <span class=\"comment\">// 传感器响应异常，返回错误代码</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;  <span class=\"comment\">// 读取数据成功，返回正常代码</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main_task</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tDHT11_REST();                 <span class=\"comment\">//复位DHT11</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(DHT11_Check())                           <span class=\"comment\">//检测DHT11连接</span></span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t  OLED_ShowString(<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;DHT11 No Connect!&quot;</span>);</span><br><span class=\"line\">\t  HAL_Delay(<span class=\"number\">500</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tDHT11_Read_Data(&amp;humidity,&amp;temperature);</span><br><span class=\"line\">\t\t<span class=\"comment\">// 使用temperature和humidity</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h1>\n<p>本文 PlantUML 文本存档：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">binary &quot;Level&quot; as L</span><br><span class=\"line\">concise &quot;状态&quot; as S</span><br><span class=\"line\">scale 100 as 150 pixels</span><br><span class=\"line\">@0</span><br><span class=\"line\">L is low</span><br><span class=\"line\">S is 复位</span><br><span class=\"line\"></span><br><span class=\"line\">@+48</span><br><span class=\"line\">L is high</span><br><span class=\"line\">L@0 &lt;-&gt; @48: 18ms</span><br><span class=\"line\"></span><br><span class=\"line\">@+30</span><br><span class=\"line\">L is low</span><br><span class=\"line\">S is DHT响应信号</span><br><span class=\"line\">L@48 &lt;-&gt; @78: 20-40us</span><br><span class=\"line\"></span><br><span class=\"line\">@+80</span><br><span class=\"line\">L is high</span><br><span class=\"line\"></span><br><span class=\"line\">L@78 &lt;-&gt; @158: 80us</span><br><span class=\"line\"></span><br><span class=\"line\">@+80</span><br><span class=\"line\">L is low</span><br><span class=\"line\">S is DHT传输数据</span><br><span class=\"line\">L@158 &lt;-&gt; @238: 80us</span><br><span class=\"line\"></span><br><span class=\"line\">highlight 0 to 78 #b4d9ff;line:DimGrey : 主机</span><br><span class=\"line\">highlight 348 to 400 #b4d9ff;line:DimGrey : 主机</span><br><span class=\"line\">@+10</span><br><span class=\"line\">L is &#123;low,high&#125;</span><br><span class=\"line\">@+50</span><br><span class=\"line\">L is low</span><br><span class=\"line\">S is DHT拉低</span><br><span class=\"line\">@+50</span><br><span class=\"line\">L is high</span><br><span class=\"line\">S is 主机控制</span><br><span class=\"line\">L@298 &lt;-&gt; @348: 50us</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">binary &quot;数据0&quot; as Z</span><br><span class=\"line\">binary &quot;数据1&quot; as O</span><br><span class=\"line\">scale 100 as 180 pixels</span><br><span class=\"line\">@0</span><br><span class=\"line\">Z is low</span><br><span class=\"line\">O is low</span><br><span class=\"line\"></span><br><span class=\"line\">@+50</span><br><span class=\"line\">Z is high</span><br><span class=\"line\">O is high</span><br><span class=\"line\">Z@0 &lt;-&gt; @50: 50us时隙</span><br><span class=\"line\">O@0 &lt;-&gt; @50: 50us时隙</span><br><span class=\"line\"></span><br><span class=\"line\">@50</span><br><span class=\"line\">Z is high</span><br><span class=\"line\">O is high</span><br><span class=\"line\"></span><br><span class=\"line\">@77</span><br><span class=\"line\">Z is low</span><br><span class=\"line\">Z@50 &lt;-&gt; @77: 26-28us</span><br><span class=\"line\">Z@77 &lt;-&gt; @250: 下一bit</span><br><span class=\"line\">@120</span><br><span class=\"line\">O is low</span><br><span class=\"line\">O@50 &lt;-&gt; @120: 70us</span><br><span class=\"line\">O@120 &lt;-&gt; @250: 下一bit</span><br><span class=\"line\"></span><br><span class=\"line\">@127</span><br><span class=\"line\">Z is &#123;low,high&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@170</span><br><span class=\"line\"></span><br><span class=\"line\">O is &#123;low,high&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">@250</span><br><span class=\"line\"></span><br><span class=\"line\">Z is low</span><br><span class=\"line\">O is low</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://blog.csdn.net/m0_55849362/article/details/126426768\">DHT11详细介绍（内含51和STM32代码）-CSDN博客</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/671411357\">手把手教你玩转DHT11（原理+驱动） - 知乎 (zhihu.com)</a></li>\n<li><a href=\"https://blog.csdn.net/m0_69414528/article/details/133927246\">【STM32(HAL库)–DHT11温湿度传感器】_使用hal库对dht11进行采集-CSDN博客</a></li>\n</ul>\n","raw":"---\ntitle: DHT11 驱动程序\ntags:\n  - DHT11\n  - 驱动\n  - STM32\n  - C\n  - HAL\ncover: 'https://cdn.gallery.uuanqin.top/img/20240404231344.webp'\ndescription: 给出标准库及 HAL 驱动示例。\ncategories:\n  - 嵌入式\nabbrlink: c497cb3f\ndate: 2024-04-23 22:37:40\ntop_img:\n---\n\n\n# DHT11 简介\n\nDHT11 数字温湿度传感器是一款含有已校准数字信号输出的温湿度复合传感器。DHT11 有 3 脚和 4 脚两款，在使用上没有差别，接线都一样，主要接三根，四脚的款式有一脚悬空。\n\n![img|350](https://cdn.gallery.uuanqin.top/img/20240404222618.webp)\n\n典型接线线路如下图：\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/20240423202538.webp)\n\n引脚：\n\n| Pin | 名称   | 注释        |\n| --- | ---- | --------- |\n| 1   | VDD  | 供电 3-5.5V |\n| 2   | GND  | 接地，电源负极   |\n| 3   | DATA | 串行数据，单总线  |\n| 4   | NC   | 空脚，请悬空    |\n\nDHT11 采样频率为 1HZ，建议平均 1~2s 读取一次数据。\n\n# 单总线协议\n\nDHT11 采用单总线协议与单片机通信，也就是使用一根 DATA 线进行数据的收发。单片机发送一次复位信号后，DHT11 从低功耗模式转换到高速模式，等待主机复位结束后，DHT11 发送响应信号，并拉高总线准备传输数据。\n\n数据格式（共 40bit）：\n\n1. 8bit 湿度整数数据\n2. 8bit 湿度小数数据\n3. 8bit 温度整数数据\n4. 8bit 温度小数数据\n5. 8bit 校验和\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240430173533.webp)\n\nDHT11 的 DATA 传输一次完整的数据为 40bit，按照高位在前，低位在后的顺序传输。\n\nDHT11 只有在接收到开始信号后才触发一次温湿度采集，如果没有接收到主机发送复位信号，DHT11 不主动进行温湿度采集。当数据采集完毕且无开始信号后，DHT11 自动切换到低速模式。\n\n## 初始化\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202412240137520.webp)\n\nDHT11 初始化过程分为：\n\n- 主机发送复位信号：首先主机拉低总线至少 **18ms**，然后再拉高总线，延时 20~40us，取中间值 30us，此时复位信号发送完毕。\n- DHT11 发送响应信号：DHT11 检测到复位信号后，触发一次采样，并拉低总线 80us 表示响应信号，告诉主机数据已经准备好了；然后 DHT11 拉高总线 80us，之后开始传输数据。\n\n> 注意，主机一开始拉低总线是 18 **毫秒**，不是 18 微秒。\n\n从模式下，DHT11 接收到开始信号触发一次温湿度采集，如果没有接收到主机发送开始信号，DHT11 不会主动进行温湿度采集。采集数据后转换到低速模式。\n\n实际上 DHT11 的响应时间并不是标准的 80us，往往存在误差，当响应时间处于 20~100us 之间时就可以认定响应成功。\n\n## DHT11 传输数据\n\nDHT11 在拉高总线 80us 后开始传输数据。每 1bit 数据都以 50us 低电平时隙开始，告诉主机开始传输一位数据了。DHT11 以高电平的长短定义数据位是 0 还是 1，当 50us 低电平时隙过后拉高总线，高电平持续 26~28us 表示数据“0”；持续 70us 表示数据“1”。\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202412240138433.webp)\n\n当 最后 1bit 数据传送完毕后，DHT11 拉低总线 50us，表示数据传输完毕，随后总线由上拉电阻拉高进入空闲状态。\n\n区分 0 和 1 的方法：当数据位之前的 50us 低电平时隙过后，总线肯定会拉高，此时延时 40us 后检测总线状态，如果为高，说明此时处于 70us 的时隙，则数据为“1”；如果为低，说明此时处于下一位数据 50us 的开始时隙，那么上一位数据肯定是“0”。\n\n# 驱动实现\n\n## 标准库\n\n```c\n#ifndef _DHT11_H\n#define _DHT11_H\n#include \"stm32f10x.h\"                  // Device header\n\nvoid DHT11_GPIO_Init_OUT(void);\nvoid DHT11_GPIO_Init_IN(void);\nvoid DHT11_Start(void);\nunsigned char DHT11_REC_Byte(void);\nvoid DHT11_REC_Data(void);\n\n#endif\n\n```\n\n```c\n#include \"stm32f10x.h\"                  // Device header\n#include  \"dht11.h\"\n#include  \"SysTick.h\"           // 延时函数\n//数据\nunsigned int rec_data[4];\n\n// GPIOB\n#define DHT11_GPIO_Pin_x GPIO_Pin_11\n\n#define dht11_high GPIO_SetBits(GPIOB, DHT11_GPIO_Pin_x)\n#define dht11_low GPIO_ResetBits(GPIOB, DHT11_GPIO_Pin_x)\n#define Read_Data GPIO_ReadInputDataBit(GPIOB, DHT11_GPIO_Pin_x)\n\n//对于stm32来说，是输出\nvoid DH11_GPIO_Init_OUT(void)\n{\n\tGPIO_InitTypeDef GPIO_InitStructure;\n\t\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);\n\t\n\tGPIO_InitStructure.GPIO_Mode  = GPIO_Mode_Out_PP; //推挽输出\n\tGPIO_InitStructure.GPIO_Pin   = DHT11_GPIO_Pin_x;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\n\t\n\tGPIO_Init(GPIOB, &GPIO_InitStructure);\n\n}\n\n//对于stm32来说，是输入\nvoid DH11_GPIO_Init_IN(void)\n{\n\tGPIO_InitTypeDef GPIO_InitStructure;\n\t\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOB, ENABLE);\n\t\n\tGPIO_InitStructure.GPIO_Mode  = GPIO_Mode_IN_FLOATING; //浮空输入\n\tGPIO_InitStructure.GPIO_Pin   = DHT11_GPIO_Pin_x;\n\tGPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;\n\t\n\tGPIO_Init(GPIOB, &GPIO_InitStructure);\n\n}\n\n//主机发送开始信号\nvoid DHT11_Start(void)\n{\n\tDH11_GPIO_Init_OUT(); //输出模式\n\t\n\tdht11_high; //先拉高\n\tDelay_us(30);\n\t\n\tdht11_low; //拉低电平至少18us\n\tDelay_ms(20); // ms 没错\n\t\n\tdht11_high; //拉高电平20~40us\n\tDelay_us(30);\n\t\n\tDH11_GPIO_Init_IN(); //输入模式\n}\n\n//获取一个字节\nchar DHT11_Rec_Byte(void)\n{\n\tunsigned char i = 0;\n\tunsigned char data;\n\t\n\tfor(i=0;i<8;i++) //1个数据就是1个字节byte，1个字节byte有8位bit\n\t{\n\t\twhile( Read_Data == 0); //从1bit开始，低电平变高电平，等待低电平结束\n\t\tDelay_us(30); //延迟30us是为了区别数据0和数据1，0只有26~28us\n\t\t\n\t\tdata <<= 1; //左移\n\t\t\n\t\tif( Read_Data == 1 ) //如果过了30us还是高电平的话就是数据1\n\t\t{\n\t\t\tdata |= 1; //数据+1\n\t\t}\n\t\t\n\t\twhile( Read_Data == 1 ); //高电平变低电平，等待高电平结束\n\t}\n\t\n\treturn data;\n}\n\n//获取数据\n\nvoid DHT11_REC_Data(void)\n{\n\tunsigned int R_H,R_L,T_H,T_L;\n\tunsigned char RH,RL,TH,TL,CHECK;\n\t\n\tDHT11_Start(); //主机发送信号\n\tdht11_high; //拉高电平\n\t\n\tif( Read_Data == 0 ) //判断DHT11是否响应\n\t{\n\t\twhile( Read_Data == 0); //低电平变高电平，等待低电平结束\n\t\twhile( Read_Data == 1); //高电平变低电平，等待高电平结束\n\t\t\n\t\tR_H = DHT11_Rec_Byte();\n\t\tR_L = DHT11_Rec_Byte();\n\t\tT_H = DHT11_Rec_Byte();\n\t\tT_L = DHT11_Rec_Byte();\n\t\tCHECK = DHT11_Rec_Byte(); //接收5个数据\n\t\t\n\t\tdht11_low; //当最后一bit数据传送完毕后，DHT11拉低总线 50us\n\t\tDelay_us(55); //这里延时55us\n\t\tdht11_high; //随后总线由上拉电阻拉高进入空闲状态。\n\t\t\n\t\tif(R_H + R_L + T_H + T_L == CHECK) //和检验位对比，判断校验接收到的数据是否正确\n\t\t{\n\t\t\tRH = R_H;\n\t\t\tRL = R_L;\n\t\t\tTH = T_H;\n\t\t\tTL = T_L;\n\t\t}\n\t}\n\trec_data[0] = RH;\n\trec_data[1] = RL;\n\trec_data[2] = TH;\n\trec_data[3] = TL;\n}\n\n\n```\n\n```c\n#include \"dht11.h\"\nextern unsigned int rec_data[4]; // 直接使用里面的数据\nint main_task(void)\n{\n    while(1)\n    {\n\t\t// 直接使用rec_data里面的数据。注意间隔一定时间再读取，以免错误。\n    }\n}\n```\n## HAL\n\nDHT11 对时序要求严格，需要微妙级延时，我们常用的 HAL_Delay 是毫秒级时延。由于 FreeRTOS 是不支持微秒级延时的，需要自己定义微秒级别的延时函数（详见：[[STM32 延时函数（FreeRTOS）]]。\n\n```c\n#ifndef __dht11_h\n#define __dht11_h\n\nextern uint8_t temperature;         \nextern uint8_t humidity; \n\nvoid DHT11_REST(void);                            //复位DHT11\nuint8_t DHT11_Check(void);                       //DHT11状态反馈\nuint8_t DHT11_Read_Bit(void);                    //读DHT11一位数据\nuint8_t DHT11_Read_Byte(void);                   //读DHT11一字节数据\nuint8_t DHT11_Read_Data(uint8_t* humi,uint8_t* temp);     //DHT11数据显示\n\n#endif /*__dht11_h*/\n\n```\n\n```c\n\n#include \"stm32f1xx_hal.h\"\n#include \"delay.h\" # us级延时函数\n\n#define DHT11_GPIOx\t\tGPIOB\n#define DHT11_GPIO_PIN\tGPIO_PIN_11\n\nuint8_t temperature;      //给一个初始化,用以判断               \nuint8_t humidity; \n\nvoid DHT11_OUT(void )//输出引脚\n{\n\tGPIO_InitTypeDef GPIO_InitStruct;\n\tGPIO_InitStruct.Pin = DHT11_GPIO_PIN;\n\tGPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;\n\tGPIO_InitStruct.Pull = GPIO_PULLUP;\n\tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n\tHAL_GPIO_Init(DHT11_GPIOx, &GPIO_InitStruct);\n}\nvoid DHT11_IN(void )//输入引脚\n{\n\tGPIO_InitTypeDef GPIO_InitStruct;\n\tGPIO_InitStruct.Pin = DHT11_GPIO_PIN;\n\tGPIO_InitStruct.Mode = GPIO_MODE_INPUT ;\n\tGPIO_InitStruct.Pull = GPIO_PULLUP;\n\tGPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;\n\tHAL_GPIO_Init(DHT11_GPIOx, &GPIO_InitStruct);\n}\n\nvoid DHT11_REST(void ) //主机发出起始信号\n{\n\tDHT11_OUT();\n\tHAL_GPIO_WritePin (DHT11_GPIOx ,DHT11_GPIO_PIN ,GPIO_PIN_RESET );\n\tHAL_Delay (20); // ms\n\tHAL_GPIO_WritePin (DHT11_GPIOx ,DHT11_GPIO_PIN ,GPIO_PIN_SET );\n\tdelay_us (30);\n}\n\n//gpio端口为输入模式时,配置为上拉输入或者浮空输入,因外接上拉电阻,默认为高电平\n//当有负信号输入时,gpio端口为1.\n//若有负信号输入，当信号引脚连接到GND或者其他低电平信号时，GPIO端口会检测到低电平并显示为0。\n//这是因为负信号的优先级高于上拉电阻的电平设置。\n\n\nuint8_t DHT11_Check(void)\n{\n    uint8_t retry = 0;\n\n    DHT11_IN();  // 设置数据引脚为输入模式\n\n    while (HAL_GPIO_ReadPin(DHT11_GPIOx, DHT11_GPIO_PIN) == 1 && retry < 80)\n    {\n        retry++;\n        delay_us(1);  // 延迟1微秒\n    }\n\n    if (retry >= 80)\n        return 1;  // 如果在规定时间内引脚仍为高电平，表示传感器未响应，返回错误代码 1\n    else\n        retry = 0;\n\n    while (HAL_GPIO_ReadPin(DHT11_GPIOx, DHT11_GPIO_PIN) == 0 && retry < 80)\n    {\n        retry++;\n        delay_us(1);  // 延迟1微秒\n    }\n\n    if (retry >= 80)\n        return 1;  // 如果在规定时间内引脚仍为低电平，表示传感器未响应，返回错误代码 1\n\n    return 0;  // 传感器响应正常，返回成功代码 0\n}\n//读取一个位,参考高低电平的时序\nuint8_t DHT11_Read_Bit(void)\n{\n\tuint8_t retry=0;\n\twhile((HAL_GPIO_ReadPin (DHT11_GPIOx ,DHT11_GPIO_PIN)==1) && (retry <100))\n\t{\n\t\tretry ++;\n\t\tdelay_us (1);\n\t}\n\tretry=0;\n\twhile((HAL_GPIO_ReadPin(DHT11_GPIOx ,DHT11_GPIO_PIN)==0) && (retry <100))\n\t{\n\t\tretry ++;\n\t\tdelay_us (1);\n\t}\n\tdelay_us (40);\n\tif(HAL_GPIO_ReadPin (DHT11_GPIOx ,DHT11_GPIO_PIN )==1)\n\t\treturn 1;// 返回读取到的位为高电平\n\telse \n\t\treturn 0;// 返回读取到的位为低电平\n}\n\n//读取一个字节,接收数据\nuint8_t DHT11_Read_Byte(void)\n{\n\tuint8_t dat=0;\n\tfor(uint8_t i=0;i<8;i++)\n\t{\n\t\tdat <<= 1;\n\t\tdat |= DHT11_Read_Bit();\n\t}\n\treturn dat;\n\n}\n//更据上面的数据格式,解码数据\nuint8_t DHT11_Read_Data(uint8_t* humi, uint8_t* temp)\n{\n    uint8_t buf[5];  // 存储读取到的5个字节数据的缓冲区\n\n    DHT11_REST();  // 初始化传感器通信\n\n    if (DHT11_Check() == 0)  // 检查传感器是否正常响应\n    {\n        for (uint8_t i = 0; i < 5; i++)\n            buf[i] = DHT11_Read_Byte();  // 逐个字节读取传感器发送的数据\n\n        if ((buf[0] + buf[1] + buf[2] + buf[3]) == buf[4])  // 校验数据的准确性\n        {\n            *humi = buf[0];  // 将湿度值存储到指定的变量中\n            *temp = buf[2];  // 将温度值存储到指定的变量中\n        }\n    }\n    else\n    {\n        return 1;  // 传感器响应异常，返回错误代码\n    }\n\n    return 0;  // 读取数据成功，返回正常代码\n}\n\n\n\n```\n\n```c\n#include \"dht11.h\"\n\nint main_task(void)\n{\n\tDHT11_REST();                 //复位DHT11\n\twhile(DHT11_Check())                           //检测DHT11连接\n\t{\n\t  OLED_ShowString(1,1,\"DHT11 No Connect!\");\n\t  HAL_Delay(500);\n\t}\n    while(1)\n    {\n\t\tDHT11_Read_Data(&humidity,&temperature);\n\t\t// 使用temperature和humidity\n    }\n}\n```\n\n# 后记\n\n本文 PlantUML 文本存档：\n\n```plantuml\n@startuml\nbinary \"Level\" as L\nconcise \"状态\" as S\nscale 100 as 150 pixels\n@0\nL is low\nS is 复位\n\n@+48\nL is high\nL@0 <-> @48: 18ms\n\n@+30\nL is low\nS is DHT响应信号\nL@48 <-> @78: 20-40us\n\n@+80\nL is high\n\nL@78 <-> @158: 80us\n\n@+80\nL is low\nS is DHT传输数据\nL@158 <-> @238: 80us\n\nhighlight 0 to 78 #b4d9ff;line:DimGrey : 主机\nhighlight 348 to 400 #b4d9ff;line:DimGrey : 主机\n@+10\nL is {low,high}\n@+50\nL is low\nS is DHT拉低\n@+50\nL is high\nS is 主机控制\nL@298 <-> @348: 50us\n\n@enduml\n```\n\n```plantuml\n@startuml\nbinary \"数据0\" as Z\nbinary \"数据1\" as O\nscale 100 as 180 pixels\n@0\nZ is low\nO is low\n\n@+50\nZ is high\nO is high\nZ@0 <-> @50: 50us时隙\nO@0 <-> @50: 50us时隙\n\n@50\nZ is high\nO is high\n\n@77\nZ is low\nZ@50 <-> @77: 26-28us\nZ@77 <-> @250: 下一bit\n@120\nO is low\nO@50 <-> @120: 70us\nO@120 <-> @250: 下一bit\n\n@127\nZ is {low,high}\n\n@170\n\nO is {low,high}\n\n@250\n\nZ is low\nO is low\n\n@enduml\n```\n\n# 本文参考\n- [DHT11详细介绍（内含51和STM32代码）-CSDN博客](https://blog.csdn.net/m0_55849362/article/details/126426768)\n- [手把手教你玩转DHT11（原理+驱动） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/671411357)\n- [【STM32(HAL库)--DHT11温湿度传感器】_使用hal库对dht11进行采集-CSDN博客](https://blog.csdn.net/m0_69414528/article/details/133927246)\n\n","categories":[{"name":"嵌入式","api":"api/categories/嵌入式.json"}],"tags":[{"name":"C","api":"api/tags/C.json"},{"name":"DHT11","api":"api/tags/DHT11.json"},{"name":"驱动","api":"api/tags/驱动.json"},{"name":"STM32","api":"api/tags/STM32.json"},{"name":"HAL","api":"api/tags/HAL.json"}]},"api":"api/posts/p/c497cb3f.json"}