{"data":{"title":"ESP8266 烧写 AT MQTT 固件","slug":"嵌入式/ESP8266 烧写 AT MQTT 固件","description":"记录一下 ESP8266 烧写固件的基本步骤。","date":"2024-04-01T08:54:51.000Z","updated":"2024-04-05T07:47:54.414Z","language":"zh-CN","comments":true,"url":"p/a587bc70/","cover":"https://cdn.gallery.uuanqin.top/img/20240404230231.webp","images":[],"content":"<p>文章开头简单介绍 ESP8266（引自 <a href=\"https://www.zhihu.com/people/yychuyu\">知乎用户</a>）。</p>\n<p>ESP8266 是一个非常强大的 WIFI 模块，可以利用串口与单片机进行通讯，从而编程实现控制 ESP8266。利用 ESP8266 可以访问一些 API，获取天气信息或者完成网络授时，也可以连接云平台进行开发。不过因为是串口传输，速度较慢，不能用来传输图像、视频这些大容量的数据，但是传些传感器数据还是绰绰有余的。</p>\n<p>我们常说的 ESP8266 是指 ESP8266 WIFI 模块，它是物联网和嵌入式开发常用的模块，其中 ESP8266 是 WIFI 模块的芯片型号。</p>\n<p>ESP8266 有 ESP-01/01S/07/07S/12E/12F/12S 等规格，还有正点原子自研的 ATK-ESP8266 （修改了固件及模组引脚）。</p>\n<h1 id=\"材料准备\"><a class=\"markdownIt-Anchor\" href=\"#材料准备\"></a> 材料准备</h1>\n<p>本文所需材料：</p>\n<ul>\n<li>USB 转 TTL。用于烧写固件及测试。</li>\n<li>ESP8266 模块（ESP-01S）</li>\n<li>母对母、公对母（可选）杜邦线若干</li>\n<li>（可选）稳定的 3V3 电源供应</li>\n</ul>\n<p>下面两幅图分别展示文章使用的 USB 转 TTL 模块以及 ESP8266（ESP-01S）模块。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401173653.webp\" alt=\"usb-ttl\" width=\"279px\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401173445.webp\" alt=\"esp8266\" width=\"475px\" /></p>\n<h1 id=\"固件与烧录程序下载\"><a class=\"markdownIt-Anchor\" href=\"#固件与烧录程序下载\"></a> 固件与烧录程序下载</h1>\n<p>这里以安信可科技固件举例。进入官网的固件下载页：<a href=\"https://docs.ai-thinker.com/%E5%9B%BA%E4%BB%B6%E6%B1%87%E6%80%BB\">AT固件汇总 | 安信可科技 (ai-thinker.com)</a></p>\n<p>这两个是可以选择下载的固件，它们的区别是：</p>\n<ul>\n<li>固件 1112 是 4M 版本的</li>\n<li>固件 1471 是 1M 版本的<br />\n<img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401165810.webp\" alt=\"image.png\" width=\"500px\" /><br />\n<img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401165818.webp\" alt=\"image.png\" width=\"500px\" /></li>\n</ul>\n<p>根据需要选择一个下载就行。比如我的 ESP8266 不支持 4M 版本的（烧录程序提示烧录失败），这里就下载 1M 的那个。</p>\n<p>下载后得到的关键的两个 Bin 文件名分别为：</p>\n<ul>\n<li>（1112）ESP8266-AT-4M.bin</li>\n<li>（1471）ESP8266-AT_MQTT-1M.bin</li>\n</ul>\n<p>烧录程序为：flash_download_tool。软件可以在搜索引擎中寻找，其界面大致如下：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401170407.webp\" alt=\"image.png\" width=\"325px\" /></p>\n<h1 id=\"连线\"><a class=\"markdownIt-Anchor\" href=\"#连线\"></a> 连线</h1>\n<table>\n<thead>\n<tr>\n<th>ESP8266</th>\n<th>USB-TTL</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>3V3</td>\n<td>5V（不建议）</td>\n<td>连接 UST-TTL 的 <code>3V3</code> 口电流不稳定会导致 ESP8266 频繁重启，一般连接<code>5V</code>。而连接 <code>5V</code> 会导致 ESP8266 发烫，有模块烧毁风险。因此建议使用稳定的外部电源供电。这里我使用的就是 STM32 的 3V3 供电。</td>\n</tr>\n<tr>\n<td colspan=\"2\">GND</td>\n<td></td>\n</tr>\n<tr>\n<td>TX</td>\n<td>RXD</td>\n<td rowspan=\"2\">建议采用直接连接、短线连接的方式以提高成功率。</td>\n</tr>\n<tr>\n<td>RX</td>\n<td>TXD</td>\n</tr>\n<tr>\n<td>IO0</td>\n<td rowspan=\"2\"></td>\n<td>暂时悬空。<code>IO0</code> 接地后，模块进入烧写模式。</td>\n</tr>\n<tr>\n<td>RST</td>\n<td>暂时悬空。</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"烧录\"><a class=\"markdownIt-Anchor\" href=\"#烧录\"></a> 烧录</h1>\n<p>打开烧录软件，选择 ESP8266。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401170348.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>选择要烧录的固件。固件烧写地址为 0x00。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401171824.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>安照说明和需求进行配置。鼠标悬停会有选项提示。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401172144.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>选择正确的串口 <code>COM</code>。如果你正在使用其它串口助手记得关闭一下对应串口，避免串口占用导致烧录失败。波特率 <code>BAUD</code> 选择越高下载越快。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401171905.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>烧录前保证 ESP8266 的 <code>IO0</code> 口已接地。</p>\n<p>点击 START 后开始烧写。若显示等待上电复位，此时请将 ESP8266 模块 <code>RST</code> 引脚接一下地后再次悬空。</p>\n<p>出现 FINISH 说明下载完成。</p>\n<h1 id=\"测试\"><a class=\"markdownIt-Anchor\" href=\"#测试\"></a> 测试</h1>\n<p>关闭烧录软件。将 <code>IO0</code> 引脚悬空或置高。</p>\n<p>打开你习惯用的串口助手软件。选择正确的端口和波特率，在不经设置的情况下ESP8266 默认波特率为 115200。发送 AT 指令时记得以回车换行结尾。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240401172745.webp\" alt=\"image.png\" /></p>\n<p>向ESP8266发送命令 <code>AT</code>，正常情况下应返回 <code>OK</code>。</p>\n<p>后续就可以进行 MQTT 配置相关测试以验证固件是否烧写成功并正确运行。</p>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://zhuanlan.zhihu.com/p/671685854\">手把手教你玩转ESP8266（原理+驱动） - 知乎 (zhihu.com)</a></li>\n<li><a href=\"https://blog.csdn.net/Hugo_1st/article/details/91046766\">关于ESP8266固件烧写无法上电同步问题的解决办法_esp01s固件烧录等待上电同步-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/CSDNhuaong/article/details/67633566\">ESP8266模块接线篇 （正常运行&amp;烧录固件）_esp8266接线图-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/m0_56399733/article/details/134798389\">WiFi模块ESP8266(超详细)—(含固件库、AP、STA、原子云使用)_esp8266wifi模块-CSDN博客</a></li>\n<li><a href=\"https://www.bilibili.com/video/BV1Xz4y1n7Uh?p=5&amp;vd_source=e03d48176855fc5349b27aef691f9cdb\">第05集 通过at命令的方式控制esp8266发布与订阅消息_哔哩哔哩_bilibili</a></li>\n<li><a href=\"https://blog.csdn.net/weixin_50950983/article/details/124713384\">ESP8266 刷MQTT固件以及连接服务器失败的问题解决_mqttdisconnected:0-CSDN博客</a></li>\n<li><a href=\"https://www.cnblogs.com/frozencandles/p/16468361.html\">STM32与物联网01-ESP8266基本操作 - 冰封残烛 - 博客园 (cnblogs.com)</a></li>\n<li><a href=\"https://blog.csdn.net/Utotao/article/details/88942864\">基于STM32串口通信的ESP8266WiFi模块使用_cipmux and cipserver must be 0-CSDN博客</a></li>\n</ul>\n","raw":"---\ntitle: ESP8266 烧写 AT MQTT 固件\ntags:\n  - ESP8266\n  - UST-TTL\n  - MQTT\n  - 物联网\n  - WIFI\ncover: 'https://cdn.gallery.uuanqin.top/img/20240404230231.webp'\ndescription: 记录一下 ESP8266 烧写固件的基本步骤。\ncategories:\n  - 嵌入式\nabbrlink: a587bc70\ndate: 2024-04-01 16:54:51\ntop_img:\n---\n\n文章开头简单介绍 ESP8266（引自 [知乎用户](https://www.zhihu.com/people/yychuyu)）。\n\nESP8266 是一个非常强大的 WIFI 模块，可以利用串口与单片机进行通讯，从而编程实现控制 ESP8266。利用 ESP8266 可以访问一些 API，获取天气信息或者完成网络授时，也可以连接云平台进行开发。不过因为是串口传输，速度较慢，不能用来传输图像、视频这些大容量的数据，但是传些传感器数据还是绰绰有余的。\n\n我们常说的 ESP8266 是指 ESP8266 WIFI 模块，它是物联网和嵌入式开发常用的模块，其中 ESP8266 是 WIFI 模块的芯片型号。\n\nESP8266 有 ESP-01/01S/07/07S/12E/12F/12S 等规格，还有正点原子自研的 ATK-ESP8266 （修改了固件及模组引脚）。\n\n# 材料准备\n\n本文所需材料：\n\n- USB 转 TTL。用于烧写固件及测试。\n- ESP8266 模块（ESP-01S）\n- 母对母、公对母（可选）杜邦线若干\n- （可选）稳定的 3V3 电源供应\n\n下面两幅图分别展示文章使用的 USB 转 TTL 模块以及 ESP8266（ESP-01S）模块。\n\n![usb-ttl|279](https://cdn.gallery.uuanqin.top/img/20240401173653.webp)\n\n![esp8266|475](https://cdn.gallery.uuanqin.top/img/20240401173445.webp)\n\n# 固件与烧录程序下载\n\n这里以安信可科技固件举例。进入官网的固件下载页：[AT固件汇总 | 安信可科技 (ai-thinker.com)](https://docs.ai-thinker.com/%E5%9B%BA%E4%BB%B6%E6%B1%87%E6%80%BB)\n\n这两个是可以选择下载的固件，它们的区别是：\n\n- 固件 1112 是 4M 版本的\n- 固件 1471 是 1M 版本的\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240401165810.webp)\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240401165818.webp)\n\n根据需要选择一个下载就行。比如我的 ESP8266 不支持 4M 版本的（烧录程序提示烧录失败），这里就下载 1M 的那个。\n\n下载后得到的关键的两个 Bin 文件名分别为：\n\n- （1112）ESP8266-AT-4M.bin\n- （1471）ESP8266-AT_MQTT-1M.bin\n\n烧录程序为：flash_download_tool。软件可以在搜索引擎中寻找，其界面大致如下：\n\n![image.png|325](https://cdn.gallery.uuanqin.top/img/20240401170407.webp)\n\n# 连线\n\n| ESP8266 | USB-TTL | 备注                                                                                                                          |\n| ------- | ------- | --------------------------------------------------------------------------------------------------------------------------- |\n| 3V3     | 5V（不建议） | 连接 UST-TTL 的 `3V3` 口电流不稳定会导致 ESP8266 频繁重启，一般连接`5V`。而连接 `5V` 会导致 ESP8266 发烫，有模块烧毁风险。因此建议使用稳定的外部电源供电。这里我使用的就是 STM32 的 3V3 供电。 |\n| GND     | GND     |                                                                                                                             |\n| TX      | RXD     | 建议采用直接连接、短线连接的方式以提高成功率。                                                                                                     |\n| RX      | TXD     | 建议采用直接连接、短线连接的方式以提高成功率。                                                                                                     |\n| IO0     |         | 暂时悬空。`IO0` 接地后，模块进入烧写模式。                                                                                                    |\n| RST     |         | 暂时悬空。                                                                                                                       |\n\n# 烧录\n\n打开烧录软件，选择 ESP8266。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240401170348.webp)\n\n选择要烧录的固件。固件烧写地址为 0x00。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240401171824.webp)\n\n安照说明和需求进行配置。鼠标悬停会有选项提示。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240401172144.webp)\n\n选择正确的串口 `COM`。如果你正在使用其它串口助手记得关闭一下对应串口，避免串口占用导致烧录失败。波特率 `BAUD` 选择越高下载越快。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240401171905.webp)\n\n烧录前保证 ESP8266 的 `IO0` 口已接地。\n\n点击 START 后开始烧写。若显示等待上电复位，此时请将 ESP8266 模块 `RST` 引脚接一下地后再次悬空。\n\n出现 FINISH 说明下载完成。\n\n# 测试\n\n关闭烧录软件。将 `IO0` 引脚悬空或置高。\n\n打开你习惯用的串口助手软件。选择正确的端口和波特率，在不经设置的情况下ESP8266 默认波特率为 115200。发送 AT 指令时记得以回车换行结尾。\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240401172745.webp)\n\n向ESP8266发送命令 `AT`，正常情况下应返回 `OK`。\n\n后续就可以进行 MQTT 配置相关测试以验证固件是否烧写成功并正确运行。\n\n# 本文参考\n- [手把手教你玩转ESP8266（原理+驱动） - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/671685854)\n- [关于ESP8266固件烧写无法上电同步问题的解决办法_esp01s固件烧录等待上电同步-CSDN博客](https://blog.csdn.net/Hugo_1st/article/details/91046766)\n- [ESP8266模块接线篇 （正常运行&烧录固件）_esp8266接线图-CSDN博客](https://blog.csdn.net/CSDNhuaong/article/details/67633566)\n- [WiFi模块ESP8266(超详细)---(含固件库、AP、STA、原子云使用)_esp8266wifi模块-CSDN博客](https://blog.csdn.net/m0_56399733/article/details/134798389)\n- [第05集 通过at命令的方式控制esp8266发布与订阅消息_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Xz4y1n7Uh?p=5&vd_source=e03d48176855fc5349b27aef691f9cdb)\n- [ESP8266 刷MQTT固件以及连接服务器失败的问题解决_mqttdisconnected:0-CSDN博客](https://blog.csdn.net/weixin_50950983/article/details/124713384)\n- [STM32与物联网01-ESP8266基本操作 - 冰封残烛 - 博客园 (cnblogs.com)](https://www.cnblogs.com/frozencandles/p/16468361.html)\n- [基于STM32串口通信的ESP8266WiFi模块使用_cipmux and cipserver must be 0-CSDN博客](https://blog.csdn.net/Utotao/article/details/88942864)\n","categories":[{"name":"嵌入式","api":"api/categories/嵌入式.json"}],"tags":[{"name":"ESP8266","api":"api/tags/ESP8266.json"},{"name":"UST-TTL","api":"api/tags/UST-TTL.json"},{"name":"MQTT","api":"api/tags/MQTT.json"},{"name":"物联网","api":"api/tags/物联网.json"},{"name":"WIFI","api":"api/tags/WIFI.json"}]},"api":"api/posts/p/a587bc70.json"}