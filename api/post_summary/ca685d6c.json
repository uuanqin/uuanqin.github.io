{"title":"【开发杂记】第一次开发 npm 插件","tags":["碎碎念","开发杂记"],"cover":"https://cdn.gallery.uuanqin.top/img/RTFM_header_2cover.webp","categories":["百味人生","有感而发"],"abbrlink":"ca685d6c","description":"有文档了也看不懂","date":"2023-10-20T18:51:47.000Z","top_img":null,"summary":"早些时间就折腾了 Hexo 与 Obsidian 联合工作的问题。将 Obsidian 上好用的新语法移植到 Hexo 往往只差一个 markdown 渲染环节。 在苦苦的搜寻和探索过程中，我解决了 Obsidian 中 Callouts 语法问题，同时接触了 markdown-it-plugin。正是 这篇文章 为我打开了一扇新世界的大门。后来，我的目光一直从 hexo-plugin 和 markdown-it-plugin 之间徘徊，甚至萌生脚本全文替换的想法。出于易用性和普遍性的考虑，我最终决定直接开发一款 markdown-it-plugin 解决 Obsidian 语法问题。 入手 markdown-it 插件开发其实并不简单，虽说存在官方文档，但阅读门槛较高。 经过资料查阅，大多数的中英文博客文章（甚至是 markdown-it 本 it）都建议从模仿开始入手，官方并没有心思写过于详细的手把手教程（有趣的是，关于这个问题，官方仓库论坛甚至可以看到 开发者骂街🤭） > [!cite] > widcardw：markdown-it 的官方文档只是给了一部分案例，用于指导如何使用它的 API，将它接入到 Web 程序中，但是光看它的文档，我并没有找到写插件的头绪。因此，写插件的最好办法就是抄别人的代码。 > > How to write plugins? #10 > Q: There are no any documentation or tutorial on how to write syntax plugins for Markdown-it, neither in this repository nor in internet. > A: Yes, at current time it's better to look into parser src, or existing pugins. I will add more examples & explanations, but do not expect it to be in top priority. 有了这条明确的方向，我的插件开发探索开始了。 首先，我需要明白 markdown-it 插件基本结构与开发方法。这一点官方是提供了一个基本概念和文档的。..."}