{"data":{"title":"MAJOR的配置与基本使用","slug":"工具箱/软件测试工具/MAJOR的配置与基本使用","description":"需要在Linux环境下才不会出现错误。请仔细研读MAJOR官方的PDF。","date":"2022-03-24T13:52:53.000Z","updated":"2025-09-26T16:04:48.797Z","language":"zh-CN","comments":true,"url":"p/3cb26000/","cover":"https://cdn.gallery.uuanqin.top/img/MAJOR.png","images":[],"content":"<p>MAJOR今天捣鼓了很久，呕心沥血才弄出来。。。没力气详述了。<strong>如果对major里的命令和文件有疑惑，请详详细细看MAJOR的PDF进行学习！</strong></p>\n<p>在开始之前，首先获取MAJOR的指导文件：<a href=\"http://mutation-testing.org/doc/major.pdf\">http://mutation-testing.org/doc/major.pdf</a>，详细阅读后如有问题可看接下来的简单操作使用。</p>\n<h1 id=\"环境与配置\"><a class=\"markdownIt-Anchor\" href=\"#环境与配置\"></a> 环境与配置</h1>\n<p>下载好压缩包后，解压到你想安装的地方即可，比如<strong>D:/major</strong>下。文件结构如图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-62.png\" alt=\"\" /></p>\n<p>配置好系统的环境变量：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-63-1024x447.png\" alt=\"\" /></p>\n<p>注意哦，确保在新配的这个路径里，有javac、ant等这些程序哦</p>\n<p>输入命令：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">javac -version</span><br></pre></td></tr></table></figure>\n<p>这里不是说你在Windows命令行输入命令返回出内容就可以了。</p>\n<p>比如返回：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-644.png\" alt=\"\" /></p>\n<p>这里返回的不是MAJOR里的javac程序。由于未知原因，即使配置好了环境变量，但是Windows下无法执行D:\\major\\bin下的javac（它总是弹出打开方式的选择框）。这里我换成了LINUX环境。</p>\n<p><strong>【以下操作均在WSL配合下进行。Ubuntu-20.04】</strong>（当然使用虚拟机是可以的。附：<a href=\"https://www.cnblogs.com/lepeCoder/p/wsl_dir.html\">windows10 ubuntu子系统 WSL文件位置</a>）</p>\n<p>[wpdiscuz-feedback id=“ssas9ftfam” question=“有疑惑？请对此提供反馈” opened=“0”][/wpdiscuz-feedback]</p>\n<p>首先在Linux下准备好Java环境。下图展示无Java环境情形：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/QQ截图20220324170844.png\" alt=\"\" /></p>\n<p>附安装过程中出现<strong>E: Unable to locate package openjdk-8-jre</strong> 失败的解决（下图）:<br />\n<a href=\"https://blog.csdn.net/u012956987/article/details/107448548\">E: Unable to locate package openjdk-8-jre ubuntu 20.04安装jdk 失败_学无止境qwer的博客-CSDN博客</a><br />\n<a href=\"https://blog.csdn.net/appleyuchi/article/details/105103293\">Errors were encountered while processing 解决方法_微电子学与固体电子学-俞驰的博客-CSDN博客</a></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/QQ截图20220324170858.png\" alt=\"\" /></p>\n<p>Java安装失败示例</p>\n<p>安装成功检查：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/QQ截图20220324170821.png\" alt=\"\" /></p>\n<p>这时候再检查javac：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/QQ截图20220324170809.png\" alt=\"\" /></p>\n<p>这才和官方的pdf中显示得差不多，才算成功。</p>\n<p>**新增：**再做以下检查</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-71-1024x104.png\" alt=\"\" /></p>\n<p><strong>注意：<strong>如果在过程中，中途有修正过环境变量，请</strong>新建一个终端</strong>或<strong>退出终端后重新进来</strong>再试一试！如果还不行，请<strong>卸载Linux里的Java再重新安装</strong>！亲测有效。</p>\n<h1 id=\"复制\"><a class=\"markdownIt-Anchor\" href=\"#复制\"></a> 复制</h1>\n<p>MAJOR文件夹里边example是两个例子，我们需要把例子里边的一些东西复制到我们待测试的Java项目中来。你的Java项目应该是这个样子：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-6555.png\" alt=\"\" /></p>\n<p>把all.mml（在mml文件夹下）、build.xml（在example/ant下）搬过来。</p>\n<p>执行：(感谢日日快乐童鞋指正)</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">$ mmlc all.mml all.mml.bin</span><br></pre></td></tr></table></figure>\n<p>生成了一个all.mml.bin文件。build.xml需要进行修改。</p>\n<p>（例子中的这个all.mml指的是生成所有种类的变异算子。如果MML自己写的话，通过mmlc可以自己生成这个.bin文件。）</p>\n<p>注意，测试类不要使用参数化编程。会有未知错误。</p>\n<p>[wpdiscuz-feedback id=“ssas9ftfam” question=“有疑惑？请对此提供反馈” opened=“0”][/wpdiscuz-feedback]</p>\n<p>下面是跟据我的项目目录结构，按需修改build.xml。（考验你洞察力的时候到了！！😲）</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-66666.png\" alt=\"\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-6567.png\" alt=\"\" /></p>\n<p>更正图片文字：“根据你的测试文件位置按需修改”</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-ssa68.png\" alt=\"\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-asd72.png\" alt=\"\" /></p>\n<h1 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h1>\n<p>还记得MAJOR那两个例子吗。在D:/major/example/ant文件夹下，有一个run.sh的例子。以它作为参考，我们做这些执行：</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ant -DmutOp=<span class=\"string\">&quot;=all.mml.bin&quot;</span> clean compile</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ant compile.tests</span></span><br><span class=\"line\"><span class=\"meta prompt_\">$ </span><span class=\"language-bash\">ant mutation.test</span></span><br></pre></td></tr></table></figure>\n<p>注意：执行命令的位置和build.xml是同一个目录。</p>\n<p>最后的结果大图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-69-1024x794.png\" alt=\"\" /></p>\n<h1 id=\"其他问题\"><a class=\"markdownIt-Anchor\" href=\"#其他问题\"></a> 其他问题</h1>\n<p>有童鞋出现了以下问题，对部分问题提供了解决思路。供参考：</p>\n<ul>\n<li>ant -version 查到的不是major自带的那个。解决方法，删掉Linux里的那个ant。</li>\n<li>在复制Windows的major到WSL里，没在Linux里配环境变量的话，javac、ant总有一个在命令行找不到。只有在Windows里边原有的项目，打开Linux环境，按照与我一样的做法才行。</li>\n<li>如果一个变异体都杀不死/没覆盖，请尝试检查mutants.log是否有变异体生成，然后再检查build.xml有没有改好。</li>\n</ul>\n<h1 id=\"更多参考\"><a class=\"markdownIt-Anchor\" href=\"#更多参考\"></a> 更多参考</h1>\n<p>关于Ant里的Junit各种属性手册：<a href=\"https://ant.apache.org/manual/Tasks/junit.html\">JUnit Task (apache.org)</a></p>\n","raw":"---\ntitle: MAJOR的配置与基本使用\ntags:\n  - MAJOR\n  - WSL\n  - 安装\ncategories:\n  - 工具箱\n  - 软件测试工具\ndescription: 需要在Linux环境下才不会出现错误。请仔细研读MAJOR官方的PDF。\ncover: 'https://cdn.gallery.uuanqin.top/img/MAJOR.png'\nabbrlink: 3cb26000\ndate: 2022-03-24 21:52:53\n---\n\nMAJOR今天捣鼓了很久，呕心沥血才弄出来。。。没力气详述了。**如果对major里的命令和文件有疑惑，请详详细细看MAJOR的PDF进行学习！**\n\n在开始之前，首先获取MAJOR的指导文件：[http://mutation-testing.org/doc/major.pdf](http://mutation-testing.org/doc/major.pdf)，详细阅读后如有问题可看接下来的简单操作使用。\n\n# 环境与配置\n\n下载好压缩包后，解压到你想安装的地方即可，比如**D:/major**下。文件结构如图：\n\n![](https://cdn.gallery.uuanqin.top/img/image-62.png)\n\n配置好系统的环境变量：\n\n![](https://cdn.gallery.uuanqin.top/img/image-63-1024x447.png)\n\n注意哦，确保在新配的这个路径里，有javac、ant等这些程序哦\n\n输入命令：\n\n```shell\njavac -version\n```\n\n这里不是说你在Windows命令行输入命令返回出内容就可以了。\n\n比如返回：\n\n![](https://cdn.gallery.uuanqin.top/img/image-644.png)\n\n这里返回的不是MAJOR里的javac程序。由于未知原因，即使配置好了环境变量，但是Windows下无法执行D:\\\\major\\\\bin下的javac（它总是弹出打开方式的选择框）。这里我换成了LINUX环境。\n\n**【以下操作均在WSL配合下进行。Ubuntu-20.04】**（当然使用虚拟机是可以的。附：[windows10 ubuntu子系统 WSL文件位置](https://www.cnblogs.com/lepeCoder/p/wsl_dir.html)）\n\n\\[wpdiscuz-feedback id=\"ssas9ftfam\" question=\"有疑惑？请对此提供反馈\" opened=\"0\"\\]\\[/wpdiscuz-feedback\\]\n\n首先在Linux下准备好Java环境。下图展示无Java环境情形：\n\n![](https://cdn.gallery.uuanqin.top/img/QQ%E6%88%AA%E5%9B%BE20220324170844.png)\n\n附安装过程中出现**E: Unable to locate package openjdk-8-jre** 失败的解决（下图）:  \n[E: Unable to locate package openjdk-8-jre ubuntu 20.04安装jdk 失败\\_学无止境qwer的博客-CSDN博客](https://blog.csdn.net/u012956987/article/details/107448548)  \n[Errors were encountered while processing 解决方法\\_微电子学与固体电子学-俞驰的博客-CSDN博客](https://blog.csdn.net/appleyuchi/article/details/105103293)\n\n![](https://cdn.gallery.uuanqin.top/img/QQ%E6%88%AA%E5%9B%BE20220324170858.png)\n\nJava安装失败示例\n\n安装成功检查：\n\n![](https://cdn.gallery.uuanqin.top/img/QQ%E6%88%AA%E5%9B%BE20220324170821.png)\n\n这时候再检查javac：\n\n![](https://cdn.gallery.uuanqin.top/img/QQ%E6%88%AA%E5%9B%BE20220324170809.png)\n\n这才和官方的pdf中显示得差不多，才算成功。\n\n**新增：**再做以下检查\n\n![](https://cdn.gallery.uuanqin.top/img/image-71-1024x104.png)\n\n**注意：**如果在过程中，中途有修正过环境变量，请**新建一个终端**或**退出终端后重新进来**再试一试！如果还不行，请**卸载Linux里的Java再重新安装**！亲测有效。\n\n# 复制\n\nMAJOR文件夹里边example是两个例子，我们需要把例子里边的一些东西复制到我们待测试的Java项目中来。你的Java项目应该是这个样子：\n\n![](https://cdn.gallery.uuanqin.top/img/image-6555.png)\n\n把all.mml（在mml文件夹下）、build.xml（在example/ant下）搬过来。\n\n执行：(感谢日日快乐童鞋指正)\n\n```bash\n$ mmlc all.mml all.mml.bin\n```\n\n生成了一个all.mml.bin文件。build.xml需要进行修改。\n\n（例子中的这个all.mml指的是生成所有种类的变异算子。如果MML自己写的话，通过mmlc可以自己生成这个.bin文件。）\n\n注意，测试类不要使用参数化编程。会有未知错误。\n\n\\[wpdiscuz-feedback id=\"ssas9ftfam\" question=\"有疑惑？请对此提供反馈\" opened=\"0\"\\]\\[/wpdiscuz-feedback\\]\n\n下面是跟据我的项目目录结构，按需修改build.xml。（考验你洞察力的时候到了！！😲）\n\n![](https://cdn.gallery.uuanqin.top/img/image-66666.png)\n\n![](https://cdn.gallery.uuanqin.top/img/image-6567.png)\n\n更正图片文字：“根据你的测试文件位置按需修改”\n\n![](https://cdn.gallery.uuanqin.top/img/image-ssa68.png)\n\n![](https://cdn.gallery.uuanqin.top/img/image-asd72.png)\n\n# 使用\n\n还记得MAJOR那两个例子吗。在D:/major/example/ant文件夹下，有一个run.sh的例子。以它作为参考，我们做这些执行：\n\n```shell\n$ ant -DmutOp=\"=all.mml.bin\" clean compile\n$ ant compile.tests\n$ ant mutation.test\n```\n\n注意：执行命令的位置和build.xml是同一个目录。\n\n最后的结果大图：\n\n![](https://cdn.gallery.uuanqin.top/img/image-69-1024x794.png)\n\n# 其他问题\n\n有童鞋出现了以下问题，对部分问题提供了解决思路。供参考：\n\n*   ant -version 查到的不是major自带的那个。解决方法，删掉Linux里的那个ant。\n*   在复制Windows的major到WSL里，没在Linux里配环境变量的话，javac、ant总有一个在命令行找不到。只有在Windows里边原有的项目，打开Linux环境，按照与我一样的做法才行。\n*   如果一个变异体都杀不死/没覆盖，请尝试检查mutants.log是否有变异体生成，然后再检查build.xml有没有改好。\n\n# 更多参考\n\n关于Ant里的Junit各种属性手册：[JUnit Task (apache.org)](https://ant.apache.org/manual/Tasks/junit.html)","categories":[{"name":"工具箱","api":"api/categories/工具箱.json"},{"name":"软件测试工具","api":"api/categories/工具箱/软件测试工具.json"}],"tags":[{"name":"安装","api":"api/tags/安装.json"},{"name":"MAJOR","api":"api/tags/MAJOR.json"},{"name":"WSL","api":"api/tags/WSL.json"}]},"api":"api/posts/p/3cb26000.json"}