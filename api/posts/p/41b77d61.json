{"data":{"title":"域名 DNS 服务托管至 Cloudflare 以及 301 重定向的配置","slug":"博客站点维护/域名 DNS 服务托管至 Cloudflare 以及 301 重定向的配置","description":"Cloudflare 重定向配置可以简化 Nginx 中的反向代理操作","date":"2024-10-25T19:32:09.000Z","updated":"2024-12-26T12:26:29.270Z","language":"zh-CN","comments":true,"url":"p/41b77d61/","cover":"https://cdn.gallery.uuanqin.top/img/202410260347184.webp","images":[],"content":"<p>文章包含以下重定向需求的解决：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>原地址</th>\n<th>重定向后地址</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP 重定向到 HTTPS</td>\n<td><code>http://a.com</code></td>\n<td rowspan=\"2\"><code>https://a.com</code></td>\n<td>需全站跳转 HTTPS</td>\n</tr>\n<tr>\n<td>WWW 重定向到根</td>\n<td><code>https://www.a.com</code></td>\n<td>提高网站可达率</td>\n</tr>\n<tr>\n<td>去掉 <code>index.html</code></td>\n<td><code>https://a.com/xxx/index.html</code></td>\n<td rowspan=\"2\"><code>https://a.com/xxx/</code></td>\n<td rowspan=\"2\">统一路径、维持数据统一性</td>\n</tr>\n<tr>\n<td>补齐末尾斜杠 <code>/</code></td>\n<td><code>https://a.com/xxx</code></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"链接重写与链接重定向的区别\"><a class=\"markdownIt-Anchor\" href=\"#链接重写与链接重定向的区别\"></a> 链接重写与链接重定向的区别</h1>\n<h2 id=\"链接重写-rewrite\"><a class=\"markdownIt-Anchor\" href=\"#链接重写-rewrite\"></a> 链接重写 Rewrite</h2>\n<blockquote>\n<p>相似概念：Rewrite URL（Cloudflare）、重写回源 URL（阿里云 CDN）、回源 URL 重写（腾讯云 CDN）、隐性 URL 转发（阿里云云解析）</p>\n</blockquote>\n<p>简单来说，链接重写就是用户在请求 <code>https://a.com/p/a.txt</code> 资源时，当请求经过某个中间机构时，中间机构将请求替换为另一个链接，如 <code>https://b.top/img/a.txt</code>，并将新链接下的资源返回给用户。但是用户对所有这些替换操作均不知情，用户浏览器中的地址不会改变。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410270208958.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>比如阿里云 CDN、腾讯云 CDN 均提供了「重写回源 URL」的功能：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410270201746.webp\" alt=\"image.png\" /></p>\n<p>链接重写常用于隐藏源站的真实 URL 结构，保护源站信息；或者通过 URL 映射，让 CDN 节点回源到不同的源站目录。</p>\n<h2 id=\"链接重定向-redirect\"><a class=\"markdownIt-Anchor\" href=\"#链接重定向-redirect\"></a> 链接重定向 Redirect</h2>\n<blockquote>\n<p>相似概念：Redirects（Cloudflare）、重写访问 URL（阿里云 CDN）、访问 URL 重写（腾讯云 CDN）、访问重定向（多吉云 CDN）、显性 URL 转发（阿里云云解析）</p>\n</blockquote>\n<p>而链接重定向是指用户在请求 <code>https://a.com/p/a.txt</code> 资源时，中间服务结点告诉用户这个资源已经移到了 <code>https://b.top/img/a.txt</code>，用户的浏览器接收到这个请求后又发了一次 <code>https://b.top/img/a.txt</code> 请求。用户浏览器中的链接发生了变更。</p>\n<p>比如阿里云 CDN 提供了「重写访问 URL」的功能：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410270211933.webp\" alt=\"image.png\" /></p>\n<p>重定向常用于将旧域名的 URL 迁移、映射到新域名；或者为移动端和 PC 端提供不同的 URL。</p>\n<p>重定向 HTTP 返回代码一般为 3XX。301 为永久重定向；302、303、307 为临时重定向。临时重定向和永久重定向的区别可以看 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/83335cfa/\"><span class=\"bilink-pop-up\">站内文章</span>这篇文章</a>。</p>\n<h1 id=\"链接重定向的时机\"><a class=\"markdownIt-Anchor\" href=\"#链接重定向的时机\"></a> 链接重定向的时机</h1>\n<p>DNS 解析链接地址的大致流程如下：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410272103714.webp\" alt=\"img\" width=\"400px\" /></p>\n<p>如果我们把上面 DNS 递归解析、迭代解析的过程拉平，并取出其中的主要结点，那么可以得到下图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410272059300.webp\" alt=\"image.png\" /></p>\n<p>我们可以通过以下三种结点进行链接重定向。</p>\n<p>在 NS 端重定向：</p>\n<ul>\n<li>阿里云/腾讯云云解析。添加一条「显性 URL 转发」的记录。但由于博主没能通过这种方式成功实现自己的目的。</li>\n<li>Cloudflare 重定向规则。<strong>本文后半部分将讲述这个操作步骤。</strong></li>\n</ul>\n<p>在其他 DNS 服务中重定向：</p>\n<ul>\n<li>阿里云 CDN 提供的重写访问 URL 功能。支持 302、303、307 重定向。其他重定向代码可以另行申请。详看：<a href=\"https://help.aliyun.com/zh/cdn/user-guide/create-an-access-url-rewrite-rule\">配置访问URL重写与重定向_CDN(CDN)-阿里云帮助中心</a></li>\n<li>腾讯云 CDN 提供的访问 URL 重写功能。仅支持 302 重定向。详看：<a href=\"https://cloud.tencent.com/document/product/228/47367\">内容分发网络 CDN 访问 URL 重写配置-配置指南-文档中心-腾讯云</a>。HTTP 转 HTTPS 为内置可选功能。</li>\n<li>多吉云 CDN 提供访问重定向功能。支持 301 重定向。</li>\n<li>Vercel Redirect。详看 <a href=\"https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-domains\">Deploying &amp; Redirecting Domains</a>。</li>\n</ul>\n<p>在服务器上使用反向代理进行重定向：</p>\n<ul>\n<li>Nginx。通过写一堆规则可实现一些简单的重定向。博主的实践经历写在 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/83335cfa/\"><span class=\"bilink-pop-up\">站内文章</span>这篇文章</a> 中。但博主对于一些复杂重定向的尝试（文章开头提到的）都没能配置成功，总是陷入循环重定向。</li>\n</ul>\n<h1 id=\"使用-cloudflare-的-dns-服务\"><a class=\"markdownIt-Anchor\" href=\"#使用-cloudflare-的-dns-服务\"></a> 使用 Cloudflare 的 DNS 服务</h1>\n<p>使用 Cloudflare 的 DNS 解析服务原因有以下几点：</p>\n<ol>\n<li>免费</li>\n<li>可抵御部分 CC 攻击、DDoS 攻击</li>\n<li>可进行重定向</li>\n<li>数据可视化</li>\n<li>托管后屏蔽源站 IP</li>\n<li>国内解析速度不算慢（暂时）</li>\n</ol>\n<p>目前国内网站接入 CloudFlare 一般有两种方式，分别是 DNS 接入和 CNAME 接入。这里介绍 DNS 接入方式。</p>\n<p>DNS 接入意思就是把域名管理解析服务商变更为 CloudFlare 来管理，如国内阿里云 DNS、腾讯云 DNS 等都是 DNS 域名解析服务商。<strong>域名管理解析服务商变更为 CloudFlare 并不意味着域名迁移到国外 CloudFlare 上</strong>，这只是域名解析服务管理权的变动，而域名所在“域”依旧是注册购买域名的平台上，续费、变更解析服务器管理商的操作依旧要在这些平台上进行操作。</p>\n<p>本小节以从阿里云 DNS 迁移至 CloudFlare 为例介绍主要操作方法。</p>\n<p>首先在 CloudFlare 添加站点后，记下名称服务器 NS：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260154993.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>回到阿里云，进入域名控制台：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260152625.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>在域名列表下点击自己的站点：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260152900.webp\" alt=\"image.png\" width=\"375px\" /></p>\n<p>在 DNS 管理下，修改 DNS 服务器：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260153676.webp\" alt=\"image.png\" width=\"375px\" /></p>\n<p>填入刚刚记下的 NS 服务器名称：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260156690.webp\" alt=\"image.png\" /></p>\n<p>然后点击确定即可完成操作。接下请等待较长一段时间让配置生效起来，一般 30min 左右，最长不超过 24 小时。成功后 Cloudflare 会用邮件通知你。</p>\n<p>Cloudflare 成功接管后，会顺带「继承」几条之前配置好的 DNS 记录。如果不全，可以使用双方的导入/导出功能。</p>\n<p>阿里云云解析中选择导出文件类型为 zone。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260210040.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<p>然后在 Cloudflare 中上传文件即可。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260207829.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>根据需要我们可以选择合适的代理状态（详看官方文档了解更多信息：<a href=\"https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records/#proxied-records\">代理状态 |Cloudflare DNS 文档</a>）。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260213873.webp\" alt=\"image.png\" width=\"500px\" /></p>\n\n<div class=\"callout\" data-callout=\"error\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-zap\"><polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"/></svg>\n</div>\n<div class=\"callout-title-inner\">网站出现「重定向次数过多」问题</div>\n</div>\n<div class=\"callout-content\"><p>如果我们访问自己的博客网站出现「重定向次数过多」的问题时，修改 Cloudflare 中 SSL 加密模式为【完全】即可。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260220517.webp\" alt=\"image.png\" width=\"400px\" /></p>\n<p>一般出现于源站已经配置好 HTTPS 的情况。</p>\n<p>参考：<a href=\"https://nutswp.com/%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8cloudflare%E5%87%BA%E7%8E%B0%E9%87%8D%E5%AE%9A%E5%90%91%E6%AC%A1%E8%BF%87%E5%A4%9A%E9%97%AE%E9%A2%98/\">解决使用Cloudflare出现重定向次过多问题 - 【NUTSWP】</a></p>\n</div></div><p>到这里，所有操作都结束了。返回阿里云云解析可以看到阿里云不再提供 DNS 解析服务：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260209420.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>使用 whois 工具查询注册域名的信息可以看到注册商还在阿里云：<a href=\"https://www.whois.com/\">Whois.com - Domain Names &amp; Identity for Everyone</a></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260146264.webp\" alt=\"image.png\" width=\"475px\" /></p>\n\n<div class=\"callout\" data-callout=\"warning\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">腾讯云 CDN 加速域名中提示 CNAME 未配置正确</div>\n</div>\n<div class=\"callout-content\"><p>被 Cloudflare 代理的地址相当于套了个 CDN。对于已经在 Cloudflare 以外使用的 CDN 服务商，其 CNAME 记录可以不用被 Cloudflare 代理。即使 Cloudflare 没有代理，腾讯云 CDN 域名列表中部分加速域名会提示 CNAME 配置不正确，但实际上并没有什么问题，回源服务正常进行，这时我们可<strong>忽略该提示</strong>。</p>\n<p>检查 CNAME 是否真的正常可以使用一些工具获取域名访问的实质 IP，如使用工具 <a href=\"https://www.infocode.com.cn/domain/\">域名解析查询(A/Txt/Cname/Mx/Srv/AAAA记录)</a> 或 F12 控制台查看请求。将查询结果 IP 放入腾讯云 CDN 的 IP 归属查询工具中：<a href=\"https://console.cloud.tencent.com/cdn/ip\">IP归属查询 - 内容分发网络 - 控制台</a>，如果是腾讯云 CDN 结点那么 CNAME 的解析就没什么问题。</p>\n<p>但是这种套两个 CDN 的做法并不推荐，没必要、浪费钱且效果不明显。</p>\n</div></div><h1 id=\"cloudflare-中配置重定向规则\"><a class=\"markdownIt-Anchor\" href=\"#cloudflare-中配置重定向规则\"></a> Cloudflare 中配置重定向规则</h1>\n<p>现重定向的需求如下：</p>\n<table>\n<thead>\n<tr>\n<th>名称</th>\n<th>原地址</th>\n<th>重定向后地址</th>\n<th>原因</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP 重定向到 HTTPS</td>\n<td><code>http://a.com</code></td>\n<td rowspan=\"2\"><code>https://a.com</code></td>\n<td>网站支持 HTTPS，需全站跳转</td>\n</tr>\n<tr>\n<td>WWW 重定向到根</td>\n<td><code>https://www.a.com</code></td>\n<td>提高网站可达率</td>\n</tr>\n<tr>\n<td>去掉 <code>index.html</code></td>\n<td><code>https://a.com/xxx/index.html</code></td>\n<td rowspan=\"2\"><code>https://a.com/xxx/</code></td>\n<td rowspan=\"2\">统一路径、维持数据统一性</td>\n</tr>\n<tr>\n<td>补齐末尾斜杠</td>\n<td><code>https://a.com/xxx</code></td>\n</tr>\n</tbody>\n</table>\n<p>关于第三点、第四点是困扰我许久的问题。因为博客里的文章链接路径都是统一的 <code>/p/xxxxxx/</code> 但是搜索引擎在展示搜索结果时，文章链接总是带上 <code>index.html</code> 或少一个 <code>/</code>。虽然页面是正常的，但是这会导致网站的评论数据或统计数据分成了两份。以前在 Nginx 上折腾不出结果，搞得都是循环重定向。现在 Cloudflare 的「重定向规则」功能可以很方便的达到我们的要求。</p>\n<p>Cloudflare 已经内置了 HTTP 重定向到 HTTPS、WWW 重定向到根的模板，我们直接部署使用即可。至此前两个需求很快得到了解决。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260236512.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>对于第三个重定向，我们可以自己定一个重定向规则：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260238123.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>使用通配符模式即可：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260239500.webp\" alt=\"image.png\" /></p>\n<p>但目前来看原地址后的 hashtag 以及参数在重定向过程中会被省去。我们可以通过 <a href=\"https://www.dute.org/httpstatus\">HTTP状态检测工具- dute.org</a> 检测重定向路径是否符合预期：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260241515.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>第四个重定向规则如下：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260414509.webp\" alt=\"image.png\" /></p>\n<p>4 条规则概览：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202410260413734.webp\" alt=\"image.png\" /></p>\n<h1 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h1>\n<p>搞网络配置时最恼人的两个东西：延迟与缓存。每一步操作都要等待一定时间后才能进行验证，因为在配置生效期间的测试结果会反复横跳（「冒险」时间长）。对于调试时期来说，缓存就如同雾气一样，拉远表象与实质之间的距离。但是如果你找到好的工具（各种在线站长工具）以及方法论（学会清缓存），整个过程就会顺畅多了。</p>\n<p>另一个令人抓狂的点是 Cloudflare 调整重定向时，如果语法不正确它会把你之前填的内容全部清空！</p>\n<p>最后，写完这篇文章以及与各位博主交流，我也巩固了一些网络知识，加深对课本概念的理解。</p>\n<p>后续任务：</p>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"\" type=\"checkbox\"> 解决带 HashTag 及参数的链接重定向问题。<code>https://blog.uuanqin.top/p/1f2b3c/index.html#123?k=v</code>-&gt; <code>https://blog.uuanqin.top/p/1f2b3c/#123?k=v</code>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" checked=\"\" disabled=\"\" type=\"checkbox\"> 如果只包含查询字符串就可通过打勾相关选项解决（<code>241028</code> 解决）</li>\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"\" type=\"checkbox\"> 带 <code>#</code> 后边的部分仍然会舍掉。这是个普遍的问题 Cloudflare 和腾讯云 CDN 都弄不了</li>\n</ul>\n</li>\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" checked=\"\" disabled=\"\" type=\"checkbox\"> 解决少一个 <code>/</code> 的重定向：<code>https://blog.uuanqin.top/p/1f2b3c</code>-&gt;<code>https://blog.uuanqin.top/p/1f2b3c/</code>（<code>241026</code> 解决）</li>\n</ul>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://www.imydl.com/wp/18205.html\">国内使用CloudFlare避坑指南 - 明月登楼的博客</a></li>\n<li><a href=\"https://woodchen.ink/archives/cloudflare-301-redirectional-settings-2eod9f\">cloudflare 301重定向规则设置-Wood Chen</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/422198990\">彻底搞懂 HTTP 3XX 重定向状态码和浏览器重定向 - 知乎</a></li>\n<li><a href=\"https://help.aliyun.com/zh/cdn/user-guide/rewrite-urls-in-back-to-origin-requests\">重写回源URI工作原理、注意事项及配置示例_CDN(CDN)-阿里云帮助中心</a></li>\n<li><a href=\"https://www.cnblogs.com/crazylqy/p/7110357.html\">一张图看懂DNS域名解析全过程 - crazyYong - 博客园</a></li>\n<li><a href=\"https://blog.csdn.net/bangshao1989/article/details/121913780\">DNS域名详细解析过程(最全面，看这一篇就够)_dns解析-CSDN博客</a></li>\n</ul>\n","raw":"---\ntitle: 域名 DNS 服务托管至 Cloudflare 以及 301 重定向的配置\ntags:\n  - Cloudflare\n  - '301'\n  - DNS\n  - 阿里云\ncover: 'https://cdn.gallery.uuanqin.top/img/202410260347184.webp'\ndescription: Cloudflare 重定向配置可以简化 Nginx 中的反向代理操作\nabbrlink: 41b77d61\ncategories:\n  - 博客站点维护\ndate: 2024-10-26 03:32:09\ntop_img:\n---\n\n文章包含以下重定向需求的解决：\n\n| 名称              | 原地址                            | 重定向后地址               | 原因           |\n| --------------- | ------------------------------ | -------------------- | ------------ |\n| HTTP 重定向到 HTTPS | `http://a.com`                 | `https://a.com`      | 需全站跳转 HTTPS  |\n| WWW 重定向到根       | `https://www.a.com`            | `https://a.com`      | 提高网站可达率      |\n| 去掉 `index.html` | `https://a.com/xxx/index.html` | `https://a.com/xxx/` | 统一路径、维持数据统一性 |\n| 补齐末尾斜杠 `/`      | `https://a.com/xxx`            | `https://a.com/xxx/` | 统一路径、维持数据统一性 |\n\n# 链接重写与链接重定向的区别\n\n## 链接重写 Rewrite\n\n> 相似概念：Rewrite URL（Cloudflare）、重写回源 URL（阿里云 CDN）、回源 URL 重写（腾讯云 CDN）、隐性 URL 转发（阿里云云解析）\n\n简单来说，链接重写就是用户在请求 `https://a.com/p/a.txt` 资源时，当请求经过某个中间机构时，中间机构将请求替换为另一个链接，如 `https://b.top/img/a.txt`，并将新链接下的资源返回给用户。但是用户对所有这些替换操作均不知情，用户浏览器中的地址不会改变。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410270208958.webp)\n\n比如阿里云 CDN、腾讯云 CDN 均提供了「重写回源 URL」的功能：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410270201746.webp)\n\n链接重写常用于隐藏源站的真实 URL 结构，保护源站信息；或者通过 URL 映射，让 CDN 节点回源到不同的源站目录。\n\n## 链接重定向 Redirect\n\n> 相似概念：Redirects（Cloudflare）、重写访问 URL（阿里云 CDN）、访问 URL 重写（腾讯云 CDN）、访问重定向（多吉云 CDN）、显性 URL 转发（阿里云云解析）\n\n而链接重定向是指用户在请求 `https://a.com/p/a.txt` 资源时，中间服务结点告诉用户这个资源已经移到了 `https://b.top/img/a.txt`，用户的浏览器接收到这个请求后又发了一次 `https://b.top/img/a.txt` 请求。用户浏览器中的链接发生了变更。\n\n比如阿里云 CDN 提供了「重写访问 URL」的功能：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410270211933.webp)\n\n重定向常用于将旧域名的 URL 迁移、映射到新域名；或者为移动端和 PC 端提供不同的 URL。\n\n重定向 HTTP 返回代码一般为 3XX。301 为永久重定向；302、303、307 为临时重定向。临时重定向和永久重定向的区别可以看 [[Nginx 与 CDN 完成重定向：从 HTTP 重定向到 HTTPS、从 WWW 重定向到根|这篇文章]]。\n\n# 链接重定向的时机\n\nDNS 解析链接地址的大致流程如下：\n\n![img|400](https://cdn.gallery.uuanqin.top/img/202410272103714.webp)\n\n如果我们把上面 DNS 递归解析、迭代解析的过程拉平，并取出其中的主要结点，那么可以得到下图：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410272059300.webp)\n\n我们可以通过以下三种结点进行链接重定向。\n\n在 NS 端重定向：\n\n- 阿里云/腾讯云云解析。添加一条「显性 URL 转发」的记录。但由于博主没能通过这种方式成功实现自己的目的。\n- Cloudflare 重定向规则。**本文后半部分将讲述这个操作步骤。**\n\n在其他 DNS 服务中重定向：\n\n- 阿里云 CDN 提供的重写访问 URL 功能。支持 302、303、307 重定向。其他重定向代码可以另行申请。详看：[配置访问URL重写与重定向_CDN(CDN)-阿里云帮助中心](https://help.aliyun.com/zh/cdn/user-guide/create-an-access-url-rewrite-rule)\n- 腾讯云 CDN 提供的访问 URL 重写功能。仅支持 302 重定向。详看：[内容分发网络 CDN 访问 URL 重写配置-配置指南-文档中心-腾讯云](https://cloud.tencent.com/document/product/228/47367)。HTTP 转 HTTPS 为内置可选功能。\n- 多吉云 CDN 提供访问重定向功能。支持 301 重定向。\n- Vercel Redirect。详看 [Deploying & Redirecting Domains](https://vercel.com/docs/projects/domains/deploying-and-redirecting#redirecting-domains)。\n\n在服务器上使用反向代理进行重定向：\n\n- Nginx。通过写一堆规则可实现一些简单的重定向。博主的实践经历写在 [[Nginx 与 CDN 完成重定向：从 HTTP 重定向到 HTTPS、从 WWW 重定向到根|这篇文章]] 中。但博主对于一些复杂重定向的尝试（文章开头提到的）都没能配置成功，总是陷入循环重定向。\n\n# 使用 Cloudflare 的 DNS 服务\n\n使用 Cloudflare 的 DNS 解析服务原因有以下几点：\n\n1. 免费\n2. 可抵御部分 CC 攻击、DDoS 攻击\n3. 可进行重定向\n4. 数据可视化\n5. 托管后屏蔽源站 IP\n6. 国内解析速度不算慢（暂时）\n\n目前国内网站接入 CloudFlare 一般有两种方式，分别是 DNS 接入和 CNAME 接入。这里介绍 DNS 接入方式。\n\nDNS 接入意思就是把域名管理解析服务商变更为 CloudFlare 来管理，如国内阿里云 DNS、腾讯云 DNS 等都是 DNS 域名解析服务商。**域名管理解析服务商变更为 CloudFlare 并不意味着域名迁移到国外 CloudFlare 上**，这只是域名解析服务管理权的变动，而域名所在“域”依旧是注册购买域名的平台上，续费、变更解析服务器管理商的操作依旧要在这些平台上进行操作。\n\n本小节以从阿里云 DNS 迁移至 CloudFlare 为例介绍主要操作方法。\n\n首先在 CloudFlare 添加站点后，记下名称服务器 NS：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260154993.webp)\n\n回到阿里云，进入域名控制台：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260152625.webp)\n\n在域名列表下点击自己的站点：\n\n![image.png|375](https://cdn.gallery.uuanqin.top/img/202410260152900.webp)\n\n在 DNS 管理下，修改 DNS 服务器：\n\n![image.png|375](https://cdn.gallery.uuanqin.top/img/202410260153676.webp)\n\n填入刚刚记下的 NS 服务器名称：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410260156690.webp)\n\n然后点击确定即可完成操作。接下请等待较长一段时间让配置生效起来，一般 30min 左右，最长不超过 24 小时。成功后 Cloudflare 会用邮件通知你。\n\nCloudflare 成功接管后，会顺带「继承」几条之前配置好的 DNS 记录。如果不全，可以使用双方的导入/导出功能。\n\n阿里云云解析中选择导出文件类型为 zone。\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/202410260210040.webp)\n\n然后在 Cloudflare 中上传文件即可。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260207829.webp)\n\n根据需要我们可以选择合适的代理状态（详看官方文档了解更多信息：[代理状态 |Cloudflare DNS 文档](https://developers.cloudflare.com/dns/manage-dns-records/reference/proxied-dns-records/#proxied-records)）。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260213873.webp)\n\n> [!error] 网站出现「重定向次数过多」问题\n> 如果我们访问自己的博客网站出现「重定向次数过多」的问题时，修改 Cloudflare 中 SSL 加密模式为【完全】即可。\n>\n> ![image.png|400](https://cdn.gallery.uuanqin.top/img/202410260220517.webp)\n>\n> 一般出现于源站已经配置好 HTTPS 的情况。\n>\n> 参考：[解决使用Cloudflare出现重定向次过多问题 - 【NUTSWP】](https://nutswp.com/%E8%A7%A3%E5%86%B3%E4%BD%BF%E7%94%A8cloudflare%E5%87%BA%E7%8E%B0%E9%87%8D%E5%AE%9A%E5%90%91%E6%AC%A1%E8%BF%87%E5%A4%9A%E9%97%AE%E9%A2%98/)\n\n到这里，所有操作都结束了。返回阿里云云解析可以看到阿里云不再提供 DNS 解析服务：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260209420.webp)\n\n使用 whois 工具查询注册域名的信息可以看到注册商还在阿里云：[Whois.com - Domain Names & Identity for Everyone](https://www.whois.com/)\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/202410260146264.webp)\n\n> [!warning] 腾讯云 CDN 加速域名中提示 CNAME 未配置正确\n> 被 Cloudflare 代理的地址相当于套了个 CDN。对于已经在 Cloudflare 以外使用的 CDN 服务商，其 CNAME 记录可以不用被 Cloudflare 代理。即使 Cloudflare 没有代理，腾讯云 CDN 域名列表中部分加速域名会提示 CNAME 配置不正确，但实际上并没有什么问题，回源服务正常进行，这时我们可**忽略该提示**。\n>\n> 检查 CNAME 是否真的正常可以使用一些工具获取域名访问的实质 IP，如使用工具 [域名解析查询(A/Txt/Cname/Mx/Srv/AAAA记录)](https://www.infocode.com.cn/domain/) 或 F12 控制台查看请求。将查询结果 IP 放入腾讯云 CDN 的 IP 归属查询工具中：[IP归属查询 - 内容分发网络 - 控制台](https://console.cloud.tencent.com/cdn/ip)，如果是腾讯云 CDN 结点那么 CNAME 的解析就没什么问题。\n>\n> 但是这种套两个 CDN 的做法并不推荐，没必要、浪费钱且效果不明显。\n\n# Cloudflare 中配置重定向规则\n\n现重定向的需求如下：\n\n| 名称              | 原地址                            | 重定向后地址               | 原因               |\n| --------------- | ------------------------------ | -------------------- | ---------------- |\n| HTTP 重定向到 HTTPS | `http://a.com`                 | `https://a.com`      | 网站支持 HTTPS，需全站跳转 |\n| WWW 重定向到根       | `https://www.a.com`            | `https://a.com`      | 提高网站可达率          |\n| 去掉 `index.html` | `https://a.com/xxx/index.html` | `https://a.com/xxx/` | 统一路径、维持数据统一性     |\n| 补齐末尾斜杠          | `https://a.com/xxx`            | `https://a.com/xxx/` | 统一路径、维持数据统一性     |\n\n关于第三点、第四点是困扰我许久的问题。因为博客里的文章链接路径都是统一的 `/p/xxxxxx/` 但是搜索引擎在展示搜索结果时，文章链接总是带上 `index.html` 或少一个 `/`。虽然页面是正常的，但是这会导致网站的评论数据或统计数据分成了两份。以前在 Nginx 上折腾不出结果，搞得都是循环重定向。现在 Cloudflare 的「重定向规则」功能可以很方便的达到我们的要求。\n\nCloudflare 已经内置了 HTTP 重定向到 HTTPS、WWW 重定向到根的模板，我们直接部署使用即可。至此前两个需求很快得到了解决。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260236512.webp)\n\n对于第三个重定向，我们可以自己定一个重定向规则：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260238123.webp)\n\n使用通配符模式即可：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410260239500.webp)\n\n但目前来看原地址后的 hashtag 以及参数在重定向过程中会被省去。我们可以通过 [HTTP状态检测工具- dute.org](https://www.dute.org/httpstatus) 检测重定向路径是否符合预期：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202410260241515.webp)\n\n第四个重定向规则如下：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410260414509.webp)\n\n4 条规则概览：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/202410260413734.webp)\n\n# 后记\n\n搞网络配置时最恼人的两个东西：延迟与缓存。每一步操作都要等待一定时间后才能进行验证，因为在配置生效期间的测试结果会反复横跳（「冒险」时间长）。对于调试时期来说，缓存就如同雾气一样，拉远表象与实质之间的距离。但是如果你找到好的工具（各种在线站长工具）以及方法论（学会清缓存），整个过程就会顺畅多了。\n\n另一个令人抓狂的点是 Cloudflare 调整重定向时，如果语法不正确它会把你之前填的内容全部清空！\n\n最后，写完这篇文章以及与各位博主交流，我也巩固了一些网络知识，加深对课本概念的理解。\n\n后续任务：\n\n- [ ] 解决带 HashTag 及参数的链接重定向问题。`https://blog.uuanqin.top/p/1f2b3c/index.html#123?k=v`-> `https://blog.uuanqin.top/p/1f2b3c/#123?k=v`\n\t- [x] 如果只包含查询字符串就可通过打勾相关选项解决（`241028` 解决）\n\t- [ ] 带 `#` 后边的部分仍然会舍掉。这是个普遍的问题 Cloudflare 和腾讯云 CDN 都弄不了\n- [x] 解决少一个 `/` 的重定向：`https://blog.uuanqin.top/p/1f2b3c`->`https://blog.uuanqin.top/p/1f2b3c/`（`241026` 解决）\n\n# 本文参考\n- [国内使用CloudFlare避坑指南 - 明月登楼的博客](https://www.imydl.com/wp/18205.html)\n- [cloudflare 301重定向规则设置-Wood Chen](https://woodchen.ink/archives/cloudflare-301-redirectional-settings-2eod9f)\n- [彻底搞懂 HTTP 3XX 重定向状态码和浏览器重定向 - 知乎](https://zhuanlan.zhihu.com/p/422198990)\n- [重写回源URI工作原理、注意事项及配置示例_CDN(CDN)-阿里云帮助中心](https://help.aliyun.com/zh/cdn/user-guide/rewrite-urls-in-back-to-origin-requests)\n- [一张图看懂DNS域名解析全过程 - crazyYong - 博客园](https://www.cnblogs.com/crazylqy/p/7110357.html)\n- [DNS域名详细解析过程(最全面，看这一篇就够)_dns解析-CSDN博客](https://blog.csdn.net/bangshao1989/article/details/121913780)\n\n","categories":[{"name":"博客站点维护","api":"api/categories/博客站点维护.json"}],"tags":[{"name":"阿里云","api":"api/tags/阿里云.json"},{"name":"DNS","api":"api/tags/DNS.json"},{"name":"301","api":"api/tags/301.json"},{"name":"Cloudflare","api":"api/tags/Cloudflare.json"}]},"api":"api/posts/p/41b77d61.json"}