{"title":"Linux 使用 Cron 创建定时任务","tags":["Cron","crontab","linux","Python"],"cover":"https://cdn.gallery.uuanqin.top/img/20231206205902.webp","description":"快速上手 Linux 定时任务的创建。","abbrlink":"88536c89","categories":["核心协同","自动化"],"date":"2023-12-06T20:27:40.000Z","top_img":null,"summary":"什么是 Cron？ Cron 的简介 Cron 是类 Unix 操作系统（包括 Linux 和 macOS）中基于时间的作业调度器。它允许用户调度作业 (命令或脚本) 在固定的时间、日期或间隔内定期运行。它最常用于自动化系统维护或管理任务，但也可以用于任何需要定期、计划执行命令的情景。 关于 Cron 的概念 cron 有 crond 和 crontab 两个概念。 crond （cron daemon）：Cron 的核心，即后台守护进程。用来实际执行脚本，它在系统中是一直运行的，与 windows 的计划任务类似。它每分钟都会检查 crontab 文件或目录中的工作。 crontab（cron table）：一个工具，它包含所有需要定时执行命令的列表。用来管理定时任务列表，比如添加作业、编辑作业、删除作业、查看作业。作为管理工具，不会后台运行，需要手动调用，执行完自动退出。 crond 默认没有开启，需要手动启动一次服务。服务启动后，会一直运行，即便是重启系统，也会自动运行。相关命令使用 `systemctl` 执行： 启动服务：`systemctl start crond` 关闭服务：`systemctl stop crond` 重启服务：`systemctl restart crond` Cron 表达式 cron 表达式是广义的，它包括了狭义的 cron 表达式和 crontab 表达式。这里介绍 crontab 表达式。 cron 的定时任务需要在作业文件中设定执行时间，包括时分秒、天数等，一共 7 个部分，格式如下： `分 时 日 月 星期 [年] 命令` 分：必须，可选 0-59，可设置 `,-*/` 特殊字符 时：必须，可选 0-23，可设置 `,-*/` 特殊字符 日：必须，可选 1-31，可设置 `,-*?/LW` 特殊字符 月：必须，可选 1-12 或 jan-dec，可设置 `,-*/` 特殊字符 星期：必须，可选 0-7 或 sun-sta，可设置 `,-*?/L#` 特殊字符 年：非必须，可留空，可设置 1970-2099，可设置 `,-*/` 特殊字符 特殊字符的含义： `` 全部。意思是在该时间的任意点都应当执行 `?` 不指定，任意。仅用于 日（月）和日（周）。`0 0 5 ?` 代表每个月的第 5 天零点，不论星期几。..."}