{"data":{"title":"自定义 Hexo 中的超链接样式","slug":"博客站点维护/Hexo/自定义 Hexo 中的超链接样式","description":"使用博主自写插件轻松使用超链接的自定义样式模板","date":"2024-11-27T15:35:54.000Z","updated":"2025-09-05T15:58:47.096Z","language":"zh-CN","comments":true,"url":"p/8aa53d93/","cover":"https://cdn.gallery.uuanqin.top/img/202411272314587.webp","images":[],"content":"\n<div class=\"callout\" data-callout=\"success\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-check\"><path d=\"M20 6 9 17l-5-5\"/></svg>\n</div>\n<div class=\"callout-title-inner\">本文不涉及对主题源代码的修改</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>今天又开一个坑，写了一个插件方便我自定义链接的样式。按照以往惯例我可能又得写一小篇开发心得 ，不过这次我打算以「Q&amp;A」的方式将一些思考放在文章末尾。</p>\n<p>一般来说，改变链接样式似乎写个全局 CSS 就行，但如果实现复杂效果，比如在链接附近加上 <code>span</code> 标签等等的实现可能会有所复杂。我暂时想到的解决方案就是从 Markdown 文本上替换超链接，使用指定 HTML 模板，与是就试着写了这样一个插件。</p>\n<p>结果写完后发现他还有一个意料之外的功能，就是它可以实现和一些标签插件一样的效果，这就可以<strong>把部分文章内的 Hexo 标签语法给省略掉了</strong>。如果有一天你切换到其他不支持标签语法的博客，你的网页就不会遗留下诸如 <code>&#123;% name param1 param2 strange_string magic_number%&#125;</code> 之类的东西。</p>\n<p>这篇文章主要内容为使用 <code>hexo-filter-custom-link</code> 插件对超链接进行美化的案例，如<strong>增加链接悬浮效果</strong>等。本文算是对这个插件的小小入门，更多替换标签语法的操作详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/fb28dce2/\"><span class=\"bilink-pop-up\">站内文章</span>用 Markdown 链接替换部分 Hexo 标签语法</a>。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/example2-512561323GIF (online-video-cutter.com).gif\" alt=\"gif\" width=\"377px\" /></p>\n<p><code>hexo-filter-custom-link</code> 插件为涉及到文章「超链接」的主题魔改增加了一种新的选择。而且以后在对超链接美化时，我们可以：</p>\n<ul>\n<li>尽可能避免主题的源代码修改；</li>\n<li>尽可能少用 Hexo 内置的标签语法，减少文章维护成本。</li>\n</ul>\n<h1 id=\"插件安装与使用\"><a class=\"markdownIt-Anchor\" href=\"#插件安装与使用\"></a> 插件安装与使用</h1>\n<p>安装与使用方式见项目 README 文档。</p>\n<p><a href=\"https://github.com/uuanqin/hexo-filter-custom-link\"><img src= \"/image/loading.gif\" data-lazy-src=\"https://github-readme-stats.uuanqin.top/api/pin/?username=uuanqin&amp;repo=hexo-filter-custom-link\" alt=\"Readme Card\" /></a></p>\n<p>GitHub 项目地址：<a href=\"https://github.com/uuanqin/hexo-filter-custom-link\">uuanqin/hexo-filter-custom-link: Customize the rendered HTML of Links. 自定义链接渲染后的 HTML</a></p>\n<p>主要功能：</p>\n<ul>\n<li>自定义链接渲染后的样式，让形如 <code>[text](url)</code> 或 <code>[text](url &quot;title&quot;)</code> 的超链接渲染成你想要的模板。</li>\n<li>插件提供多种通配符方便设计更复杂的模板，通配符可以重复使用。</li>\n<li>在特殊情况下，可以为一些特殊链接指定不同的模板，让超链接的样式更加丰富。</li>\n<li>对于复杂模板，支持模板间距以区分其他 Markdown 文本，避免渲染错误。</li>\n</ul>\n<p>插件原理是在 Markdown 文本编译前，识别链接形式并进行模板替换的。目前测试了该插件与以下「链接替换」插件（毕竟博主还在用…）并不冲突：</p>\n<ul>\n<li><a href=\"https://github.com/hexojs/hexo-filter-nofollow\">hexojs/hexo-filter-nofollow</a> ：为外链添加 <code>nofollow</code> 等属性提升网站的 SEO</li>\n<li><a href=\"https://github.com/willow-god/hexo-safego/\">willow-god/hexo-safego</a> ：一款外部链接替换插件</li>\n</ul>\n<h1 id=\"为普通链接增加悬浮样式\"><a class=\"markdownIt-Anchor\" href=\"#为普通链接增加悬浮样式\"></a> 为普通链接增加悬浮样式</h1>\n<p>本小节含三个案例，均基于 Codepen 项目简化处理。如果想实现原版效果可到原项目中查看具体代码。</p>\n\n<div class=\"callout\" data-callout=\"note\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-pencil\"><path d=\"M17 3a2.85 2.83 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5Z\"/><path d=\"m15 5 4 4\"/></svg>\n</div>\n<div class=\"callout-title-inner\">插件已更新，请遵循新版插件的配置示例。</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><h2 id=\"例-1鼠标悬浮色块聚焦\"><a class=\"markdownIt-Anchor\" href=\"#例-1鼠标悬浮色块聚焦\"></a> 例 1：鼠标悬浮色块聚焦</h2>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">本案例基于该项目进行简化：<a href=\"https://codepen.io/decemberly/pen/JOrBxo\">Awesome link underlines</a></div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>最简单的入门案例。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/hovermousedemo.gif\" alt=\"demo\" /></p>\n<p><code>_config.yml</code> 配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_link:</span>  </span><br><span class=\"line\">\t<span class=\"attr\">enable:</span> <span class=\"literal\">true</span> <span class=\"comment\"># enable this plugin  </span></span><br><span class=\"line\">\t<span class=\"attr\">general_template:</span> <span class=\"string\">&#x27;&lt;a class=&quot;link-example-1&quot; href=&quot;__URL__&quot;&gt;__TEXT__&lt;/a&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>引入以下 CSS 即可：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.link-example-1</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">    <span class=\"attribute\">border-bottom</span>: <span class=\"number\">0.1em</span> solid <span class=\"number\">#669900</span>;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>: <span class=\"number\">1em</span> solid <span class=\"built_in\">rgba</span>(<span class=\"number\">255</span>, <span class=\"number\">215</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: none;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: all <span class=\"number\">0.3s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-example-1</span><span class=\"selector-pseudo\">:hover</span>, <span class=\"selector-class\">.link-example-1</span><span class=\"selector-pseudo\">:focus</span>, <span class=\"selector-class\">.link-example-1</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#b5ca4226</span>;</span><br><span class=\"line\">    <span class=\"attribute\">outline</span>: <span class=\"number\">0.1em</span> solid <span class=\"number\">#b5ca4226</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>实际上插件做的就是把每个链接加上 <code>.link-example-1</code> 类，我们通过自定义 CSS 就能调整链接的样式。更多炫酷效果可到原项目查看。</p>\n<blockquote>\n<p>这个项目是 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/7a103a3/\"><span class=\"bilink-pop-up\">站内文章</span>很久以前</a> 使用过的，算是从垃圾桶捡回来举例了😂</p>\n</blockquote>\n<h2 id=\"例-2鼠标悬浮小弹窗\"><a class=\"markdownIt-Anchor\" href=\"#例-2鼠标悬浮小弹窗\"></a> 例 2：鼠标悬浮小弹窗</h2>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">本案例基于该项目进行简化：<a href=\"https://codepen.io/ysoftaoglu/pen/JXROeY\">Best Creative Link Hover</a></div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/example2-512561323GIF (online-video-cutter.com).gif\" alt=\"gif\" width=\"377px\" /></p>\n<p><code>_config.yml</code> 配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_link:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># enable this plugin</span></span><br><span class=\"line\">  <span class=\"attr\">general_template:</span> <span class=\"string\">|</span>  </span><br><span class=\"line\">\t<span class=\"string\">&lt;a</span> <span class=\"string\">class=&quot;link-example-2&quot;</span> <span class=\"string\">href=&quot;__URL__&quot;&gt;</span>  </span><br><span class=\"line\">\t<span class=\"string\">&lt;span</span> <span class=\"string\">class=&quot;pop-up&quot;&gt;弹窗&lt;/span&gt;</span>  </span><br><span class=\"line\">\t<span class=\"string\">__TEXT__&lt;/a&gt;</span></span><br></pre></td></tr></table></figure>\n<p>引入以下 CSS 文件：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*https://codepen.io/ysoftaoglu/pen/JXROeY*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-example-2</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: inline-block;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: all .<span class=\"number\">2s</span> ease;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">span</span><span class=\"selector-class\">.bilink-pop-up</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"comment\">/*             font-size: 21px; */</span></span><br><span class=\"line\">    <span class=\"attribute\">font-weight</span>: normal;</span><br><span class=\"line\">    <span class=\"comment\">/*transform: translateY(20px);*/</span></span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: all .<span class=\"number\">2s</span> ease;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute; <span class=\"comment\">/* 将 span 绝对定位 */</span></span><br><span class=\"line\">    <span class=\"attribute\">top</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">50%</span>; <span class=\"comment\">/* 水平居中 */</span></span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translate</span>(-<span class=\"number\">50%</span>, -<span class=\"number\">80%</span>); <span class=\"comment\">/* 调整位置使其完全居中 */</span></span><br><span class=\"line\">    <span class=\"attribute\">width</span>: auto; <span class=\"comment\">/* 设置宽度为0，使其不占空间 */</span></span><br><span class=\"line\">    <span class=\"attribute\">height</span>: auto; <span class=\"comment\">/* 设置高度为0，使其不占空间 */</span></span><br><span class=\"line\">    <span class=\"attribute\">white-space</span>: nowrap; <span class=\"comment\">/* 文字不折叠 */</span></span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">12px</span>; <span class=\"comment\">/* 固定文字大小 */</span></span><br><span class=\"line\">    <span class=\"attribute\">font-style</span>: normal; <span class=\"comment\">/* 设置正斜体 */</span></span><br><span class=\"line\">    <span class=\"attribute\">border-radius</span>: <span class=\"number\">10px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">padding</span>: <span class=\"number\">0px</span> <span class=\"number\">8px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: <span class=\"number\">#c7046f</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: <span class=\"number\">#fff</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-example-2</span><span class=\"selector-pseudo\">:hover</span> <span class=\"selector-tag\">span</span><span class=\"selector-class\">.bilink-pop-up</span>,</span><br><span class=\"line\"><span class=\"selector-class\">.link-example-2</span><span class=\"selector-pseudo\">:focus</span> <span class=\"selector-tag\">span</span><span class=\"selector-class\">.bilink-pop-up</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">opacity</span>: <span class=\"number\">1</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-example-2</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">translateY</span>(-<span class=\"number\">2px</span>);</span><br><span class=\"line\">    <span class=\"attribute\">text-decoration</span>: none <span class=\"meta\">!important</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>针对本案例，以上面的方式配置的话在大多数情况下小弹窗能正常显示，但是有可能被部分表格顶部覆盖。我们可以添加以下 JavaScript 以更好解决这个问题：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 用于解决遮挡问题</span></span><br><span class=\"line\"><span class=\"variable language_\">document</span>.<span class=\"title function_\">addEventListener</span>(<span class=\"string\">&#x27;DOMContentLoaded&#x27;</span>, <span class=\"keyword\">function</span>(<span class=\"params\"></span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> aclassElements = <span class=\"variable language_\">document</span>.<span class=\"title function_\">querySelectorAll</span>(<span class=\"string\">&#x27;.table-wrap&#x27;</span>);</span><br><span class=\"line\">    aclassElements.<span class=\"title function_\">forEach</span>(<span class=\"keyword\">function</span>(<span class=\"params\">tableWrapElement</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (tableWrapElement.<span class=\"title function_\">querySelector</span>(<span class=\"string\">&#x27;span.pop-up&#x27;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 如果包含，则设置 overflow: visible;</span></span><br><span class=\"line\">            tableWrapElement.<span class=\"property\">style</span>.<span class=\"property\">overflow</span> = <span class=\"string\">&#x27;visible&#x27;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">&#125;);</span><br></pre></td></tr></table></figure>\n\n<div class=\"callout\" data-callout=\"question\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-help-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">这个链接气泡好像有点眼熟？</div>\n</div>\n<div class=\"callout-content\"><p>这是目前本站双向链接的效果，和本站 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/b3be711f/\"><span class=\"bilink-pop-up\">站内文章</span>评论区悬浮气泡</a> 效果恰好统一。（此处暗示了读者去评论区评论试试气泡效果😉）</p>\n</div></div><h2 id=\"例-3鼠标悬浮变动下划线\"><a class=\"markdownIt-Anchor\" href=\"#例-3鼠标悬浮变动下划线\"></a> 例 3：鼠标悬浮变动下划线</h2>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">本案例基于该项目进行简化：<a href=\"https://codepen.io/alphardex/details/WNQPWmj\">Link Hover Flash</a></div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/example3-sdfasfsdfGIF.gif\" alt=\"img\" width=\"500px\" /></p>\n<p>本例和例 1 相似，只需要为链接加上类即可。</p>\n<p><code>_config.yml</code> 配置如下：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">custom_link:</span></span><br><span class=\"line\">  <span class=\"attr\">enable:</span> <span class=\"literal\">true</span>   <span class=\"comment\"># enable this plugin</span></span><br><span class=\"line\">  <span class=\"attr\">general_template:</span> <span class=\"string\">&#x27;&lt;a class=&quot;link-example-3&quot; href=&quot;__URL__&quot;&gt;__TEXT__&lt;/a&gt;&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>引入以下 CSS 文件：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/*https://codepen.io/alphardex/details/WNQPWmj*/</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.link-example-3</span> &#123;</span><br><span class=\"line\">    <span class=\"attr\">--ease-out-expo</span>: <span class=\"built_in\">cubic-bezier</span>(<span class=\"number\">0.19</span>, <span class=\"number\">1</span>, <span class=\"number\">0.22</span>, <span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: relative;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.link-example-3</span><span class=\"selector-pseudo\">::before</span>, <span class=\"selector-class\">.link-example-3</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">position</span>: absolute;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">left</span>: <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"attribute\">bottom</span>: -<span class=\"number\">2px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">display</span>: block;</span><br><span class=\"line\">    <span class=\"attribute\">width</span>: <span class=\"number\">100%</span>;</span><br><span class=\"line\">    <span class=\"attribute\">height</span>: <span class=\"number\">3px</span>;</span><br><span class=\"line\">    <span class=\"attribute\">background</span>: <span class=\"number\">#dcb438</span>;</span><br><span class=\"line\">    <span class=\"attribute\">transition</span>: <span class=\"number\">1.1s</span> <span class=\"built_in\">var</span>(--ease-out-expo);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.link-example-3</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"attribute\">transform-origin</span>: left;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.link-example-3</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform-origin</span>: right;</span><br><span class=\"line\">    <span class=\"attribute\">transition-delay</span>: <span class=\"number\">0.25s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.link-example-3</span><span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">::before</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(<span class=\"number\">1</span>);</span><br><span class=\"line\">    <span class=\"attribute\">transition-delay</span>: <span class=\"number\">0.25s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.link-example-3</span><span class=\"selector-pseudo\">:hover</span><span class=\"selector-pseudo\">::after</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">transform</span>: <span class=\"built_in\">scaleX</span>(<span class=\"number\">0</span>);</span><br><span class=\"line\">    <span class=\"attribute\">transition-delay</span>: <span class=\"number\">0s</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h1>\n<p>插件一边写一边增加新的功能，时间都花在找 Bug 上！</p>\n<h2 id=\"写插件的小小心得\"><a class=\"markdownIt-Anchor\" href=\"#写插件的小小心得\"></a> 写插件的小小心得</h2>\n\n<div class=\"callout\" data-callout=\"question\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-help-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">为什么博主执着于避免修改主题源码以及摒弃标签语法这两点？</div>\n</div>\n<div class=\"callout-content\"><p>自从博主使用 Hexo 以来，在对博客的美化道路就十分坎坷。我总是小心翼翼地避开对 Butterfly 源代码的修改，其中一个原因就是认为改了代码后 Git 维护变繁杂了且主题不好升级。（但实际上为了小破站安全，博主最终还是 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/4872f379/\"><span class=\"bilink-pop-up\">站内文章</span>迫不得已</a> 改了一些源代码去掉了敏感外链，这也直接导致我需要维护新的分支）</p>\n<p>至于 Hexo 的标签语法博主是坚决不使用的。标签语法强依赖于 Hexo 或某一个 Hexo 插件。如果博客更换为其他项目，文章中会遗留许多奇奇怪怪的特殊标记。另外，目前文章使用了 GFM、OFM 语法，花了很大的精力维护了 Hexo 和 Obsidian <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/d4bc55f2/\"><span class=\"bilink-pop-up\">站内文章</span>两端的统一</a>。为了以后文字长久的兼容性，真的真的不能再用任何新语法了。</p>\n<p>一句话总结：博主有非常奇怪的「洁癖」😰。</p>\n</div></div>\n<div class=\"callout\" data-callout=\"question\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-help-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">这个插件是如何诞生的？</div>\n</div>\n<div class=\"callout-content\"><p>本小站是通过 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/51890a9/\"><span class=\"bilink-pop-up\">站内文章</span>Obsidian</a> 进行维护的。很久以前在到处 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/7a103a3/\"><span class=\"bilink-pop-up\">站内文章</span>玩插件时</a> 就有一个想法，就是打算为站内的双向链接做出不一样的标识以在 Hexo 发挥双链的优势。于是我改进了以前写过的双链插件 <a href=\"https://github.com/uuanqin/hexo-filter-titlebased-link\">hexo-filter-titlebased-link</a> 使其支持自定义渲染后的链接形式实现小弹窗效果。后来发现这部分功能可以是通用的，不如将它提取出来使之能应用到更多的链接形式中。</p>\n</div></div>\n<div class=\"callout\" data-callout=\"question\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-help-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">这个插件和魔改源代码又有什么区别？</div>\n</div>\n<div class=\"callout-content\"><p>插件原理和魔改主题源代码基本相同。插件只是用更无痛的「配置」方式代替了源码修改操作。当然使用插件也是有缺点的，首先就是灵活度受限，其次就是依赖性了。</p>\n</div></div>\n<div class=\"callout\" data-callout=\"question\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-help-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">这个插件和标签语法又有什么区别？</div>\n</div>\n<div class=\"callout-content\"><p>可以说插件把 <a href=\"https://github.com/bmwant/hexo-post-link?tab=readme-ov-file#hexo-post-link\">丑陋</a> 的标签语法变「漂亮」了，但有可能没有标签语法那么灵活。这个插件可以使用自定义占位符满足一部分的标签语法场景。</p>\n</div></div>\n<div class=\"callout\" data-callout=\"question\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-help-circle\"><circle cx=\"12\" cy=\"12\" r=\"10\"/><path d=\"M9.09 9a3 3 0 0 1 5.83 1c0 2-3 3-3 3\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">插件是不是使用了新的标记语言，这是否与前面不使用新语法的观点相悖？</div>\n</div>\n<div class=\"callout-content\"><p>特殊链接是需要特征的，「标记」无可避免。但是插件不引入新语法，它只是将标记放置于链接标题中 <code>[name](url &quot;title&quot;)</code>（<code>&quot;title&quot;</code> 这个位置十分隐蔽，之前我都没注意到 Markdown 还有这个语法，估计也没多少人用）。链接标题一般只有在鼠标悬浮在链接时才会展现，即使卸载本插件，原文章的页面展示上还是一个普通的超链接，不会增加奇奇怪怪的内容。</p>\n</div></div><p>往期心得：</p>\n<ul>\n<li><a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/ca685d6c/\"><span class=\"bilink-pop-up\">站内文章</span>【开发杂记】第一次开发 npm 插件</a></li>\n<li><a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/2c7939aa/\"><span class=\"bilink-pop-up\">站内文章</span>【开发杂记】第一次写 Hexo 插件</a></li>\n</ul>\n<h2 id=\"后续任务\"><a class=\"markdownIt-Anchor\" href=\"#后续任务\"></a> 后续任务</h2>\n<ul class=\"contains-task-list\">\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" disabled=\"\" type=\"checkbox\"> 顺便把 <code>hexo-filter-titlebased-link</code> 插件也升级一下</li>\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" checked=\"\" disabled=\"\" type=\"checkbox\"> 疑似 hexo 渲染插件的 Bug，待排查。目前推测为 <code>mdit-plugin-callouts</code> 的 Bug。</li>\n<li class=\"task-list-item\"><input class=\"task-list-item-checkbox\" checked=\"\" disabled=\"\" type=\"checkbox\"> 取消 <code>%%</code> 标签，把参数放到 TITLE 中</li>\n</ul>\n<h1 id=\"参考文章\"><a class=\"markdownIt-Anchor\" href=\"#参考文章\"></a> 参考文章</h1>\n<p>工具：</p>\n<ul>\n<li><a href=\"https://regex101.com/\">regex101: build, test, and debug regex</a></li>\n<li><a href=\"https://www.jyshare.com/front-end/854/\">正则表达式在线测试 | 菜鸟工具</a></li>\n<li><a href=\"https://codepen.io/\">Codepen</a> 的编辑器。奇奇怪怪的样式语言（SCSS、Stylus）可以去 Codepen 编译得到 CSS。</li>\n<li><a href=\"https://commonmark.org/help/tutorial/07-links.html\">Markdown Tutorial - Links</a></li>\n<li><a href=\"https://marked.js.org/demo/?version=14.1.3\">Marked Demo</a></li>\n<li><a href=\"https://online-video-cutter.com/cn/trim-gif\">GIF Cutter - 在线剪切、修剪和缩短 GIFS</a></li>\n</ul>\n<p>样板代码参考：</p>\n<ul>\n<li><a href=\"https://github.com/willow-god/hexo-safego/\">willow-god/hexo-safego</a></li>\n<li><a href=\"https://github.com/walinejs/plugins/tree/master/packages/link-interceptor\">plugins/packages/link-interceptor at master · walinejs/plugins</a></li>\n<li><a href=\"https://github.com/Zfour/hexo-swiper-bar\">Zfour/hexo-swiper-bar</a></li>\n</ul>\n<p>其他：</p>\n<ul>\n<li><a href=\"https://fontawesome.com/icons/link?f=classic&amp;s=solid\">Link Classic Solid Icon | Font Awesome</a></li>\n<li><a href=\"https://bugwz.com/2019/09/17/hexo-markdown-renderer/#1-3%E3%80%81hexo-renderer-pandoc\">Hexo的多种Markdown渲染器对比分析</a></li>\n<li><a href=\"https://daringfireball.net/projects/markdown/syntax#html\">Daring Fireball: Markdown Syntax Documentation</a></li>\n<li><a href=\"https://hexo.io/zh-cn/docs/\">文档 | Hexo</a></li>\n<li><a href=\"https://michelf.ca/projects/php-markdown/extra/#spe-attr\">PHP Markdown Extra</a></li>\n</ul>\n","raw":"---\ntitle: 自定义 Hexo 中的超链接样式\ncategories:\n  - 博客站点维护\n  - Hexo\nabbrlink: 8aa53d93\ntags:\n  - URL\n  - HTML\n  - NPM\n  - JavaScript\n  - CSS\n  - hexo-plugins\ncover: 'https://cdn.gallery.uuanqin.top/img/202411272314587.webp'\ndescription: 使用博主自写插件轻松使用超链接的自定义样式模板\nswiper_index: 6\nswiper_desc: 最近更新完善\nswiper_cover: 'https://cdn.gallery.uuanqin.top/img/202411272314587.webp'\ndate: 2024-11-27 23:35:54\ntop_img:\n---\n\n> [!success] 本文不涉及对主题源代码的修改\n\n今天又开一个坑，写了一个插件方便我自定义链接的样式。按照以往惯例我可能又得写一小篇开发心得 ，不过这次我打算以「Q&A」的方式将一些思考放在文章末尾。\n\n一般来说，改变链接样式似乎写个全局 CSS 就行，但如果实现复杂效果，比如在链接附近加上 `span` 标签等等的实现可能会有所复杂。我暂时想到的解决方案就是从 Markdown 文本上替换超链接，使用指定 HTML 模板，与是就试着写了这样一个插件。\n\n结果写完后发现他还有一个意料之外的功能，就是它可以实现和一些标签插件一样的效果，这就可以**把部分文章内的 Hexo 标签语法给省略掉了**。如果有一天你切换到其他不支持标签语法的博客，你的网页就不会遗留下诸如 `{% name param1 param2 strange_string magic_number%}` 之类的东西。\n\n这篇文章主要内容为使用 `hexo-filter-custom-link` 插件对超链接进行美化的案例，如**增加链接悬浮效果**等。本文算是对这个插件的小小入门，更多替换标签语法的操作详看：[[用 Markdown 链接替换部分 Hexo 标签语法]]。\n\n![gif|377](https://cdn.gallery.uuanqin.top/img/example2-512561323GIF%20(online-video-cutter.com).gif)\n\n`hexo-filter-custom-link` 插件为涉及到文章「超链接」的主题魔改增加了一种新的选择。而且以后在对超链接美化时，我们可以：\n\n- 尽可能避免主题的源代码修改；\n- 尽可能少用 Hexo 内置的标签语法，减少文章维护成本。\n\n# 插件安装与使用\n\n安装与使用方式见项目 README 文档。\n\n[![Readme Card](https://github-readme-stats.uuanqin.top/api/pin/?username=uuanqin&repo=hexo-filter-custom-link)](https://github.com/uuanqin/hexo-filter-custom-link)\n\nGitHub 项目地址：[uuanqin/hexo-filter-custom-link: Customize the rendered HTML of Links. 自定义链接渲染后的 HTML](https://github.com/uuanqin/hexo-filter-custom-link)\n\n主要功能：\n\n- 自定义链接渲染后的样式，让形如 `[text](url)` 或 `[text](url \"title\")` 的超链接渲染成你想要的模板。\n- 插件提供多种通配符方便设计更复杂的模板，通配符可以重复使用。\n- 在特殊情况下，可以为一些特殊链接指定不同的模板，让超链接的样式更加丰富。\n- 对于复杂模板，支持模板间距以区分其他 Markdown 文本，避免渲染错误。\n\n插件原理是在 Markdown 文本编译前，识别链接形式并进行模板替换的。目前测试了该插件与以下「链接替换」插件（毕竟博主还在用......）并不冲突：\n\n- [hexojs/hexo-filter-nofollow](https://github.com/hexojs/hexo-filter-nofollow) ：为外链添加 `nofollow` 等属性提升网站的 SEO\n- [willow-god/hexo-safego](https://github.com/willow-god/hexo-safego/) ：一款外部链接替换插件\n\n\n# 为普通链接增加悬浮样式\n\n本小节含三个案例，均基于 Codepen 项目简化处理。如果想实现原版效果可到原项目中查看具体代码。\n\n> [!note] 插件已更新，请遵循新版插件的配置示例。\n\n## 例 1：鼠标悬浮色块聚焦\n\n> [!hint] 本案例基于该项目进行简化：[Awesome link underlines](https://codepen.io/decemberly/pen/JOrBxo)\n\n最简单的入门案例。\n\n![demo](https://cdn.gallery.uuanqin.top/img/hovermousedemo.gif)\n\n`_config.yml` 配置如下：\n\n```yaml\ncustom_link:  \n\tenable: true # enable this plugin  \n\tgeneral_template: '<a class=\"link-example-1\" href=\"__URL__\">__TEXT__</a>'\n```\n\n引入以下 CSS 即可：\n\n```css\n.link-example-1 {\n    color: black;\n    border-bottom: 0.1em solid #669900;\n    outline: 1em solid rgba(255, 215, 0, 0);\n    text-decoration: none;\n    transition: all 0.3s ease;\n}\n\n.link-example-1:hover, .link-example-1:focus, .link-example-1:active {\n    background: #b5ca4226;\n    outline: 0.1em solid #b5ca4226;\n}\n```\n\n实际上插件做的就是把每个链接加上 `.link-example-1` 类，我们通过自定义 CSS 就能调整链接的样式。更多炫酷效果可到原项目查看。\n\n> 这个项目是 [[自定义文章内外链接样式的另一种方法（使用 markdown-it 插件）|很久以前]] 使用过的，算是从垃圾桶捡回来举例了😂\n\n## 例 2：鼠标悬浮小弹窗\n\n> [!hint] 本案例基于该项目进行简化：[Best Creative Link Hover](https://codepen.io/ysoftaoglu/pen/JXROeY)\n\n![gif|377](https://cdn.gallery.uuanqin.top/img/example2-512561323GIF%20(online-video-cutter.com).gif)\n\n`_config.yml` 配置如下：\n\n```yaml\ncustom_link:\n  enable: true   # enable this plugin\n  general_template: |  \n\t<a class=\"link-example-2\" href=\"__URL__\">  \n\t<span class=\"pop-up\">弹窗</span>  \n\t__TEXT__</a>\n```\n\n引入以下 CSS 文件：\n\n```css\n/*https://codepen.io/ysoftaoglu/pen/JXROeY*/\n\n.link-example-2 {\n    display: inline-block;\n    transition: all .2s ease;\n}\n\nspan.bilink-pop-up {\n    display: block;\n    /*             font-size: 21px; */\n    font-weight: normal;\n    /*transform: translateY(20px);*/\n    transition: all .2s ease;\n    opacity: 0;\n    position: absolute; /* 将 span 绝对定位 */\n    top: 0;\n    left: 50%; /* 水平居中 */\n    transform: translate(-50%, -80%); /* 调整位置使其完全居中 */\n    width: auto; /* 设置宽度为0，使其不占空间 */\n    height: auto; /* 设置高度为0，使其不占空间 */\n    white-space: nowrap; /* 文字不折叠 */\n    font-size: 12px; /* 固定文字大小 */\n    font-style: normal; /* 设置正斜体 */\n    border-radius: 10px;\n    padding: 0px 8px;\n    background-color: #c7046f;\n    color: #fff;\n}\n\n.link-example-2:hover span.bilink-pop-up,\n.link-example-2:focus span.bilink-pop-up {\n    opacity: 1;\n}\n\n.link-example-2:hover {\n    transform: translateY(-2px);\n    text-decoration: none !important;\n}\n```\n\n针对本案例，以上面的方式配置的话在大多数情况下小弹窗能正常显示，但是有可能被部分表格顶部覆盖。我们可以添加以下 JavaScript 以更好解决这个问题：\n\n```javascript\n// 用于解决遮挡问题\ndocument.addEventListener('DOMContentLoaded', function() {\n    const aclassElements = document.querySelectorAll('.table-wrap');\n    aclassElements.forEach(function(tableWrapElement) {\n        if (tableWrapElement.querySelector('span.pop-up')) {\n            // 如果包含，则设置 overflow: visible;\n            tableWrapElement.style.overflow = 'visible';\n        }\n    });\n});\n```\n\n> [!question] 这个链接气泡好像有点眼熟？\n> 这是目前本站双向链接的效果，和本站 [[为评论系统增加输入提醒【Waline】|评论区悬浮气泡]] 效果恰好统一。（此处暗示了读者去评论区评论试试气泡效果😉）\n\n## 例 3：鼠标悬浮变动下划线\n\n> [!hint] 本案例基于该项目进行简化：[Link Hover Flash](https://codepen.io/alphardex/details/WNQPWmj)\n\n![img|500](https://cdn.gallery.uuanqin.top/img/example3-sdfasfsdfGIF.gif)\n\n本例和例 1 相似，只需要为链接加上类即可。\n\n`_config.yml` 配置如下：\n\n```yaml\ncustom_link:\n  enable: true   # enable this plugin\n  general_template: '<a class=\"link-example-3\" href=\"__URL__\">__TEXT__</a>'\n```\n\n引入以下 CSS 文件：\n\n```css\n/*https://codepen.io/alphardex/details/WNQPWmj*/\n\n.link-example-3 {\n    --ease-out-expo: cubic-bezier(0.19, 1, 0.22, 1);\n    position: relative;\n}\n.link-example-3::before, .link-example-3::after {\n    position: absolute;\n    content: \"\";\n    left: 0;\n    bottom: -2px;\n    display: block;\n    width: 100%;\n    height: 3px;\n    background: #dcb438;\n    transition: 1.1s var(--ease-out-expo);\n}\n.link-example-3::before {\n    transform: scaleX(0);\n    transform-origin: left;\n}\n.link-example-3::after {\n    transform-origin: right;\n    transition-delay: 0.25s;\n}\n.link-example-3:hover::before {\n    transform: scaleX(1);\n    transition-delay: 0.25s;\n}\n.link-example-3:hover::after {\n    transform: scaleX(0);\n    transition-delay: 0s;\n}\n\n```\n\n# 后记\n\n插件一边写一边增加新的功能，时间都花在找 Bug 上！\n\n## 写插件的小小心得\n\n> [!question] 为什么博主执着于避免修改主题源码以及摒弃标签语法这两点？\n> 自从博主使用 Hexo 以来，在对博客的美化道路就十分坎坷。我总是小心翼翼地避开对 Butterfly 源代码的修改，其中一个原因就是认为改了代码后 Git 维护变繁杂了且主题不好升级。（但实际上为了小破站安全，博主最终还是 [[【索引】装点你的 Butterfly 博客|迫不得已]] 改了一些源代码去掉了敏感外链，这也直接导致我需要维护新的分支）\n>\n> 至于 Hexo 的标签语法博主是坚决不使用的。标签语法强依赖于 Hexo 或某一个 Hexo 插件。如果博客更换为其他项目，文章中会遗留许多奇奇怪怪的特殊标记。另外，目前文章使用了 GFM、OFM 语法，花了很大的精力维护了 Hexo 和 Obsidian [[Hexo 博客适配 Obsidian 新语法|两端的统一]]。为了以后文字长久的兼容性，真的真的不能再用任何新语法了。\n>\n> 一句话总结：博主有非常奇怪的「洁癖」😰。\n\n> [!question] 这个插件是如何诞生的？\n> 本小站是通过 [[构建 Obsidian 的 Hexo 写作工作流|Obsidian]] 进行维护的。很久以前在到处 [[自定义文章内外链接样式的另一种方法（使用 markdown-it 插件）|玩插件时]] 就有一个想法，就是打算为站内的双向链接做出不一样的标识以在 Hexo 发挥双链的优势。于是我改进了以前写过的双链插件 [hexo-filter-titlebased-link](https://github.com/uuanqin/hexo-filter-titlebased-link) 使其支持自定义渲染后的链接形式实现小弹窗效果。后来发现这部分功能可以是通用的，不如将它提取出来使之能应用到更多的链接形式中。\n\n> [!question] 这个插件和魔改源代码又有什么区别？\n> 插件原理和魔改主题源代码基本相同。插件只是用更无痛的「配置」方式代替了源码修改操作。当然使用插件也是有缺点的，首先就是灵活度受限，其次就是依赖性了。\n\n> [!question] 这个插件和标签语法又有什么区别？\n> 可以说插件把 [丑陋](https://github.com/bmwant/hexo-post-link?tab=readme-ov-file#hexo-post-link) 的标签语法变「漂亮」了，但有可能没有标签语法那么灵活。这个插件可以使用自定义占位符满足一部分的标签语法场景。\n\n> [!question] 插件是不是使用了新的标记语言，这是否与前面不使用新语法的观点相悖？\n> 特殊链接是需要特征的，「标记」无可避免。但是插件不引入新语法，它只是将标记放置于链接标题中 `[name](url \"title\")`（`\"title\"` 这个位置十分隐蔽，之前我都没注意到 Markdown 还有这个语法，估计也没多少人用）。链接标题一般只有在鼠标悬浮在链接时才会展现，即使卸载本插件，原文章的页面展示上还是一个普通的超链接，不会增加奇奇怪怪的内容。\n\n往期心得：\n\n- [[【开发杂记】第一次开发 npm 插件]]\n- [[【开发杂记】第一次写 Hexo 插件]]\n\n## 后续任务\n\n- [ ] 顺便把 `hexo-filter-titlebased-link` 插件也升级一下\n- [x] 疑似 hexo 渲染插件的 Bug，待排查。目前推测为 `mdit-plugin-callouts` 的 Bug。\n- [x] 取消 `%%` 标签，把参数放到 TITLE 中\n\n# 参考文章\n\n工具：\n\n- [regex101: build, test, and debug regex](https://regex101.com/)\n- [正则表达式在线测试 | 菜鸟工具](https://www.jyshare.com/front-end/854/)\n- [Codepen](https://codepen.io/) 的编辑器。奇奇怪怪的样式语言（SCSS、Stylus）可以去 Codepen 编译得到 CSS。\n- [Markdown Tutorial - Links](https://commonmark.org/help/tutorial/07-links.html)\n- [Marked Demo](https://marked.js.org/demo/?version=14.1.3)\n- [GIF Cutter - 在线剪切、修剪和缩短 GIFS](https://online-video-cutter.com/cn/trim-gif)\n\n样板代码参考：\n\n- [willow-god/hexo-safego](https://github.com/willow-god/hexo-safego/)\n- [plugins/packages/link-interceptor at master · walinejs/plugins](https://github.com/walinejs/plugins/tree/master/packages/link-interceptor)\n- [Zfour/hexo-swiper-bar](https://github.com/Zfour/hexo-swiper-bar)\n\n其他：\n\n- [Link Classic Solid Icon | Font Awesome](https://fontawesome.com/icons/link?f=classic&s=solid)\n- [Hexo的多种Markdown渲染器对比分析](https://bugwz.com/2019/09/17/hexo-markdown-renderer/#1-3%E3%80%81hexo-renderer-pandoc)\n- [Daring Fireball: Markdown Syntax Documentation](https://daringfireball.net/projects/markdown/syntax#html)\n- [文档 | Hexo](https://hexo.io/zh-cn/docs/)\n- [PHP Markdown Extra](https://michelf.ca/projects/php-markdown/extra/#spe-attr)","categories":[{"name":"博客站点维护","api":"api/categories/博客站点维护.json"},{"name":"Hexo","api":"api/categories/博客站点维护/Hexo.json"}],"tags":[{"name":"HTML","api":"api/tags/HTML.json"},{"name":"CSS","api":"api/tags/CSS.json"},{"name":"JavaScript","api":"api/tags/JavaScript.json"},{"name":"NPM","api":"api/tags/NPM.json"},{"name":"URL","api":"api/tags/URL.json"},{"name":"hexo-plugins","api":"api/tags/hexo-plugins.json"}]},"api":"api/posts/p/8aa53d93.json"}