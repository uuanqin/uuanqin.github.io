{"data":{"title":"STM32+ESP8266+MQTT 实现阿里云温湿度监控及 LED 点灯（FreeRTOS+标准库 or HAL）","slug":"嵌入式/STM32+ESP8266+MQTT 实现阿里云温湿度监控及 LED 点灯（FreeRTOS+标准库 or HAL）","description":"一整套「嵌入式」入门练习","date":"2024-04-05T04:49:50.000Z","updated":"2024-12-23T17:46:36.559Z","language":"zh-CN","comments":true,"url":"p/de31d8e3/","cover":"https://cdn.gallery.uuanqin.top/img/20240405161606.webp","images":[],"content":"<blockquote>\n<p>标题直接 Buff 点满…</p>\n</blockquote>\n<h1 id=\"阅读指引\"><a class=\"markdownIt-Anchor\" href=\"#阅读指引\"></a> 阅读指引</h1>\n<p>如果你是 0 基础选手，建议先阅读以下内容掌握基本的 FreeRTOS 工程知识：</p>\n<ol>\n<li>C 语言基本语法</li>\n<li>STM32 工程创建，详看\n<ul>\n<li><a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/6c1cd7d0/\"><span class=\"yukari\">站内文章</span>STM32 工程的创建 - 基于寄存器或标准库</a></li>\n<li><a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/53832aef/\"><span class=\"yukari\">站内文章</span>STM32 工程的创建 - 基于 HAL 库</a></li>\n</ul>\n</li>\n<li>FreeRTOS 的移植，详看\n<ul>\n<li><a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/8111c784/\"><span class=\"yukari\">站内文章</span>STM32 移植 FreeRTOS - 基于标准库</a></li>\n<li><a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/7e13c80c/\"><span class=\"yukari\">站内文章</span>STM32 移植 FreeRTOS - 基于 HAL 库</a></li>\n</ul>\n</li>\n</ol>\n<p>本文主要分为三个部分，每个部分需要准备的工具如下：</p>\n<ol>\n<li>阿里云物联网平台注册：需要阿里云账号。</li>\n<li>模拟 MQTT 客户端发送与订阅消息：软件 MQTT.fx，阿里云提供的 MQTT_Password 工具。</li>\n<li>ESP8266 固件烧录：串口助手软件，需要材料 ESP8266、USB-TTL、杜邦线若干。</li>\n<li>软件实现：Keil 软件、STM32CubeMX（使用 HAL）、STM32、DHT11、杜邦线若干、OLED（可选）、LED 灯、ST-Link</li>\n</ol>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">阅读前的提示</div>\n</div>\n<div class=\"callout-content\"><p></p>\n<ol>\n<li>阿里云相关产品新用户只能免费试用 1 个月。比如物联网企业版实例新用户可以试用 1 个月，但也有公共实例<strong>永久免费使用</strong>。增值服务 IoT Studio 用于绘制可视化界面，可以试用 1 个月，但其实这也<strong>不是必须的</strong>，就是提供了一个可视化界面而已。</li>\n<li>MQTT 功能是通过固件烧录进 ESP8266 中的，不是 MQTT 协议在 FreeRTOS 上的移植。</li>\n<li>如果只是单纯实现温湿度监控及点灯的话，FreeRTOS 其实不是必须的。</li>\n</ol>\n</div></div><h1 id=\"接线图与实物图展示\"><a class=\"markdownIt-Anchor\" href=\"#接线图与实物图展示\"></a> 接线图与实物图展示</h1>\n<blockquote>\n<p>Visio 随便画的，感觉掌握不到诀窍，很难画。</p>\n</blockquote>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240630000720.webp\" alt=\"image.png\" /></p>\n<blockquote>\n<p>下图有个多余连接的串口，读者可以忽略。</p>\n</blockquote>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240630135721.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<h1 id=\"uml\"><a class=\"markdownIt-Anchor\" href=\"#uml\"></a> UML</h1>\n<blockquote>\n<p>如果 UML 图不规范请指出哈。我感觉 UML 图我永远画不对…</p>\n</blockquote>\n<p>用例图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202412240142627.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>用户通过阿里云物联网平台进行温湿度数据监测以及 LED 灯控制，此外，用户还可通过直接观察设备显示屏读取温湿度监测数据。对于通过阿里云物联网平台监测温湿度数据的用例，除了在远程平台实现可视化界面外，STM32 需实现将温湿度数据发送至远程平台的能力。无论是温湿度数据的本地展示或远程发送，都依赖于 STM32 中获取温湿度数据用例。该用例需要 STM32 与温湿度监测设备进行数据交互。远程平台中控制 LED 灯用例的实现不仅依赖于物联网平台提供的指令发送接口，也需要 STM32 实现信号的接收与 LED 灯设置的功能。</p>\n<p>发送温湿度过程顺序图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202412240142103.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<p>单片机从监测设备获取温湿度数据并发送至阿里云物联网平台过程的顺序图如上图所示。单片机初始化完毕后，利用 FreeRTOS 任务函数定时向 DHT11 发送复位信号。DHT11 接收复位信号后将 40 Bit 的检测数据通过单总线协议传输至 STM32 处理。随后，STM32 利用该数据完成以下任务：</p>\n<ol>\n<li>更新 OLED 显示屏，实现设备实时显示温湿度信息的功能。</li>\n<li>将温湿度数据生成 AT 命令，通过串口发送至 ESP8266 模块中。</li>\n</ol>\n<p>ESP8266 模块接收到 AT 指令后，将通过 MQTT 协议向阿里云物联网平台发布消息。阿里云物联网平台将根据该消息的主题与参数，更新可视化界面的网络应用，从而实现用户远程监控设备的功能。</p>\n<p>接收 LED 灯指令顺序图：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/202412240143263.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<p>用户通过网络应用的可视化界面控制设备 LED 灯的顺序图如上图所示。用户通过可视化界面操作 LED 灯状态为“0（关闭）”或“1（开启）”。MQTT Broker 向设备发送消息，该消息由连接至 STM32 单片机的 WIFI 模块接收。WIFI 模块将接收到的数据存放在串口缓冲区中，并设置标志位提醒 STM32 单片机进行接收。STM32 利用 FreeRTOS 任务调度，获取 WIFI 模块返回的信息并解析 LED 灯控制指令。最后根据指令控制 LED 灯电路，改变灯的状态。</p>\n<h1 id=\"阿里云物联网平台\"><a class=\"markdownIt-Anchor\" href=\"#阿里云物联网平台\"></a> 阿里云物联网平台</h1>\n<blockquote>\n<p>此部分可参考官方文档：<a href=\"https://help.aliyun.com/zh/iot/getting-started/overview-7?spm=a2c4g.11186623.0.0.79fd1b1bZflRsN\">如何快速将设备接入物联网平台并控制其开关_物联网平台(IoT)-阿里云帮助中心 (aliyun.com)</a></p>\n</blockquote>\n<h2 id=\"添加产品物模型\"><a class=\"markdownIt-Anchor\" href=\"#添加产品物模型\"></a> 添加产品物模型</h2>\n<p>首先你得拥有一个阿里云账号，然后开通物联网平台：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135040.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>进入管理控制台：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135115.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>创建一个实例（前提需实名认证）：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135235.webp\" alt=\"image.png\" /></p>\n<p>标准实例可以免费开通试用 1 个月。</p>\n<blockquote>\n<p>公共实例开通免费，但据说可能联网不佳，我试了一下感觉还行，没条件的可以直接使用公共实例。</p>\n</blockquote>\n<p>进入实例详情：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135609.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<p>创建一个产品：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135735.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<p>创建设备：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135903.webp\" alt=\"image.png\" /></p>\n<p>下面添加一个物模型：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405135956.webp\" alt=\"image.png\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140057.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140129.webp\" alt=\"image.png\" /></p>\n<h2 id=\"使用-iot-studio-绘制界面\"><a class=\"markdownIt-Anchor\" href=\"#使用-iot-studio-绘制界面\"></a> 使用 IoT Studio 绘制界面</h2>\n<p>回到物联网平台，查看增值服务。如果没有 IoT Studio，可以在选购增值服务中购买。IoT Studio 可以试用 1 个月。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140450.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>进入 IoT Studio，选择你的实例，新建 Web 应用：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140617.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140657.webp\" alt=\"image.png\" width=\"350px\" /></p>\n<p>绘制一个像样的页面：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140802.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>仪表盘数据源配置：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140841.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405140944.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>折线图数据源配置：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405141607.webp\" alt=\"image.png\" width=\"300px\" /></p>\n<p>按钮交互配置：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405141654.webp\" alt=\"image.png\" width=\"236px\" /></p>\n<p>这时点击预览的话仪表盘会显示没有数据，可继续下一章节阅读。</p>\n<h1 id=\"mqttfx-模拟客户端发布与订阅消息\"><a class=\"markdownIt-Anchor\" href=\"#mqttfx-模拟客户端发布与订阅消息\"></a> MQTT.fx 模拟客户端发布与订阅消息</h1>\n<blockquote>\n<p>此部分可参考文档：<a href=\"https://help.aliyun.com/zh/iot/getting-started/using-mqtt-fx-to-access-iot-platform\">使用MQTT协议模拟设备快速接入物联网平台_物联网平台(IoT)-阿里云帮助中心 (aliyun.com)</a></p>\n</blockquote>\n<p>安装 MQTT_Password 工具包：<a href=\"https://help.aliyun.com/zh/iot/user-guide/how-do-i-obtain-mqtt-parameters-for-authentication#section-jx3-u57-pmm\">如何计算MQTT签名参数_物联网平台(IoT)-阿里云帮助中心 (aliyun.com)</a></p>\n<p>安装 MQTT.fx：<a href=\"https://www.softblade.de/download/\">MQTT.fx® Download (softblade.de)</a></p>\n<p>回到阿里云物联网平台控制台&gt;设备&gt;查看，把三元素复制下来：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405142608.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>使用 MQTT_Password 计算签名：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405142728.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<blockquote>\n<p>除了此处的 Clientid 是需要填入的设备信息 Clientid，其他所有地方说的 Client ID 都是指 MQTT 连接的 Client ID 具体值就是计算结果的 mqttClientid</p>\n</blockquote>\n<p>打开 MQTT.fx，配置：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405142832.webp\" alt=\"image.png\" width=\"375px\" /></p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405143044.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>Broker Address 为你的 <code>ProductID</code>+<code>.iot-as-mqtt.cn-shanghai.aliyuncs.com</code>。</p>\n<p>链接。然后尝试发布消息和订阅消息：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405143246.webp\" alt=\"image.png\" width=\"425px\" /></p>\n<p>连接后阿里云物联网平台将显示在线：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405144051.webp\" alt=\"image.png\" /></p>\n<p>尝试在 <code>/sys/k10qu3ushCq/mqtt_stm32/thing/event/property/post</code> 发布一个 json 数据：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;params&quot;</span><span class=\"punctuation\">:</span><span class=\"punctuation\">&#123;</span><span class=\"attr\">&quot;temperature&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">42</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;Humidity&quot;</span><span class=\"punctuation\">:</span><span class=\"number\">22</span><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span><span class=\"attr\">&quot;version&quot;</span><span class=\"punctuation\">:</span><span class=\"string\">&quot;1.0.0&quot;</span><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405143449.webp\" alt=\"image.png\" width=\"400px\" /></p>\n<p>结果在 IoT Studio 网页应用就会显示数据：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405143533.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<p>在 <code>/sys/k10qu3ushCq/mqtt_stm32/thing/service/property/set</code> 中订阅，点击开关按钮将收到消息：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405143718.webp\" alt=\"image.png\" width=\"475px\" /></p>\n<h1 id=\"esp8266-固件烧录及串口调试\"><a class=\"markdownIt-Anchor\" href=\"#esp8266-固件烧录及串口调试\"></a> ESP8266 固件烧录及串口调试</h1>\n<p>首先，固件烧录部分详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/a587bc70/\"><span class=\"yukari\">站内文章</span>ESP8266 烧写 AT MQTT 固件</a>。</p>\n<p>ESP8266 连上串口后测试 AT 命令（记得加 <code>\\r\\n</code>）：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 设置热点模式</span></span><br><span class=\"line\">AT+CWMODE=1</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 链接手机热点（或 WIFI）</span></span><br><span class=\"line\">AT+CWJAP=<span class=\"string\">&quot;&lt;热点名称&gt;&quot;</span>,<span class=\"string\">&quot;&lt;热点密码&gt;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># MQTT配置。注意，逗号前加反斜杠。ClientID+用户名+密码</span></span><br><span class=\"line\">AT+MQTTUSERCFG=0,1,<span class=\"string\">&quot;mqtt_stm32|securemode=2\\,signmethod=hmacsha1\\,timestamp=6606|&quot;</span>,<span class=\"string\">&quot;mqtt_stm32&amp;k1xxxxxxxq&quot;</span>,<span class=\"string\">&quot;5DExxxxxxC2&quot;</span>,0,0,<span class=\"string\">&quot;&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 连接 MQTT Broker</span></span><br><span class=\"line\">AT+MQTTCONN=0,<span class=\"string\">&quot;k1xxxxxxxq.iot-as-mqtt.cn-shanghai.aliyuncs.com&quot;</span>,1883,0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 订阅 MQTT主题</span></span><br><span class=\"line\">AT+MQTTSUB=0,<span class=\"string\">&quot;/sys/k10qu3ushCq/mqtt_stm32/thing/service/property/set&quot;</span>,0</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 发送数据</span></span><br><span class=\"line\">AT+MQTTPUB=0,<span class=\"string\">&quot;/sys/k10qu3ushCq/mqtt_stm32/thing/event/property/post&quot;</span>,<span class=\"string\">&quot;&#123;\\&quot;params\\&quot;:&#123;\\&quot;temperature\\&quot;:42\\,\\&quot;Humidity\\&quot;:22&#125;\\,\\&quot;version\\&quot;:\\&quot;1.0.0\\&quot;&#125;&quot;</span>,0,0</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>指令说明参考：<a href=\"https://docs.espressif.com/projects/esp-at/zh_CN/latest/esp32/Get_Started/index.html\">入门指南 - ESP32 - — ESP-AT 用户指南 latest 文档 (espressif.com)</a></p>\n</blockquote>\n<p>测试发送时间上行成功后，可以继续测试 LED 开关命令。在 IoT Studio 点击按钮，串口助手将回显消息。</p>\n<h1 id=\"软件实现思路\"><a class=\"markdownIt-Anchor\" href=\"#软件实现思路\"></a> 软件实现思路</h1>\n<p>整个 STM32 工程比较庞杂。本节介绍主要的具体思路，并展示重要代码过程。</p>\n<p>主要思路：</p>\n<ol>\n<li>STM32 串口 1 用于向电脑发送数据，<code>printf</code> 重写为向串口 1 发送数据。详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/5c1cda26/\"><span class=\"yukari\">站内文章</span>串口驱动程序之「发送数据」</a></li>\n<li>串口 2 用于链接 ESP8266，需要实现不定长数据的收发。详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/aae69ac0/\"><span class=\"yukari\">站内文章</span>串口驱动程序之「不定长字符串的接收」</a></li>\n<li>使用 DHT11 检测环境温湿度。详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/c497cb3f/\"><span class=\"yukari\">站内文章</span>DHT11 驱动程序</a></li>\n<li>OLED 模块作为温湿度数据的实时显示。详看：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/8c0cedd4/\"><span class=\"yukari\">站内文章</span>OLED 驱动程序</a></li>\n<li>一个任务指示灯，单纯用来指示 FreeRTOS 任务有没有卡死</li>\n<li>一个 LED 灯用来应答阿里云发来的数据</li>\n</ol>\n<p>以下代码主要解析任务分配以及设备初始化的编写。标准库和 HAL 具体实现略有不同（LED 用的端口、不定长字符串接收的实现方式），请以具体配置为准。</p>\n<h2 id=\"标准库\"><a class=\"markdownIt-Anchor\" href=\"#标准库\"></a> 标准库</h2>\n<p>main.c：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br><span class=\"line\">172</span><br><span class=\"line\">173</span><br><span class=\"line\">174</span><br><span class=\"line\">175</span><br><span class=\"line\">176</span><br><span class=\"line\">177</span><br><span class=\"line\">178</span><br><span class=\"line\">179</span><br><span class=\"line\">180</span><br><span class=\"line\">181</span><br><span class=\"line\">182</span><br><span class=\"line\">183</span><br><span class=\"line\">184</span><br><span class=\"line\">185</span><br><span class=\"line\">186</span><br><span class=\"line\">187</span><br><span class=\"line\">188</span><br><span class=\"line\">189</span><br><span class=\"line\">190</span><br><span class=\"line\">191</span><br><span class=\"line\">192</span><br><span class=\"line\">193</span><br><span class=\"line\">194</span><br><span class=\"line\">195</span><br><span class=\"line\">196</span><br><span class=\"line\">197</span><br><span class=\"line\">198</span><br><span class=\"line\">199</span><br><span class=\"line\">200</span><br><span class=\"line\">201</span><br><span class=\"line\">202</span><br><span class=\"line\">203</span><br><span class=\"line\">204</span><br><span class=\"line\">205</span><br><span class=\"line\">206</span><br><span class=\"line\">207</span><br><span class=\"line\">208</span><br><span class=\"line\">209</span><br><span class=\"line\">210</span><br><span class=\"line\">211</span><br><span class=\"line\">212</span><br><span class=\"line\">213</span><br><span class=\"line\">214</span><br><span class=\"line\">215</span><br><span class=\"line\">216</span><br><span class=\"line\">217</span><br><span class=\"line\">218</span><br><span class=\"line\">219</span><br><span class=\"line\">220</span><br><span class=\"line\">221</span><br><span class=\"line\">222</span><br><span class=\"line\">223</span><br><span class=\"line\">224</span><br><span class=\"line\">225</span><br><span class=\"line\">226</span><br><span class=\"line\">227</span><br><span class=\"line\">228</span><br><span class=\"line\">229</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;gpio_out.h&quot;</span>   </span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;key.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;OLED.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;timer.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;SysTick.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;FreeRTOS.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;task.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;limits.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;esp8266.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ALi_MQTT_Temp_Humi_LED_Device.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> START_TASK_PRIO\t\t1</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> START_STK_SIZE \t\t128  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t StartTask_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">start_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LED5_TASK_PRIO\t\t2</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LED5_STK_SIZE \t\t50  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t LED5Task_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">led5_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAIN_TASK_PRIO\t\t3</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MAIN_STK_SIZE \t\t50  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t MainTask_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_INIT_TASK_PRIO\t\t4</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_INIT_STK_SIZE \t\t128  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t WifiInitTask_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">wifi_init_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_TASK_PRIO\t\t5</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_STK_SIZE \t\t128  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t WifiTask_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">wifi_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TEST_ON_TASK_PRIO\t\t6</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TEST_ON_STK_SIZE \t\t128  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t TestOnTask_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test_on_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//任务优先级</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TEST_OFF_TASK_PRIO\t\t6</span></span><br><span class=\"line\"><span class=\"comment\">//任务堆栈大小\t</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> TEST_OFF_STK_SIZE \t\t128  </span></span><br><span class=\"line\"><span class=\"comment\">//任务句柄</span></span><br><span class=\"line\">TaskHandle_t TestOffTask_Handler;</span><br><span class=\"line\"><span class=\"comment\">//任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test_off_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// LED灯</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> LED5 GPIO_Pin_5</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// ESP8266 RESET</span></span><br><span class=\"line\"><span class=\"comment\">//#define ESP8266_RESET GPIO_Pin_7 // 低电平 reset</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*******************************************************************************</span></span><br><span class=\"line\"><span class=\"comment\">* 函 数 名         : main</span></span><br><span class=\"line\"><span class=\"comment\">* 函数功能\t\t   : 主函数</span></span><br><span class=\"line\"><span class=\"comment\">* 输    入         : 无</span></span><br><span class=\"line\"><span class=\"comment\">* 输    出         : 无</span></span><br><span class=\"line\"><span class=\"comment\">*******************************************************************************/</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">()</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tSysTick_Init(<span class=\"number\">72</span>);</span><br><span class=\"line\">\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);<span class=\"comment\">//设置系统中断优先级分组4</span></span><br><span class=\"line\">\tGPIO_OUT_Init(LED5); <span class=\"comment\">// FreeRTOS任务指示灯</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">\tAMTHL_Init();</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">//创建开始任务</span></span><br><span class=\"line\">    xTaskCreate((TaskFunction_t )start_task,            <span class=\"comment\">//任务函数</span></span><br><span class=\"line\">                (<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;start_task&quot;</span>,          <span class=\"comment\">//任务名称</span></span><br><span class=\"line\">                (<span class=\"type\">uint16_t</span>       )START_STK_SIZE,        <span class=\"comment\">//任务堆栈大小</span></span><br><span class=\"line\">                (<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,                  <span class=\"comment\">//传递给任务函数的参数</span></span><br><span class=\"line\">                (UBaseType_t    )START_TASK_PRIO,       <span class=\"comment\">//任务优先级</span></span><br><span class=\"line\">                (TaskHandle_t*  )&amp;StartTask_Handler);   <span class=\"comment\">//任务句柄              </span></span><br><span class=\"line\">    vTaskStartScheduler();          <span class=\"comment\">//开启任务调度</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//开始任务任务函数</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">start_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    taskENTER_CRITICAL();           <span class=\"comment\">//进入临界区</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//创建任务指示灯任务</span></span><br><span class=\"line\">    xTaskCreate((TaskFunction_t )led5_task,     </span><br><span class=\"line\">                (<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;led5_task&quot;</span>,   </span><br><span class=\"line\">                (<span class=\"type\">uint16_t</span>       )LED5_STK_SIZE, </span><br><span class=\"line\">                (<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,</span><br><span class=\"line\">                (UBaseType_t    )LED5_TASK_PRIO,</span><br><span class=\"line\">                (TaskHandle_t*  )&amp;LED5Task_Handler); </span><br><span class=\"line\">\t<span class=\"comment\">//创建main任务</span></span><br><span class=\"line\">    xTaskCreate((TaskFunction_t )main_task,     </span><br><span class=\"line\">                (<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;main_task&quot;</span>,   </span><br><span class=\"line\">                (<span class=\"type\">uint16_t</span>       )MAIN_STK_SIZE, </span><br><span class=\"line\">                (<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,</span><br><span class=\"line\">                (UBaseType_t    )MAIN_TASK_PRIO,</span><br><span class=\"line\">                (TaskHandle_t*  )&amp;MainTask_Handler);</span><br><span class=\"line\">\t<span class=\"comment\">//创建wifi任务</span></span><br><span class=\"line\">    xTaskCreate((TaskFunction_t )wifi_init_task,     </span><br><span class=\"line\">                (<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;wifi_init_task&quot;</span>,   </span><br><span class=\"line\">                (<span class=\"type\">uint16_t</span>       )WIFI_INIT_STK_SIZE, </span><br><span class=\"line\">                (<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,</span><br><span class=\"line\">                (UBaseType_t    )WIFI_INIT_TASK_PRIO,</span><br><span class=\"line\">                (TaskHandle_t*  )&amp;WifiInitTask_Handler);</span><br><span class=\"line\">\t\t\t\t</span><br><span class=\"line\">    vTaskDelete(StartTask_Handler); <span class=\"comment\">//删除开始任务</span></span><br><span class=\"line\">    taskEXIT_CRITICAL();            <span class=\"comment\">//退出临界区</span></span><br><span class=\"line\">&#125; </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">led5_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        GPIO_OUT_Set(LED5,<span class=\"number\">1</span>);</span><br><span class=\"line\">        vTaskDelay(<span class=\"number\">200</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        GPIO_OUT_Set(LED5,<span class=\"number\">0</span>);</span><br><span class=\"line\">        vTaskDelay(<span class=\"number\">800</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">unsigned</span> <span class=\"type\">int</span> rec_data[<span class=\"number\">4</span>];</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">main_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">\t\tDHT11_REC_Data();</span><br><span class=\"line\">        OLED_ShowNum(<span class=\"number\">2</span>,<span class=\"number\">7</span>,rec_data[<span class=\"number\">2</span>],<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tOLED_ShowNum(<span class=\"number\">2</span>,<span class=\"number\">10</span>,rec_data[<span class=\"number\">3</span>],<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tOLED_ShowNum(<span class=\"number\">3</span>,<span class=\"number\">7</span>,rec_data[<span class=\"number\">0</span>],<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tOLED_ShowNum(<span class=\"number\">3</span>,<span class=\"number\">10</span>,rec_data[<span class=\"number\">1</span>],<span class=\"number\">2</span>);</span><br><span class=\"line\">\t\tDelay_ms(<span class=\"number\">2000</span>);<span class=\"comment\">// 延时2s 否则DHT11数据不稳定</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 一次性任务</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">wifi_init_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    </span><br><span class=\"line\">\tAMTHL_Connet();</span><br><span class=\"line\">\txTaskCreate((TaskFunction_t )wifi_task,     </span><br><span class=\"line\">\t\t\t(<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;wifi_task&quot;</span>,   </span><br><span class=\"line\">\t\t\t(<span class=\"type\">uint16_t</span>       )WIFI_STK_SIZE, </span><br><span class=\"line\">\t\t\t(<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,</span><br><span class=\"line\">\t\t\t(UBaseType_t    )WIFI_TASK_PRIO,</span><br><span class=\"line\">\t\t\t(TaskHandle_t*  )&amp;WifiTask_Handler);</span><br><span class=\"line\">\txTaskCreate((TaskFunction_t )test_on_task,     </span><br><span class=\"line\">\t\t\t(<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;test_on_task&quot;</span>,   </span><br><span class=\"line\">\t\t\t(<span class=\"type\">uint16_t</span>       )TEST_ON_STK_SIZE, </span><br><span class=\"line\">\t\t\t(<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,</span><br><span class=\"line\">\t\t\t(UBaseType_t    )TEST_ON_TASK_PRIO,</span><br><span class=\"line\">\t\t\t(TaskHandle_t*  )&amp;TestOnTask_Handler);</span><br><span class=\"line\">\txTaskCreate((TaskFunction_t )test_off_task,     </span><br><span class=\"line\">\t\t\t(<span class=\"type\">const</span> <span class=\"type\">char</span>*    )<span class=\"string\">&quot;test_off_task&quot;</span>,   </span><br><span class=\"line\">\t\t\t(<span class=\"type\">uint16_t</span>       )TEST_OFF_STK_SIZE, </span><br><span class=\"line\">\t\t\t(<span class=\"type\">void</span>*          )<span class=\"literal\">NULL</span>,</span><br><span class=\"line\">\t\t\t(UBaseType_t    )TEST_OFF_TASK_PRIO,</span><br><span class=\"line\">\t\t\t(TaskHandle_t*  )&amp;TestOffTask_Handler);</span><br><span class=\"line\"></span><br><span class=\"line\">    vTaskDelete(WifiInitTask_Handler);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">wifi_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tvTaskDelay(<span class=\"number\">2000</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tAMTHL_SendMessage();</span><br><span class=\"line\">\t\tvTaskDelay(<span class=\"number\">10000</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 两个任务以防任务偏向</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test_on_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(AMTHL_LED_ON()) <span class=\"comment\">// 消除抖动</span></span><br><span class=\"line\">\t\t\tDelay_ms(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\tvTaskDelay(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">test_off_task</span><span class=\"params\">(<span class=\"type\">void</span> *pvParameters)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"keyword\">while</span>(<span class=\"number\">1</span>)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(AMTHL_LED_OFF()) <span class=\"comment\">// 消除抖动</span></span><br><span class=\"line\">\t\t\tDelay_ms(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t\tvTaskDelay(<span class=\"number\">50</span>);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>设备：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ALi_MQTT_Temp_Humi_LED_Device.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;serial.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;OLED.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;esp8266.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;SysTick.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;gpio_out.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_SSID\t\t<span class=\"string\">&quot;ssid&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_PASSWORD\t<span class=\"string\">&quot;ssidpswd&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTT_CLIENT_ID\t<span class=\"string\">&quot;mqtt_stm32|securemode=2\\\\,signmethod=hmacsha1\\\\,timestamp=106|&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTT_USER_NAME\t<span class=\"string\">&quot;mqtt_stm32&amp;kxxxxCq&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTT_PASSWD\t\t<span class=\"string\">&quot;5DE3xxxxxxxxxEA4C2&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BROKER_ASDDRESS\t<span class=\"string\">&quot;kxxxxxCq.iot-as-mqtt.cn-shanghai.aliyuncs.com&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SUB_TOPIC\t\t<span class=\"string\">&quot;/sys/kxxxxxq/mqtt_stm32/thing/service/property/set&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PUB_TOPIC \t\t<span class=\"string\">&quot;/sys/kxxxxxq/mqtt_stm32/thing/event/property/post&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> JSON_FORMAT \t<span class=\"string\">&quot;&#123;\\\\\\&quot;params\\\\\\&quot;:&#123;\\\\\\&quot;temperature\\\\\\&quot;:%u\\\\,\\\\\\&quot;Humidity\\\\\\&quot;:%u&#125;\\\\,\\\\\\&quot;version\\\\\\&quot;:\\\\\\&quot;1.0.0\\\\\\&quot;&#125;&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SIGNAL_LED GPIO_Pin_6</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTTPUB_BUF_SIZE 256</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">unsigned</span> <span class=\"type\">int</span> rec_data[<span class=\"number\">4</span>]; <span class=\"comment\">// DHT11</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> USART_Buffer ESP8266_Buffer;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">AMTHL_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\tOLED_Init();</span><br><span class=\"line\">\tSerial_Init(<span class=\"number\">115200</span>); <span class=\"comment\">// 波特率115200</span></span><br><span class=\"line\">\tESP8266_Init(<span class=\"number\">115200</span>);</span><br><span class=\"line\">\tGPIO_OUT_Init(SIGNAL_LED);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tOLED_Clear();</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;DHT11 Data&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;Temp:&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">2</span>,<span class=\"number\">9</span>,<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;Humi:&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">3</span>,<span class=\"number\">9</span>,<span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">AMTHL_Connet</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. Set Station Mode.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;AT+CWMODE=1&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">500</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;2. Close ESP8266 Echo.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;ATE0&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">500</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;3. No Auto Connect WIFI.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;AT+CWAUTOCONN=0\\r\\n&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">500</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">1000</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;4. Start Connecting.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;AT+CWJAP=\\&quot;&quot;</span>WIFI_SSID<span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span> WIFI_PASSWORD <span class=\"string\">&quot;\\&quot;&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">5000</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;AT+MQTTUSERCFG=0,1,\\&quot;&quot;</span>  MQTT_CLIENT_ID <span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span> MQTT_USER_NAME <span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span>  MQTT_PASSWD   <span class=\"string\">&quot;\\&quot;,0,0,\\&quot;\\&quot;&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">3000</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;AT+MQTTCONN=0,\\&quot;&quot;</span> BROKER_ASDDRESS  <span class=\"string\">&quot;\\&quot;,1883,0&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">3000</span>);</span><br><span class=\"line\">\tESP8266_Cmd(<span class=\"string\">&quot;AT+MQTTSUB=0,\\&quot;&quot;</span>  SUB_TOPIC <span class=\"string\">&quot;\\&quot;,0&quot;</span>,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tDelay_ms(<span class=\"number\">3000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">AMTHL_SendMessage</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"type\">char</span> buf[MQTTPUB_BUF_SIZE];</span><br><span class=\"line\">\t<span class=\"type\">unsigned</span> <span class=\"type\">int</span> temp,humi;</span><br><span class=\"line\">\ttemp = rec_data[<span class=\"number\">2</span>];</span><br><span class=\"line\">\thumi = rec_data[<span class=\"number\">0</span>];</span><br><span class=\"line\">\t<span class=\"built_in\">sprintf</span>(buf,<span class=\"string\">&quot;AT+MQTTPUB=0,\\&quot;&quot;</span> PUB_TOPIC <span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span> JSON_FORMAT  <span class=\"string\">&quot;\\&quot;,0,0&quot;</span>,temp,humi);</span><br><span class=\"line\">\tESP8266_Cmd(buf,<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Temp: %u degree, Humi: %u %%&quot;</span>,temp,humi);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">AMTHL_LED_ON</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ESP8266_Buffer.FinishFlag)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ESP8266_Check_Str(ESP8266_Buffer.Body,<span class=\"string\">&quot;&#123;\\&quot;LED\\&quot;:1&#125;&quot;</span>))&#123;</span><br><span class=\"line\">\t\t\tGPIO_OUT_Set(SIGNAL_LED,<span class=\"number\">0</span>); <span class=\"comment\">// 开灯</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">AMTHL_LED_OFF</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (ESP8266_Buffer.FinishFlag)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ESP8266_Check_Str(ESP8266_Buffer.Body,<span class=\"string\">&quot;&#123;\\&quot;LED\\&quot;:0&#125;&quot;</span>))&#123;</span><br><span class=\"line\">\t\t\tGPIO_OUT_Set(SIGNAL_LED,<span class=\"number\">1</span>); <span class=\"comment\">// 关灯</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h2 id=\"hal-库\"><a class=\"markdownIt-Anchor\" href=\"#hal-库\"></a> HAL 库</h2>\n<p>任务配置：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240405152014.webp\" alt=\"image.png\" /></p>\n<p>freertos.c：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* Includes ------------------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;FreeRTOS.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;task.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;main.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;cmsis_os.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private includes ----------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN Includes */</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;OLED.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;usart.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;esp8266.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ali_device.h&quot;</span></span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END Includes */</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* Private variables ---------------------------------------------------------*/</span></span><br><span class=\"line\"><span class=\"comment\">/* USER CODE BEGIN Variables */</span></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">uint8_t</span> temperature;         </span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">uint8_t</span> humidity; </span><br><span class=\"line\"><span class=\"comment\">/* USER CODE END Variables */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 省略自动生成内容</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">led_task_func</span><span class=\"params\">(<span class=\"type\">void</span> *argument)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN led_task_func */</span></span><br><span class=\"line\">  <span class=\"comment\">/* Infinite loop */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(;;)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">\t  <span class=\"comment\">// 任务指示灯</span></span><br><span class=\"line\">\tHAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">200</span>);</span><br><span class=\"line\">\tHAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">800</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END led_task_func */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">detect_task_finc</span><span class=\"params\">(<span class=\"type\">void</span> *argument)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN detect_task_finc */</span></span><br><span class=\"line\">\t</span><br><span class=\"line\">  <span class=\"comment\">/* Infinite loop */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(;;)</span><br><span class=\"line\">  &#123;\t</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(AMTHL_LED_ON())</span><br><span class=\"line\">\t\tosDelay(<span class=\"number\">500</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">if</span>(AMTHL_LED_OFF())</span><br><span class=\"line\">\t\tosDelay(<span class=\"number\">500</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">50</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END detect_task_finc */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">ali_mqtt_task_func</span><span class=\"params\">(<span class=\"type\">void</span> *argument)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE BEGIN ali_mqtt_task_func */</span></span><br><span class=\"line\">  AMTHL_Connet();</span><br><span class=\"line\">  <span class=\"comment\">/* Infinite loop */</span></span><br><span class=\"line\">  <span class=\"keyword\">for</span>(;;)</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">\t<span class=\"comment\">// 顺带显示</span></span><br><span class=\"line\">\tDHT11_Read_Data(&amp;humidity,&amp;temperature);</span><br><span class=\"line\">\tOLED_ShowNum(<span class=\"number\">2</span>,<span class=\"number\">7</span>,temperature,<span class=\"number\">2</span>);</span><br><span class=\"line\">\tOLED_ShowNum(<span class=\"number\">3</span>,<span class=\"number\">7</span>,humidity,<span class=\"number\">2</span>);</span><br><span class=\"line\">\tAMTHL_SendMessage();</span><br><span class=\"line\">    osDelay(<span class=\"number\">2000</span>);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"comment\">/* USER CODE END ali_mqtt_task_func */</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>设备：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;cmsis_os.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;usart.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;esp8266.h&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;dht11.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;OLED.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;ali_device.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_SSID\t\t<span class=\"string\">&quot;ssid&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> WIFI_PASSWORD\t<span class=\"string\">&quot;ssidpswd&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTT_CLIENT_ID\t<span class=\"string\">&quot;mqtt_stm32|securemode=2\\\\,signmethod=hmacsha1\\\\,timestamp=106|&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTT_USER_NAME\t<span class=\"string\">&quot;mqtt_stm32&amp;kxxxxCq&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTT_PASSWD\t\t<span class=\"string\">&quot;5DE3xxxxxxxxxEA4C2&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> BROKER_ASDDRESS\t<span class=\"string\">&quot;kxxxxxCq.iot-as-mqtt.cn-shanghai.aliyuncs.com&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> SUB_TOPIC\t\t<span class=\"string\">&quot;/sys/kxxxxxq/mqtt_stm32/thing/service/property/set&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> PUB_TOPIC \t\t<span class=\"string\">&quot;/sys/kxxxxxq/mqtt_stm32/thing/event/property/post&quot;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> JSON_FORMAT \t<span class=\"string\">&quot;&#123;\\\\\\&quot;params\\\\\\&quot;:&#123;\\\\\\&quot;temperature\\\\\\&quot;:%u\\\\,\\\\\\&quot;Humidity\\\\\\&quot;:%u&#125;\\\\,\\\\\\&quot;version\\\\\\&quot;:\\\\\\&quot;1.0.0\\\\\\&quot;&#125;&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> MQTTPUB_BUF_SIZE 256</span></span><br><span class=\"line\"><span class=\"type\">char</span> buf[MQTTPUB_BUF_SIZE];</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">uint8_t</span> temperature;         </span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">uint8_t</span> humidity; </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//#define MQTTPUB_BUF_SIZE 256</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//extern unsigned int rec_data[4]; // DHT11</span></span><br><span class=\"line\"><span class=\"comment\">//extern USART_Buffer ESP8266_Buffer;</span></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">AMTHL_Init</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\tOLED_Clear();</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">1</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;DHT11&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">2</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;temp:&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">2</span>,<span class=\"number\">10</span>,<span class=\"string\">&quot;^C&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">3</span>,<span class=\"number\">1</span>,<span class=\"string\">&quot;humi:&quot;</span>);</span><br><span class=\"line\">\tOLED_ShowString(<span class=\"number\">3</span>,<span class=\"number\">10</span>,<span class=\"string\">&quot;%&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">AMTHL_Connet</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;1. Set Station Mode.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;AT+CWMODE=1&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;2. Close ESP8266 Echo.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;ATE0&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">100</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;3. No Auto Connect WIFI.\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;AT+CWAUTOCONN=0\\r\\n&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">500</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">100</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;*** Start Connecting. ***\\r\\n&quot;</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;AT+CWJAP=\\&quot;&quot;</span>WIFI_SSID<span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span> WIFI_PASSWORD <span class=\"string\">&quot;\\&quot;&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">1000</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">5000</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;AT+MQTTUSERCFG=0,1,\\&quot;&quot;</span>  MQTT_CLIENT_ID <span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span> MQTT_USER_NAME <span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span>  MQTT_PASSWD   <span class=\"string\">&quot;\\&quot;,0,0,\\&quot;\\&quot;&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">3000</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;AT+MQTTCONN=0,\\&quot;&quot;</span> BROKER_ASDDRESS  <span class=\"string\">&quot;\\&quot;,1883,0&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">3000</span>);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;AT+MQTTSUB=0,\\&quot;&quot;</span>  SUB_TOPIC <span class=\"string\">&quot;\\&quot;,0&quot;</span>,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\tosDelay(<span class=\"number\">3000</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">AMTHL_SendMessage</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"built_in\">sprintf</span>(buf,<span class=\"string\">&quot;AT+MQTTPUB=0,\\&quot;&quot;</span> PUB_TOPIC <span class=\"string\">&quot;\\&quot;,\\&quot;&quot;</span> JSON_FORMAT  <span class=\"string\">&quot;\\&quot;,0,0&quot;</span>,temperature,humidity);</span><br><span class=\"line\">\tESP8266_Cmd((<span class=\"type\">uint8_t</span>*)buf,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;OK&quot;</span>,<span class=\"number\">200</span>);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Temp: %u degree, Humi: %u %%&quot;</span>,temperature,humidity);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">AMTHL_LED_ON</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (UART2_Rx_flg)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ESP8266_Check_Str(RxBuf,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;&#123;\\&quot;LED\\&quot;:1&#125;&quot;</span>))&#123;</span><br><span class=\"line\">\t\t\tHAL_GPIO_WritePin(GPIOA,SIGNAL_LED,(GPIO_PinState)<span class=\"number\">0</span>); <span class=\"comment\">// 开灯</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> <span class=\"title function_\">AMTHL_LED_OFF</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> (UART2_Rx_flg)&#123;</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span>(ESP8266_Check_Str(RxBuf,(<span class=\"type\">uint8_t</span>*)<span class=\"string\">&quot;&#123;\\&quot;LED\\&quot;:0&#125;&quot;</span>))&#123;</span><br><span class=\"line\">\t\t\tHAL_GPIO_WritePin(GPIOA,SIGNAL_LED,(GPIO_PinState)<span class=\"number\">1</span>); <span class=\"comment\">// 关灯</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> <span class=\"number\">1</span>;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h1 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h1>\n<p>工程实践被🍐🏮训斥了…😎😎😎。</p>\n<p>本文 PlantUML 存档：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\">left to right direction</span><br><span class=\"line\">actor 用户 as user</span><br><span class=\"line\"></span><br><span class=\"line\">rectangle 阿里云物联网平台 &#123;</span><br><span class=\"line\">    (监测温湿度数据) as get</span><br><span class=\"line\">    (控制LED灯) as LED </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">rectangle STM32 &#123;</span><br><span class=\"line\">    (读取监测数据) as data </span><br><span class=\"line\">    (获取温湿度数据) as getTH</span><br><span class=\"line\">    (发送温湿度数据至物联网平台) as send</span><br><span class=\"line\">    (接收LED控制信号) as getLED</span><br><span class=\"line\">    (设置LED灯) as setLED</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">user -- get</span><br><span class=\"line\">user -- data</span><br><span class=\"line\">user -- LED</span><br><span class=\"line\">get ..&gt; send: &lt;&lt;include&gt;&gt;</span><br><span class=\"line\">LED ..&gt; setLED: &lt;&lt;include&gt;&gt;</span><br><span class=\"line\">LED ..&gt; getLED: &lt;&lt;include&gt;&gt;</span><br><span class=\"line\">send -- getTH</span><br><span class=\"line\">data -- getTH</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\"></span><br><span class=\"line\">actor 用户 as user</span><br><span class=\"line\">participant 单片机 as STM32</span><br><span class=\"line\">participant 温湿度传感器 as DHT11</span><br><span class=\"line\">participant 显示设备 as OLED</span><br><span class=\"line\">participant WIFI模块 as ESP8266</span><br><span class=\"line\">database &quot;MQTT Broker&quot;  as Ali</span><br><span class=\"line\"></span><br><span class=\"line\">STM32 -&gt; DHT11: 请求查询温湿度数据</span><br><span class=\"line\">activate STM32</span><br><span class=\"line\">activate DHT11</span><br><span class=\"line\"></span><br><span class=\"line\">DHT11 --&gt; STM32: 温湿度数据</span><br><span class=\"line\">deactivate DHT11</span><br><span class=\"line\">STM32 -&gt; OLED: 发送温湿度数据</span><br><span class=\"line\">activate OLED</span><br><span class=\"line\"></span><br><span class=\"line\">OLED-&gt; user: 展示温湿度数据</span><br><span class=\"line\">activate user</span><br><span class=\"line\">deactivate OLED</span><br><span class=\"line\">deactivate user</span><br><span class=\"line\"></span><br><span class=\"line\">STM32 -&gt; ESP8266: 发送温湿度数据</span><br><span class=\"line\">activate ESP8266</span><br><span class=\"line\">ESP8266 -&gt; Ali: 发送温湿度数据</span><br><span class=\"line\">deactivate ESP8266</span><br><span class=\"line\">activate Ali</span><br><span class=\"line\">deactivate STM32</span><br><span class=\"line\"></span><br><span class=\"line\">Ali -&gt; user: 在远程面板展示温湿度数据</span><br><span class=\"line\">deactivate Ali</span><br><span class=\"line\">activate user</span><br><span class=\"line\">deactivate user</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">@startuml</span><br><span class=\"line\"></span><br><span class=\"line\">actor 用户 as user</span><br><span class=\"line\">database &quot;MQTT Broker&quot;  as Ali</span><br><span class=\"line\">participant WIFI模块 as ESP8266</span><br><span class=\"line\">participant 单片机 as STM32</span><br><span class=\"line\">participant LED as LED</span><br><span class=\"line\"></span><br><span class=\"line\">user -&gt; Ali: 控制LED灯开关</span><br><span class=\"line\">activate Ali</span><br><span class=\"line\"></span><br><span class=\"line\">Ali -&gt; ESP8266: LED灯控制信号</span><br><span class=\"line\">activate ESP8266</span><br><span class=\"line\">deactivate Ali</span><br><span class=\"line\"></span><br><span class=\"line\">ESP8266 -&gt; STM32: 触发串口中断</span><br><span class=\"line\">deactivate ESP8266</span><br><span class=\"line\">activate STM32</span><br><span class=\"line\"></span><br><span class=\"line\">STM32 -&gt; ESP8266: 处理串口中断</span><br><span class=\"line\">activate ESP8266</span><br><span class=\"line\"></span><br><span class=\"line\">ESP8266 --&gt; STM32: LED控制信息</span><br><span class=\"line\">deactivate ESP8266</span><br><span class=\"line\"></span><br><span class=\"line\">&#x27; STM32 -&gt; STM32</span><br><span class=\"line\">&#x27; activate STM32</span><br><span class=\"line\">&#x27; deactivate STM32</span><br><span class=\"line\"></span><br><span class=\"line\">STM32 -&gt; LED: 点亮LED灯</span><br><span class=\"line\">activate LED</span><br><span class=\"line\"></span><br><span class=\"line\">LED -&gt; user: 点亮LED灯</span><br><span class=\"line\">deactivate LED</span><br><span class=\"line\">deactivate STM32</span><br><span class=\"line\"></span><br><span class=\"line\">activate user</span><br><span class=\"line\">deactivate user</span><br><span class=\"line\"></span><br><span class=\"line\">@enduml</span><br></pre></td></tr></table></figure>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://www.bilibili.com/video/BV1Xz4y1n7Uh/?p=1\">第01集 明确目标_哔哩哔哩_bilibili</a></li>\n</ul>\n","raw":"---\ntitle: STM32+ESP8266+MQTT 实现阿里云温湿度监控及 LED 点灯（FreeRTOS+标准库 or HAL）\ntags:\n  - STM32\n  - 阿里云\n  - DHT11\n  - ESP8266\n  - MQTT\n  - C\n  - HAL\n  - FreeRTOS\n  - STM32CubeMX\n  - UML\ncategories:\n  - 嵌入式\nabbrlink: de31d8e3\ndate: 2024-04-05 12:49:50\ncover: https://cdn.gallery.uuanqin.top/img/20240405161606.webp\ndescription: 一整套「嵌入式」入门练习\ntop_img:\n---\n\n> 标题直接 Buff 点满......\n\n\n# 阅读指引\n\n如果你是 0 基础选手，建议先阅读以下内容掌握基本的 FreeRTOS 工程知识：\n\n1. C 语言基本语法\n2. STM32 工程创建，详看\n\t- [[STM32 工程的创建 - 基于寄存器或标准库]]\n\t- [[STM32 工程的创建 - 基于 HAL 库]]\n3. FreeRTOS 的移植，详看\n\t- [[STM32 移植 FreeRTOS - 基于标准库]]\n\t- [[STM32 移植 FreeRTOS - 基于 HAL 库]]\n\n本文主要分为三个部分，每个部分需要准备的工具如下：\n\n1. 阿里云物联网平台注册：需要阿里云账号。\n2. 模拟 MQTT 客户端发送与订阅消息：软件 MQTT.fx，阿里云提供的 MQTT_Password 工具。\n3. ESP8266 固件烧录：串口助手软件，需要材料 ESP8266、USB-TTL、杜邦线若干。\n4. 软件实现：Keil 软件、STM32CubeMX（使用 HAL）、STM32、DHT11、杜邦线若干、OLED（可选）、LED 灯、ST-Link\n\n> [!hint] 阅读前的提示\n>\n> 1. 阿里云相关产品新用户只能免费试用 1 个月。比如物联网企业版实例新用户可以试用 1 个月，但也有公共实例**永久免费使用**。增值服务 IoT Studio 用于绘制可视化界面，可以试用 1 个月，但其实这也**不是必须的**，就是提供了一个可视化界面而已。\n> 2. MQTT 功能是通过固件烧录进 ESP8266 中的，不是 MQTT 协议在 FreeRTOS 上的移植。\n> 3. 如果只是单纯实现温湿度监控及点灯的话，FreeRTOS 其实不是必须的。\n\n# 接线图与实物图展示\n\n> Visio 随便画的，感觉掌握不到诀窍，很难画。\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240630000720.webp)\n\n> 下图有个多余连接的串口，读者可以忽略。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240630135721.webp)\n\n# UML\n\n> 如果 UML 图不规范请指出哈。我感觉 UML 图我永远画不对......\n\n用例图：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/202412240142627.webp)\n\n用户通过阿里云物联网平台进行温湿度数据监测以及 LED 灯控制，此外，用户还可通过直接观察设备显示屏读取温湿度监测数据。对于通过阿里云物联网平台监测温湿度数据的用例，除了在远程平台实现可视化界面外，STM32 需实现将温湿度数据发送至远程平台的能力。无论是温湿度数据的本地展示或远程发送，都依赖于 STM32 中获取温湿度数据用例。该用例需要 STM32 与温湿度监测设备进行数据交互。远程平台中控制 LED 灯用例的实现不仅依赖于物联网平台提供的指令发送接口，也需要 STM32 实现信号的接收与 LED 灯设置的功能。\n\n发送温湿度过程顺序图：\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/202412240142103.webp)\n\n单片机从监测设备获取温湿度数据并发送至阿里云物联网平台过程的顺序图如上图所示。单片机初始化完毕后，利用 FreeRTOS 任务函数定时向 DHT11 发送复位信号。DHT11 接收复位信号后将 40 Bit 的检测数据通过单总线协议传输至 STM32 处理。随后，STM32 利用该数据完成以下任务：\n\n1. 更新 OLED 显示屏，实现设备实时显示温湿度信息的功能。\n2. 将温湿度数据生成 AT 命令，通过串口发送至 ESP8266 模块中。\n\nESP8266 模块接收到 AT 指令后，将通过 MQTT 协议向阿里云物联网平台发布消息。阿里云物联网平台将根据该消息的主题与参数，更新可视化界面的网络应用，从而实现用户远程监控设备的功能。\n\n接收 LED 灯指令顺序图：\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/202412240143263.webp)\n\n用户通过网络应用的可视化界面控制设备 LED 灯的顺序图如上图所示。用户通过可视化界面操作 LED 灯状态为“0（关闭）”或“1（开启）”。MQTT Broker 向设备发送消息，该消息由连接至 STM32 单片机的 WIFI 模块接收。WIFI 模块将接收到的数据存放在串口缓冲区中，并设置标志位提醒 STM32 单片机进行接收。STM32 利用 FreeRTOS 任务调度，获取 WIFI 模块返回的信息并解析 LED 灯控制指令。最后根据指令控制 LED 灯电路，改变灯的状态。\n\n# 阿里云物联网平台\n\n> 此部分可参考官方文档：[如何快速将设备接入物联网平台并控制其开关_物联网平台(IoT)-阿里云帮助中心 (aliyun.com)](https://help.aliyun.com/zh/iot/getting-started/overview-7?spm=a2c4g.11186623.0.0.79fd1b1bZflRsN)\n\n## 添加产品物模型\n\n首先你得拥有一个阿里云账号，然后开通物联网平台：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405135040.webp)\n\n进入管理控制台：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405135115.webp)\n\n 创建一个实例（前提需实名认证）：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240405135235.webp)\n\n标准实例可以免费开通试用 1 个月。\n\n> 公共实例开通免费，但据说可能联网不佳，我试了一下感觉还行，没条件的可以直接使用公共实例。\n\n进入实例详情：\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/20240405135609.webp)\n\n创建一个产品：\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/20240405135735.webp)\n\n创建设备：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240405135903.webp)\n\n下面添加一个物模型：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240405135956.webp)\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405140057.webp)\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240405140129.webp)\n\n## 使用 IoT Studio 绘制界面\n\n回到物联网平台，查看增值服务。如果没有 IoT Studio，可以在选购增值服务中购买。IoT Studio 可以试用 1 个月。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405140450.webp)\n\n进入 IoT Studio，选择你的实例，新建 Web 应用：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405140617.webp)\n\n![image.png|350](https://cdn.gallery.uuanqin.top/img/20240405140657.webp)\n\n绘制一个像样的页面：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405140802.webp)\n\n仪表盘数据源配置：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405140841.webp)\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405140944.webp)\n\n折线图数据源配置：\n\n![image.png|300](https://cdn.gallery.uuanqin.top/img/20240405141607.webp)\n\n按钮交互配置：\n\n![image.png|236](https://cdn.gallery.uuanqin.top/img/20240405141654.webp)\n\n这时点击预览的话仪表盘会显示没有数据，可继续下一章节阅读。\n\n# MQTT.fx 模拟客户端发布与订阅消息\n\n> 此部分可参考文档：[使用MQTT协议模拟设备快速接入物联网平台_物联网平台(IoT)-阿里云帮助中心 (aliyun.com)](https://help.aliyun.com/zh/iot/getting-started/using-mqtt-fx-to-access-iot-platform)\n\n安装 MQTT_Password 工具包：[如何计算MQTT签名参数_物联网平台(IoT)-阿里云帮助中心 (aliyun.com)](https://help.aliyun.com/zh/iot/user-guide/how-do-i-obtain-mqtt-parameters-for-authentication#section-jx3-u57-pmm)\n\n安装 MQTT.fx：[MQTT.fx® Download (softblade.de)](https://www.softblade.de/download/)\n\n回到阿里云物联网平台控制台>设备>查看，把三元素复制下来：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405142608.webp)\n\n使用 MQTT_Password 计算签名：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405142728.webp)\n\n> 除了此处的 Clientid 是需要填入的设备信息 Clientid，其他所有地方说的 Client ID 都是指 MQTT 连接的 Client ID 具体值就是计算结果的 mqttClientid\n\n打开 MQTT.fx，配置：\n\n![image.png|375](https://cdn.gallery.uuanqin.top/img/20240405142832.webp)\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405143044.webp)\n\nBroker Address 为你的 `ProductID`+`.iot-as-mqtt.cn-shanghai.aliyuncs.com`。\n\n链接。然后尝试发布消息和订阅消息：\n\n![image.png|425](https://cdn.gallery.uuanqin.top/img/20240405143246.webp)\n\n连接后阿里云物联网平台将显示在线：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240405144051.webp)\n\n尝试在 `/sys/k10qu3ushCq/mqtt_stm32/thing/event/property/post` 发布一个 json 数据：\n\n```json\n{\"params\":{\"temperature\":42,\"Humidity\":22},\"version\":\"1.0.0\"}\n```\n\n![image.png|400](https://cdn.gallery.uuanqin.top/img/20240405143449.webp)\n\n结果在 IoT Studio 网页应用就会显示数据：\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240405143533.webp)\n\n在 `/sys/k10qu3ushCq/mqtt_stm32/thing/service/property/set` 中订阅，点击开关按钮将收到消息：\n\n![image.png|475](https://cdn.gallery.uuanqin.top/img/20240405143718.webp)\n\n# ESP8266 固件烧录及串口调试\n\n首先，固件烧录部分详看：[[ESP8266 烧写 AT MQTT 固件]]。\n\nESP8266 连上串口后测试 AT 命令（记得加 `\\r\\n`）：\n\n```sh\n# 设置热点模式\nAT+CWMODE=1\n\n# 链接手机热点（或 WIFI）\nAT+CWJAP=\"<热点名称>\",\"<热点密码>\"\n\n# MQTT配置。注意，逗号前加反斜杠。ClientID+用户名+密码\nAT+MQTTUSERCFG=0,1,\"mqtt_stm32|securemode=2\\,signmethod=hmacsha1\\,timestamp=6606|\",\"mqtt_stm32&k1xxxxxxxq\",\"5DExxxxxxC2\",0,0,\"\"\n\n# 连接 MQTT Broker\nAT+MQTTCONN=0,\"k1xxxxxxxq.iot-as-mqtt.cn-shanghai.aliyuncs.com\",1883,0\n\n# 订阅 MQTT主题\nAT+MQTTSUB=0,\"/sys/k10qu3ushCq/mqtt_stm32/thing/service/property/set\",0\n\n# 发送数据\nAT+MQTTPUB=0,\"/sys/k10qu3ushCq/mqtt_stm32/thing/event/property/post\",\"{\\\"params\\\":{\\\"temperature\\\":42\\,\\\"Humidity\\\":22}\\,\\\"version\\\":\\\"1.0.0\\\"}\",0,0\n```\n\n> 指令说明参考：[入门指南 - ESP32 - — ESP-AT 用户指南 latest 文档 (espressif.com)](https://docs.espressif.com/projects/esp-at/zh_CN/latest/esp32/Get_Started/index.html)\n\n测试发送时间上行成功后，可以继续测试 LED 开关命令。在 IoT Studio 点击按钮，串口助手将回显消息。\n\n# 软件实现思路\n\n整个 STM32 工程比较庞杂。本节介绍主要的具体思路，并展示重要代码过程。\n\n主要思路：\n\n1. STM32 串口 1 用于向电脑发送数据，`printf` 重写为向串口 1 发送数据。详看：[[串口驱动程序之「发送数据」]]\n2. 串口 2 用于链接 ESP8266，需要实现不定长数据的收发。详看：[[串口驱动程序之「不定长字符串的接收」]]\n3. 使用 DHT11 检测环境温湿度。详看：[[DHT11 驱动程序]]\n4. OLED 模块作为温湿度数据的实时显示。详看：[[OLED 驱动程序]]\n5. 一个任务指示灯，单纯用来指示 FreeRTOS 任务有没有卡死\n6. 一个 LED 灯用来应答阿里云发来的数据\n\n以下代码主要解析任务分配以及设备初始化的编写。标准库和 HAL 具体实现略有不同（LED 用的端口、不定长字符串接收的实现方式），请以具体配置为准。\n\n## 标准库\n\nmain.c：\n\n```c\n#include \"stm32f10x.h\"                  // Device header\n#include \"gpio_out.h\"   \n#include \"key.h\"\n#include \"OLED.h\"\n#include \"timer.h\"\n#include \"SysTick.h\"\n#include \"FreeRTOS.h\"\n#include \"task.h\"\n#include <limits.h>\n#include <string.h>\n#include \"dht11.h\"\n#include \"esp8266.h\"\n#include \"ALi_MQTT_Temp_Humi_LED_Device.h\"\n\n//任务优先级\n#define START_TASK_PRIO\t\t1\n//任务堆栈大小\t\n#define START_STK_SIZE \t\t128  \n//任务句柄\nTaskHandle_t StartTask_Handler;\n//任务函数\nvoid start_task(void *pvParameters);\n\n\n//任务优先级\n#define LED5_TASK_PRIO\t\t2\n//任务堆栈大小\t\n#define LED5_STK_SIZE \t\t50  \n//任务句柄\nTaskHandle_t LED5Task_Handler;\n//任务函数\nvoid led5_task(void *pvParameters);\n\n//任务优先级\n#define MAIN_TASK_PRIO\t\t3\n//任务堆栈大小\t\n#define MAIN_STK_SIZE \t\t50  \n//任务句柄\nTaskHandle_t MainTask_Handler;\n//任务函数\nvoid main_task(void *pvParameters);\n\n//任务优先级\n#define WIFI_INIT_TASK_PRIO\t\t4\n//任务堆栈大小\t\n#define WIFI_INIT_STK_SIZE \t\t128  \n//任务句柄\nTaskHandle_t WifiInitTask_Handler;\n//任务函数\nvoid wifi_init_task(void *pvParameters);\n\n//任务优先级\n#define WIFI_TASK_PRIO\t\t5\n//任务堆栈大小\t\n#define WIFI_STK_SIZE \t\t128  \n//任务句柄\nTaskHandle_t WifiTask_Handler;\n//任务函数\nvoid wifi_task(void *pvParameters);\n\n//任务优先级\n#define TEST_ON_TASK_PRIO\t\t6\n//任务堆栈大小\t\n#define TEST_ON_STK_SIZE \t\t128  \n//任务句柄\nTaskHandle_t TestOnTask_Handler;\n//任务函数\nvoid test_on_task(void *pvParameters);\n\n//任务优先级\n#define TEST_OFF_TASK_PRIO\t\t6\n//任务堆栈大小\t\n#define TEST_OFF_STK_SIZE \t\t128  \n//任务句柄\nTaskHandle_t TestOffTask_Handler;\n//任务函数\nvoid test_off_task(void *pvParameters);\n\n// LED灯\n#define LED5 GPIO_Pin_5\n\n// ESP8266 RESET\n//#define ESP8266_RESET GPIO_Pin_7 // 低电平 reset\n\n\n/*******************************************************************************\n* 函 数 名         : main\n* 函数功能\t\t   : 主函数\n* 输    入         : 无\n* 输    出         : 无\n*******************************************************************************/\nint main()\n{\n\tSysTick_Init(72);\n\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_4);//设置系统中断优先级分组4\n\tGPIO_OUT_Init(LED5); // FreeRTOS任务指示灯\n\t\n\tAMTHL_Init();\n\t\n\t\n\t//创建开始任务\n    xTaskCreate((TaskFunction_t )start_task,            //任务函数\n                (const char*    )\"start_task\",          //任务名称\n                (uint16_t       )START_STK_SIZE,        //任务堆栈大小\n                (void*          )NULL,                  //传递给任务函数的参数\n                (UBaseType_t    )START_TASK_PRIO,       //任务优先级\n                (TaskHandle_t*  )&StartTask_Handler);   //任务句柄              \n    vTaskStartScheduler();          //开启任务调度\n}\n\n//开始任务任务函数\nvoid start_task(void *pvParameters)\n{\n    taskENTER_CRITICAL();           //进入临界区\n\n\t//创建任务指示灯任务\n    xTaskCreate((TaskFunction_t )led5_task,     \n                (const char*    )\"led5_task\",   \n                (uint16_t       )LED5_STK_SIZE, \n                (void*          )NULL,\n                (UBaseType_t    )LED5_TASK_PRIO,\n                (TaskHandle_t*  )&LED5Task_Handler); \n\t//创建main任务\n    xTaskCreate((TaskFunction_t )main_task,     \n                (const char*    )\"main_task\",   \n                (uint16_t       )MAIN_STK_SIZE, \n                (void*          )NULL,\n                (UBaseType_t    )MAIN_TASK_PRIO,\n                (TaskHandle_t*  )&MainTask_Handler);\n\t//创建wifi任务\n    xTaskCreate((TaskFunction_t )wifi_init_task,     \n                (const char*    )\"wifi_init_task\",   \n                (uint16_t       )WIFI_INIT_STK_SIZE, \n                (void*          )NULL,\n                (UBaseType_t    )WIFI_INIT_TASK_PRIO,\n                (TaskHandle_t*  )&WifiInitTask_Handler);\n\t\t\t\t\n    vTaskDelete(StartTask_Handler); //删除开始任务\n    taskEXIT_CRITICAL();            //退出临界区\n} \n\n\n\nvoid led5_task(void *pvParameters)\n{\n    while(1)\n    {\n        GPIO_OUT_Set(LED5,1);\n        vTaskDelay(200);\n\n        GPIO_OUT_Set(LED5,0);\n        vTaskDelay(800);\n\n    }\n}\n\nextern unsigned int rec_data[4];\nvoid main_task(void *pvParameters)\n{\n    while(1)\n    {\n\t\tDHT11_REC_Data();\n        OLED_ShowNum(2,7,rec_data[2],2);\n\t\tOLED_ShowNum(2,10,rec_data[3],2);\n\t\tOLED_ShowNum(3,7,rec_data[0],2);\n\t\tOLED_ShowNum(3,10,rec_data[1],2);\n\t\tDelay_ms(2000);// 延时2s 否则DHT11数据不稳定\n    }\n}\n\n// 一次性任务\nvoid wifi_init_task(void *pvParameters)\n{\n    \n\tAMTHL_Connet();\n\txTaskCreate((TaskFunction_t )wifi_task,     \n\t\t\t(const char*    )\"wifi_task\",   \n\t\t\t(uint16_t       )WIFI_STK_SIZE, \n\t\t\t(void*          )NULL,\n\t\t\t(UBaseType_t    )WIFI_TASK_PRIO,\n\t\t\t(TaskHandle_t*  )&WifiTask_Handler);\n\txTaskCreate((TaskFunction_t )test_on_task,     \n\t\t\t(const char*    )\"test_on_task\",   \n\t\t\t(uint16_t       )TEST_ON_STK_SIZE, \n\t\t\t(void*          )NULL,\n\t\t\t(UBaseType_t    )TEST_ON_TASK_PRIO,\n\t\t\t(TaskHandle_t*  )&TestOnTask_Handler);\n\txTaskCreate((TaskFunction_t )test_off_task,     \n\t\t\t(const char*    )\"test_off_task\",   \n\t\t\t(uint16_t       )TEST_OFF_STK_SIZE, \n\t\t\t(void*          )NULL,\n\t\t\t(UBaseType_t    )TEST_OFF_TASK_PRIO,\n\t\t\t(TaskHandle_t*  )&TestOffTask_Handler);\n\n    vTaskDelete(WifiInitTask_Handler);\n}\n\nvoid wifi_task(void *pvParameters)\n{\n\tvTaskDelay(2000);\n\t\n    while(1)\n\t{\n\t\tAMTHL_SendMessage();\n\t\tvTaskDelay(10000);\n\t}\n}\n\n// 两个任务以防任务偏向\nvoid test_on_task(void *pvParameters)\n{\n    while(1)\n\t{\n\t\tif(AMTHL_LED_ON()) // 消除抖动\n\t\t\tDelay_ms(1000);\n\t\tvTaskDelay(50);\n\t}\n}\n\nvoid test_off_task(void *pvParameters)\n{\n    while(1)\n\t{\n\t\tif(AMTHL_LED_OFF()) // 消除抖动\n\t\t\tDelay_ms(1000);\n\t\tvTaskDelay(50);\n\t}\n}\n\n```\n\n设备：\n\n```c\n#include \"stm32f10x.h\"                  // Device header\n#include \"ALi_MQTT_Temp_Humi_LED_Device.h\"\n\n#include \"serial.h\"\n#include \"OLED.h\"\n#include \"esp8266.h\"\n#include \"SysTick.h\"\n#include \"dht11.h\"\n#include \"gpio_out.h\"\n\n#define WIFI_SSID\t\t\"ssid\"\n#define WIFI_PASSWORD\t\"ssidpswd\"\n#define MQTT_CLIENT_ID\t\"mqtt_stm32|securemode=2\\\\,signmethod=hmacsha1\\\\,timestamp=106|\"\n#define MQTT_USER_NAME\t\"mqtt_stm32&kxxxxCq\"\n#define MQTT_PASSWD\t\t\"5DE3xxxxxxxxxEA4C2\"\n#define BROKER_ASDDRESS\t\"kxxxxxCq.iot-as-mqtt.cn-shanghai.aliyuncs.com\"\n#define SUB_TOPIC\t\t\"/sys/kxxxxxq/mqtt_stm32/thing/service/property/set\"\n#define PUB_TOPIC \t\t\"/sys/kxxxxxq/mqtt_stm32/thing/event/property/post\"\n#define JSON_FORMAT \t\"{\\\\\\\"params\\\\\\\":{\\\\\\\"temperature\\\\\\\":%u\\\\,\\\\\\\"Humidity\\\\\\\":%u}\\\\,\\\\\\\"version\\\\\\\":\\\\\\\"1.0.0\\\\\\\"}\"\n\n#define SIGNAL_LED GPIO_Pin_6\n#define MQTTPUB_BUF_SIZE 256\nextern unsigned int rec_data[4]; // DHT11\nextern USART_Buffer ESP8266_Buffer;\nvoid AMTHL_Init(void){\n\tOLED_Init();\n\tSerial_Init(115200); // 波特率115200\n\tESP8266_Init(115200);\n\tGPIO_OUT_Init(SIGNAL_LED);\n\t\n\tOLED_Clear();\n\tOLED_ShowString(1,1,\"DHT11 Data\");\n\tOLED_ShowString(2,1,\"Temp:\");\n\tOLED_ShowString(2,9,\".\");\n\tOLED_ShowString(3,1,\"Humi:\");\n\tOLED_ShowString(3,9,\".\");\n}\n\nvoid AMTHL_Connet(void){\n\tprintf(\"1. Set Station Mode.\\r\\n\");\n\tESP8266_Cmd(\"AT+CWMODE=1\",\"OK\",500);\n\tDelay_ms(1000);\n\t\n\tprintf(\"2. Close ESP8266 Echo.\\r\\n\");\n\tESP8266_Cmd(\"ATE0\",\"OK\",500);\n\tDelay_ms(1000);\n\t\n\tprintf(\"3. No Auto Connect WIFI.\\r\\n\");\n\tESP8266_Cmd(\"AT+CWAUTOCONN=0\\r\\n\",\"OK\",500);\n\tDelay_ms(1000);\n\t\n\tprintf(\"4. Start Connecting.\\r\\n\");\n\tESP8266_Cmd(\"AT+CWJAP=\\\"\"WIFI_SSID\"\\\",\\\"\" WIFI_PASSWORD \"\\\"\",\"OK\",200);\n\tDelay_ms(5000);\n\tESP8266_Cmd(\"AT+MQTTUSERCFG=0,1,\\\"\"  MQTT_CLIENT_ID \"\\\",\\\"\" MQTT_USER_NAME \"\\\",\\\"\"  MQTT_PASSWD   \"\\\",0,0,\\\"\\\"\",\"OK\",200);\n\tDelay_ms(3000);\n\tESP8266_Cmd(\"AT+MQTTCONN=0,\\\"\" BROKER_ASDDRESS  \"\\\",1883,0\",\"OK\",200);\n\tDelay_ms(3000);\n\tESP8266_Cmd(\"AT+MQTTSUB=0,\\\"\"  SUB_TOPIC \"\\\",0\",\"OK\",200);\n\tDelay_ms(3000);\n}\n\nvoid AMTHL_SendMessage(void){\n\tchar buf[MQTTPUB_BUF_SIZE];\n\tunsigned int temp,humi;\n\ttemp = rec_data[2];\n\thumi = rec_data[0];\n\tsprintf(buf,\"AT+MQTTPUB=0,\\\"\" PUB_TOPIC \"\\\",\\\"\" JSON_FORMAT  \"\\\",0,0\",temp,humi);\n\tESP8266_Cmd(buf,\"OK\",200);\n\t\n\tprintf(\"Temp: %u degree, Humi: %u %%\",temp,humi);\n}\n\nuint8_t AMTHL_LED_ON(void){\n\tif (ESP8266_Buffer.FinishFlag){\n\t\tif(ESP8266_Check_Str(ESP8266_Buffer.Body,\"{\\\"LED\\\":1}\")){\n\t\t\tGPIO_OUT_Set(SIGNAL_LED,0); // 开灯\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nuint8_t AMTHL_LED_OFF(void){\n\tif (ESP8266_Buffer.FinishFlag){\n\t\tif(ESP8266_Check_Str(ESP8266_Buffer.Body,\"{\\\"LED\\\":0}\")){\n\t\t\tGPIO_OUT_Set(SIGNAL_LED,1); // 关灯\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n## HAL 库\n\n任务配置：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240405152014.webp)\n\nfreertos.c：\n\n```c\n/* Includes ------------------------------------------------------------------*/\n#include \"FreeRTOS.h\"\n#include \"task.h\"\n#include \"main.h\"\n#include \"cmsis_os.h\"\n\n/* Private includes ----------------------------------------------------------*/\n/* USER CODE BEGIN Includes */\n#include \"OLED.h\"\n#include \"dht11.h\"\n#include \"usart.h\"\n#include \"esp8266.h\"\n#include \"ali_device.h\"\n/* USER CODE END Includes */\n\n\n/* Private variables ---------------------------------------------------------*/\n/* USER CODE BEGIN Variables */\nextern uint8_t temperature;         \nextern uint8_t humidity; \n/* USER CODE END Variables */\n\n// 省略自动生成内容\n\n\nvoid led_task_func(void *argument)\n{\n  /* USER CODE BEGIN led_task_func */\n  /* Infinite loop */\n  for(;;)\n  {\n\t  // 任务指示灯\n\tHAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);\n\tosDelay(200);\n\tHAL_GPIO_TogglePin(GPIOC,GPIO_PIN_13);\n\tosDelay(800);\n  }\n  /* USER CODE END led_task_func */\n}\n\n\nvoid detect_task_finc(void *argument)\n{\n  /* USER CODE BEGIN detect_task_finc */\n\t\n  /* Infinite loop */\n  for(;;)\n  {\t\n\tif(AMTHL_LED_ON())\n\t\tosDelay(500);\n\tif(AMTHL_LED_OFF())\n\t\tosDelay(500);\n\tosDelay(50);\n  }\n  /* USER CODE END detect_task_finc */\n}\n\n\nvoid ali_mqtt_task_func(void *argument)\n{\n  /* USER CODE BEGIN ali_mqtt_task_func */\n  AMTHL_Connet();\n  /* Infinite loop */\n  for(;;)\n  {\n\t// 顺带显示\n\tDHT11_Read_Data(&humidity,&temperature);\n\tOLED_ShowNum(2,7,temperature,2);\n\tOLED_ShowNum(3,7,humidity,2);\n\tAMTHL_SendMessage();\n    osDelay(2000);\n  }\n  /* USER CODE END ali_mqtt_task_func */\n}\n\n```\n\n设备：\n\n```c\n\n#include \"cmsis_os.h\"\n#include \"usart.h\"\n#include \"esp8266.h\"\n#include \"dht11.h\"\n\n#include \"OLED.h\"\n\n#include \"ali_device.h\"\n\n#define WIFI_SSID\t\t\"ssid\"\n#define WIFI_PASSWORD\t\"ssidpswd\"\n#define MQTT_CLIENT_ID\t\"mqtt_stm32|securemode=2\\\\,signmethod=hmacsha1\\\\,timestamp=106|\"\n#define MQTT_USER_NAME\t\"mqtt_stm32&kxxxxCq\"\n#define MQTT_PASSWD\t\t\"5DE3xxxxxxxxxEA4C2\"\n#define BROKER_ASDDRESS\t\"kxxxxxCq.iot-as-mqtt.cn-shanghai.aliyuncs.com\"\n#define SUB_TOPIC\t\t\"/sys/kxxxxxq/mqtt_stm32/thing/service/property/set\"\n#define PUB_TOPIC \t\t\"/sys/kxxxxxq/mqtt_stm32/thing/event/property/post\"\n#define JSON_FORMAT \t\"{\\\\\\\"params\\\\\\\":{\\\\\\\"temperature\\\\\\\":%u\\\\,\\\\\\\"Humidity\\\\\\\":%u}\\\\,\\\\\\\"version\\\\\\\":\\\\\\\"1.0.0\\\\\\\"}\"\n\n\n#define MQTTPUB_BUF_SIZE 256\nchar buf[MQTTPUB_BUF_SIZE];\n\nextern uint8_t temperature;         \nextern uint8_t humidity; \n\n//#define MQTTPUB_BUF_SIZE 256\n\n//extern unsigned int rec_data[4]; // DHT11\n//extern USART_Buffer ESP8266_Buffer;\nvoid AMTHL_Init(void){\n\tOLED_Clear();\n\tOLED_ShowString(1,1,\"DHT11\");\n\tOLED_ShowString(2,1,\"temp:\");\n\tOLED_ShowString(2,10,\"^C\");\n\tOLED_ShowString(3,1,\"humi:\");\n\tOLED_ShowString(3,10,\"%\");\n\n}\n\nvoid AMTHL_Connet(void){\n\tprintf(\"1. Set Station Mode.\\r\\n\");\n\tESP8266_Cmd((uint8_t*)\"AT+CWMODE=1\",(uint8_t*)\"OK\",100);\n\tosDelay(100);\n\t\n\tprintf(\"2. Close ESP8266 Echo.\\r\\n\");\n\tESP8266_Cmd((uint8_t*)\"ATE0\",(uint8_t*)\"OK\",100);\n\tosDelay(100);\n\t\n\tprintf(\"3. No Auto Connect WIFI.\\r\\n\");\n\tESP8266_Cmd((uint8_t*)\"AT+CWAUTOCONN=0\\r\\n\",(uint8_t*)\"OK\",500);\n\tosDelay(100);\n\t\n\tprintf(\"*** Start Connecting. ***\\r\\n\");\n\tESP8266_Cmd((uint8_t*)\"AT+CWJAP=\\\"\"WIFI_SSID\"\\\",\\\"\" WIFI_PASSWORD \"\\\"\",(uint8_t*)\"OK\",1000);\n\tosDelay(5000);\n\tESP8266_Cmd((uint8_t*)\"AT+MQTTUSERCFG=0,1,\\\"\"  MQTT_CLIENT_ID \"\\\",\\\"\" MQTT_USER_NAME \"\\\",\\\"\"  MQTT_PASSWD   \"\\\",0,0,\\\"\\\"\",(uint8_t*)\"OK\",200);\n\tosDelay(3000);\n\tESP8266_Cmd((uint8_t*)\"AT+MQTTCONN=0,\\\"\" BROKER_ASDDRESS  \"\\\",1883,0\",(uint8_t*)\"OK\",200);\n\tosDelay(3000);\n\tESP8266_Cmd((uint8_t*)\"AT+MQTTSUB=0,\\\"\"  SUB_TOPIC \"\\\",0\",(uint8_t*)\"OK\",200);\n\tosDelay(3000);\n}\n\nvoid AMTHL_SendMessage(void){\n\n\tsprintf(buf,\"AT+MQTTPUB=0,\\\"\" PUB_TOPIC \"\\\",\\\"\" JSON_FORMAT  \"\\\",0,0\",temperature,humidity);\n\tESP8266_Cmd((uint8_t*)buf,(uint8_t*)\"OK\",200);\n\t\n\tprintf(\"Temp: %u degree, Humi: %u %%\",temperature,humidity);\n}\n\nuint8_t AMTHL_LED_ON(void){\n\tif (UART2_Rx_flg){\n\t\tif(ESP8266_Check_Str(RxBuf,(uint8_t*)\"{\\\"LED\\\":1}\")){\n\t\t\tHAL_GPIO_WritePin(GPIOA,SIGNAL_LED,(GPIO_PinState)0); // 开灯\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\nuint8_t AMTHL_LED_OFF(void){\n\tif (UART2_Rx_flg){\n\t\tif(ESP8266_Check_Str(RxBuf,(uint8_t*)\"{\\\"LED\\\":0}\")){\n\t\t\tHAL_GPIO_WritePin(GPIOA,SIGNAL_LED,(GPIO_PinState)1); // 关灯\n\t\t\treturn 1;\n\t\t}\n\t}\n\treturn 0;\n}\n\n```\n\n# 后记\n\n工程实践被🍐🏮训斥了......😎😎😎。\n\n本文 PlantUML 存档：\n\n```plantuml\n@startuml\nleft to right direction\nactor 用户 as user\n\nrectangle 阿里云物联网平台 {\n    (监测温湿度数据) as get\n    (控制LED灯) as LED \n}\n\nrectangle STM32 {\n    (读取监测数据) as data \n    (获取温湿度数据) as getTH\n    (发送温湿度数据至物联网平台) as send\n    (接收LED控制信号) as getLED\n    (设置LED灯) as setLED\n}\n\nuser -- get\nuser -- data\nuser -- LED\nget ..> send: <<include>>\nLED ..> setLED: <<include>>\nLED ..> getLED: <<include>>\nsend -- getTH\ndata -- getTH\n\n@enduml\n```\n\n\n\n```plantuml\n@startuml\n\nactor 用户 as user\nparticipant 单片机 as STM32\nparticipant 温湿度传感器 as DHT11\nparticipant 显示设备 as OLED\nparticipant WIFI模块 as ESP8266\ndatabase \"MQTT Broker\"  as Ali\n\nSTM32 -> DHT11: 请求查询温湿度数据\nactivate STM32\nactivate DHT11\n\nDHT11 --> STM32: 温湿度数据\ndeactivate DHT11\nSTM32 -> OLED: 发送温湿度数据\nactivate OLED\n\nOLED-> user: 展示温湿度数据\nactivate user\ndeactivate OLED\ndeactivate user\n\nSTM32 -> ESP8266: 发送温湿度数据\nactivate ESP8266\nESP8266 -> Ali: 发送温湿度数据\ndeactivate ESP8266\nactivate Ali\ndeactivate STM32\n\nAli -> user: 在远程面板展示温湿度数据\ndeactivate Ali\nactivate user\ndeactivate user\n\n@enduml\n```\n\n\n```plantuml\n@startuml\n\nactor 用户 as user\ndatabase \"MQTT Broker\"  as Ali\nparticipant WIFI模块 as ESP8266\nparticipant 单片机 as STM32\nparticipant LED as LED\n\nuser -> Ali: 控制LED灯开关\nactivate Ali\n\nAli -> ESP8266: LED灯控制信号\nactivate ESP8266\ndeactivate Ali\n\nESP8266 -> STM32: 触发串口中断\ndeactivate ESP8266\nactivate STM32\n\nSTM32 -> ESP8266: 处理串口中断\nactivate ESP8266\n\nESP8266 --> STM32: LED控制信息\ndeactivate ESP8266\n\n' STM32 -> STM32\n' activate STM32\n' deactivate STM32\n\nSTM32 -> LED: 点亮LED灯\nactivate LED\n\nLED -> user: 点亮LED灯\ndeactivate LED\ndeactivate STM32\n\nactivate user\ndeactivate user\n\n@enduml\n```\n\n\n# 本文参考\n- [第01集 明确目标_哔哩哔哩_bilibili](https://www.bilibili.com/video/BV1Xz4y1n7Uh/?p=1)\n","categories":[{"name":"嵌入式","api":"api/categories/嵌入式.json"}],"tags":[{"name":"阿里云","api":"api/tags/阿里云.json"},{"name":"C","api":"api/tags/C.json"},{"name":"DHT11","api":"api/tags/DHT11.json"},{"name":"STM32","api":"api/tags/STM32.json"},{"name":"HAL","api":"api/tags/HAL.json"},{"name":"ESP8266","api":"api/tags/ESP8266.json"},{"name":"MQTT","api":"api/tags/MQTT.json"},{"name":"STM32CubeMX","api":"api/tags/STM32CubeMX.json"},{"name":"FreeRTOS","api":"api/tags/FreeRTOS.json"},{"name":"UML","api":"api/tags/UML.json"}]},"api":"api/posts/p/de31d8e3.json"}