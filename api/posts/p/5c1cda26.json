{"data":{"title":"串口驱动程序之「发送数据」","slug":"嵌入式/串口驱动程序之「发送数据」","description":"一个简单的串口发送数据的驱动程序。","date":"2024-04-02T15:30:28.000Z","updated":"2024-05-01T07:28:21.022Z","language":"zh-CN","comments":true,"url":"p/5c1cda26/","cover":"https://cdn.gallery.uuanqin.top/img/20240404230451.webp","images":[],"content":"<h1 id=\"串口简介\"><a class=\"markdownIt-Anchor\" href=\"#串口简介\"></a> 串口简介</h1>\n<p>串口是一种应用十分广泛的通讯接口，串口成本低、容易使用、通信线路简单，可实现两个设备的互相通信。单片机的串口可以使单片机与单片机、单片机与电脑、单片机与各式各样的模块互相通信，极大地扩展了单片机的应用范围，增强了单片机系统的硬件实力。</p>\n<p>简单双向串口通信有两根通信线（发送端TX和接收端RX），TX与RX要交叉连接。当只需单向的数据传输时，可以只接一根通信线。当电平标准不一致时，需要加电平转换芯片。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240501152710.webp\" alt=\"image.png\" width=\"500px\" /></p>\n<table>\n<thead>\n<tr>\n<th>STM32</th>\n<th>USB-TTL</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td rowspan=\"3\"></td>\n<td>5V</td>\n</tr>\n<tr>\n<td>VCC（和 5V 或 3V3 短接）</td>\n</tr>\n<tr>\n<td>3V3</td>\n</tr>\n<tr>\n<td>RX</td>\n<td>TDX</td>\n</tr>\n<tr>\n<td>TX</td>\n<td>RXD</td>\n</tr>\n<tr>\n<td colspan=\"2\">GND</td>\n</tr>\n<tr>\n<td>串口参数：</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>波特率：串口通信的速率</li>\n<li>起始位：标志一个数据帧的开始，固定为低电平</li>\n<li>数据位：数据帧的有效载荷，1为高电平，0为低电平，低位先行</li>\n<li>校验位：用于数据验证，根据数据位计算得来</li>\n<li>停止位：用于数据帧间隔，固定为高电平</li>\n</ul>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240501152819.webp\" alt=\"image.png\" /></p>\n<h1 id=\"使用串口输出到电脑\"><a class=\"markdownIt-Anchor\" href=\"#使用串口输出到电脑\"></a> 使用串口输出到电脑</h1>\n<p>使用串口时记得勾选 Use MicroLIB：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240402232657.webp\" alt=\"image.png\" /></p>\n<p>在 User 文件夹（或其他文件夹）下，新建两个文件：serial.c 和 serial.h（或其它名字，serial 取串口之意），并添加到「组」中。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240402225618.webp\" alt=\"image.png\" /></p>\n<h1 id=\"基操之重写-printf-和-sprintf\"><a class=\"markdownIt-Anchor\" href=\"#基操之重写-printf-和-sprintf\"></a> 基操之重写 printf 和 sprintf</h1>\n<h2 id=\"hal\"><a class=\"markdownIt-Anchor\" href=\"#hal\"></a> HAL</h2>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/**************** HAL ********************/</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span> <span class=\"comment\">// printf</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">fputc</span><span class=\"params\">(<span class=\"type\">int</span> ch,FILE *f)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"type\">uint8_t</span> c[<span class=\"number\">1</span>]=&#123;ch&#125;;</span><br><span class=\"line\">    HAL_UART_Transmit(&amp;huart1,c,<span class=\"number\">1</span>,<span class=\"number\">2</span>);        <span class=\"comment\">//发送消息到串口1</span></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ch;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用方法 printf(&quot;hello, world!&quot;);</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdarg.h&gt;</span> <span class=\"comment\">// sprintf</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> DATA_MAX 256</span></span><br><span class=\"line\"><span class=\"type\">uint8_t</span> TxBuf[DATA_MAX];</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">XXX_Printf</span><span class=\"params\">(<span class=\"type\">char</span> *format,...)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tva_list arg;</span><br><span class=\"line\">\tva_start(arg,format);</span><br><span class=\"line\">\t<span class=\"built_in\">vsprintf</span>((<span class=\"type\">char</span>*)TxBuf,format,arg);</span><br><span class=\"line\">\tva_end(arg);</span><br><span class=\"line\">\tHAL_UART_Transmit(&amp;huart2,TxBuf,<span class=\"built_in\">strlen</span>((<span class=\"type\">const</span> <span class=\"type\">char</span>*)TxBuf),<span class=\"number\">0xffff</span>); <span class=\"comment\">// 发送消息到串口2</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">// 调用方法 XXX_Printf(&quot;hello, world!&quot;);</span></span><br></pre></td></tr></table></figure>\n<h2 id=\"标准库\"><a class=\"markdownIt-Anchor\" href=\"#标准库\"></a> 标准库</h2>\n<p>serial.h：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">ifndef</span> _SERIAL_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> _SERIAL_H</span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdio.h&gt;</span> <span class=\"comment\">// printf</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;stdarg.h&gt;</span> <span class=\"comment\">// sprinf</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_Init</span><span class=\"params\">(<span class=\"type\">uint32_t</span> baud)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_SendByte</span><span class=\"params\">(<span class=\"type\">uint8_t</span> Byte)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_SendString</span><span class=\"params\">(<span class=\"type\">char</span> *str)</span>;</span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_Printf</span><span class=\"params\">(<span class=\"type\">char</span> *format,...)</span>;</span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">endif</span></span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>serial.c：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;serial.h&quot;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_Init</span><span class=\"params\">(<span class=\"type\">uint32_t</span> baud)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);</span><br><span class=\"line\">\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 发送</span></span><br><span class=\"line\">\tGPIO_InitTypeDef GPIO_InitStructure;</span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP; \t\t<span class=\"comment\">// 复用推挽</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Pin=GPIO_Pin_9;\t\t\t\t<span class=\"comment\">// 发送</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class=\"line\">\tGPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class=\"line\">\t<span class=\"comment\">// 接收</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Mode=GPIO_Mode_IPU; \t\t<span class=\"comment\">// 上拉输入</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Pin=GPIO_Pin_10;\t\t\t<span class=\"comment\">// 接收</span></span><br><span class=\"line\">\tGPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;</span><br><span class=\"line\">\tGPIO_Init(GPIOA,&amp;GPIO_InitStructure);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tUSART_InitTypeDef USART_InitStruture;</span><br><span class=\"line\">\tUSART_InitStruture.USART_BaudRate=baud; \t\t\t<span class=\"comment\">// 波特率</span></span><br><span class=\"line\">\tUSART_InitStruture.USART_HardwareFlowControl=USART_HardwareFlowControl_None;<span class=\"comment\">// 不使用流控制</span></span><br><span class=\"line\">\tUSART_InitStruture.USART_Mode=USART_Mode_Tx | USART_Mode_Rx; <span class=\"comment\">// 同时开启发送和接收</span></span><br><span class=\"line\">\tUSART_InitStruture.USART_Parity=USART_Parity_No; \t<span class=\"comment\">// 不需要校验位</span></span><br><span class=\"line\">\tUSART_InitStruture.USART_StopBits=USART_StopBits_1;\t<span class=\"comment\">// 1 位停止位</span></span><br><span class=\"line\">\tUSART_InitStruture.USART_WordLength=USART_WordLength_8b; <span class=\"comment\">// 字长</span></span><br><span class=\"line\">\tUSART_Init(USART1,&amp;USART_InitStruture);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\t<span class=\"comment\">// 接收-中断方式</span></span><br><span class=\"line\">\tUSART_ITConfig(USART1,USART_IT_RXNE,ENABLE);\t\t<span class=\"comment\">//USART_IT_RXNE一旦置1，将会向NVIC申请中断</span></span><br><span class=\"line\">\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);</span><br><span class=\"line\">\tNVIC_InitTypeDef NVIC_InitStructure;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannel=USART1_IRQn;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tNVIC_InitStructure.NVIC_IRQChannelSubPriority=<span class=\"number\">1</span>;</span><br><span class=\"line\">\tNVIC_Init(&amp;NVIC_InitStructure);</span><br><span class=\"line\">\t</span><br><span class=\"line\">\tUSART_Cmd(USART1,ENABLE);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_SendByte</span><span class=\"params\">(<span class=\"type\">uint8_t</span> byte)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tUSART_SendData(USART1,byte); \t\t\t\t\t\t<span class=\"comment\">// 标志位自动清零</span></span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(USART_GetFlagStatus(USART1,USART_FLAG_TXE)==RESET);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">void</span> <span class=\"title function_\">Serial_SendString</span><span class=\"params\">(<span class=\"type\">char</span> *str)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\t<span class=\"type\">uint8_t</span> i;</span><br><span class=\"line\">\t<span class=\"keyword\">for</span>(i=<span class=\"number\">0</span>;str[i]!=<span class=\"string\">&#x27;\\0&#x27;</span>;i++)</span><br><span class=\"line\">\t&#123;</span><br><span class=\"line\">\t\tSerial_SendByte(str[i]);</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 移植printf</span></span><br><span class=\"line\"><span class=\"comment\">// fputc原型，是printf的底层。将其重定向到串口</span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">fputc</span><span class=\"params\">(<span class=\"type\">int</span> ch,FILE *f)</span>&#123;</span><br><span class=\"line\">\tSerial_SendByte(ch);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> ch;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>示例程序 main.c：</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;stm32f10x.h&quot;</span>                  <span class=\"comment\">// Device header</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&quot;serial.h&quot;</span></span></span><br><span class=\"line\"><span class=\"type\">int</span> <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">void</span>)</span>&#123;</span><br><span class=\"line\">\tSerial_Init(<span class=\"number\">115200</span>);</span><br><span class=\"line\">\t<span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Hello World!&quot;</span>);</span><br><span class=\"line\">\t<span class=\"keyword\">while</span>(<span class=\"number\">1</span>)&#123;</span><br><span class=\"line\">\t\t</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>测试：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240402232800.webp\" alt=\"image.png\" /></p>\n","raw":"---\ntitle: 串口驱动程序之「发送数据」\ntags:\n  - 驱动\n  - STM32\n  - USB\n  - Keil\n  - C\n  - HAL\n  - 串口\ncover: 'https://cdn.gallery.uuanqin.top/img/20240404230451.webp'\ndescription: 一个简单的串口发送数据的驱动程序。\ncategories:\n  - 嵌入式\nabbrlink: 5c1cda26\ndate: 2024-04-02 23:30:28\ntop_img:\n---\n\n# 串口简介\n\n串口是一种应用十分广泛的通讯接口，串口成本低、容易使用、通信线路简单，可实现两个设备的互相通信。单片机的串口可以使单片机与单片机、单片机与电脑、单片机与各式各样的模块互相通信，极大地扩展了单片机的应用范围，增强了单片机系统的硬件实力。\n\n简单双向串口通信有两根通信线（发送端TX和接收端RX），TX与RX要交叉连接。当只需单向的数据传输时，可以只接一根通信线。当电平标准不一致时，需要加电平转换芯片。\n\n![image.png|500](https://cdn.gallery.uuanqin.top/img/20240501152710.webp)\n\n| STM32 | USB-TTL            |\n| ----- | ------------------ |\n|       | 5V                 |\n|       | VCC（和 5V 或 3V3 短接） |\n|       | 3V3                |\n| RX    | TDX                |\n| TX    | RXD                |\n| GND   | GND                |\n串口参数：\n- 波特率：串口通信的速率\n- 起始位：标志一个数据帧的开始，固定为低电平\n- 数据位：数据帧的有效载荷，1为高电平，0为低电平，低位先行\n- 校验位：用于数据验证，根据数据位计算得来\n- 停止位：用于数据帧间隔，固定为高电平\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240501152819.webp)\n\n# 使用串口输出到电脑\n\n使用串口时记得勾选 Use MicroLIB：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240402232657.webp)\n\n在 User 文件夹（或其他文件夹）下，新建两个文件：serial.c 和 serial.h（或其它名字，serial 取串口之意），并添加到「组」中。\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240402225618.webp)\n\n\n\n# 基操之重写 printf 和 sprintf\n\n\n## HAL\n\n```c\n/**************** HAL ********************/\n#include <stdio.h> // printf\nint fputc(int ch,FILE *f)\n{\n    uint8_t c[1]={ch};\n    HAL_UART_Transmit(&huart1,c,1,2);        //发送消息到串口1\n\treturn ch;\n}\n// 调用方法 printf(\"hello, world!\");\n\n\n#include <stdarg.h> // sprintf\n#define DATA_MAX 256\nuint8_t TxBuf[DATA_MAX];\nvoid XXX_Printf(char *format,...)\n{\n\tva_list arg;\n\tva_start(arg,format);\n\tvsprintf((char*)TxBuf,format,arg);\n\tva_end(arg);\n\tHAL_UART_Transmit(&huart2,TxBuf,strlen((const char*)TxBuf),0xffff); // 发送消息到串口2\n}\n// 调用方法 XXX_Printf(\"hello, world!\");\n```\n\n\n\n## 标准库\n\nserial.h：\n\n```c\n#ifndef _SERIAL_H\n#define _SERIAL_H\n#include \"stm32f10x.h\"                  // Device header\n#include <stdio.h> // printf\n#include <stdarg.h> // sprinf\n\nvoid Serial_Init(uint32_t baud);\nvoid Serial_SendByte(uint8_t Byte);\nvoid Serial_SendString(char *str);\nvoid Serial_Printf(char *format,...);\n#endif\n\n```\n\nserial.c：\n\n```c\n#include \"serial.h\"\n\n\nvoid Serial_Init(uint32_t baud)\n{\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_USART1,ENABLE);\n\tRCC_APB2PeriphClockCmd(RCC_APB2Periph_GPIOA,ENABLE);\n\t\n\t// 发送\n\tGPIO_InitTypeDef GPIO_InitStructure;\n\tGPIO_InitStructure.GPIO_Mode=GPIO_Mode_AF_PP; \t\t// 复用推挽\n\tGPIO_InitStructure.GPIO_Pin=GPIO_Pin_9;\t\t\t\t// 发送\n\tGPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;\n\tGPIO_Init(GPIOA,&GPIO_InitStructure);\n\t// 接收\n\tGPIO_InitStructure.GPIO_Mode=GPIO_Mode_IPU; \t\t// 上拉输入\n\tGPIO_InitStructure.GPIO_Pin=GPIO_Pin_10;\t\t\t// 接收\n\tGPIO_InitStructure.GPIO_Speed=GPIO_Speed_50MHz;\n\tGPIO_Init(GPIOA,&GPIO_InitStructure);\n\t\n\t\n\tUSART_InitTypeDef USART_InitStruture;\n\tUSART_InitStruture.USART_BaudRate=baud; \t\t\t// 波特率\n\tUSART_InitStruture.USART_HardwareFlowControl=USART_HardwareFlowControl_None;// 不使用流控制\n\tUSART_InitStruture.USART_Mode=USART_Mode_Tx | USART_Mode_Rx; // 同时开启发送和接收\n\tUSART_InitStruture.USART_Parity=USART_Parity_No; \t// 不需要校验位\n\tUSART_InitStruture.USART_StopBits=USART_StopBits_1;\t// 1 位停止位\n\tUSART_InitStruture.USART_WordLength=USART_WordLength_8b; // 字长\n\tUSART_Init(USART1,&USART_InitStruture);\n\t\n\t// 接收-中断方式\n\tUSART_ITConfig(USART1,USART_IT_RXNE,ENABLE);\t\t//USART_IT_RXNE一旦置1，将会向NVIC申请中断\n\tNVIC_PriorityGroupConfig(NVIC_PriorityGroup_2);\n\tNVIC_InitTypeDef NVIC_InitStructure;\n\tNVIC_InitStructure.NVIC_IRQChannel=USART1_IRQn;\n\tNVIC_InitStructure.NVIC_IRQChannelCmd=ENABLE;\n\tNVIC_InitStructure.NVIC_IRQChannelPreemptionPriority=1;\n\tNVIC_InitStructure.NVIC_IRQChannelSubPriority=1;\n\tNVIC_Init(&NVIC_InitStructure);\n\t\n\tUSART_Cmd(USART1,ENABLE);\n}\n\nvoid Serial_SendByte(uint8_t byte)\n{\n\tUSART_SendData(USART1,byte); \t\t\t\t\t\t// 标志位自动清零\n\twhile(USART_GetFlagStatus(USART1,USART_FLAG_TXE)==RESET);\n}\n\nvoid Serial_SendString(char *str)\n{\n\tuint8_t i;\n\tfor(i=0;str[i]!='\\0';i++)\n\t{\n\t\tSerial_SendByte(str[i]);\n\t}\n}\n\n\n// 移植printf\n// fputc原型，是printf的底层。将其重定向到串口\nint fputc(int ch,FILE *f){\n\tSerial_SendByte(ch);\n\treturn ch;\n}\n\n```\n\n示例程序 main.c：\n\n```c\n#include \"stm32f10x.h\"                  // Device header\n#include \"serial.h\"\nint main(void){\n\tSerial_Init(115200);\n\tprintf(\"Hello World!\");\n\twhile(1){\n\t\t\n\t}\n}\n\n```\n\n测试：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240402232800.webp)\n","categories":[{"name":"嵌入式","api":"api/categories/嵌入式.json"}],"tags":[{"name":"C","api":"api/tags/C.json"},{"name":"驱动","api":"api/tags/驱动.json"},{"name":"STM32","api":"api/tags/STM32.json"},{"name":"HAL","api":"api/tags/HAL.json"},{"name":"Keil","api":"api/tags/Keil.json"},{"name":"USB","api":"api/tags/USB.json"},{"name":"串口","api":"api/tags/串口.json"}]},"api":"api/posts/p/5c1cda26.json"}