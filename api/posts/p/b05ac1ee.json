{"data":{"title":"将 CDN 缓存自动刷新加入到博客发布的工作流（Hexo、WordPress）","slug":"核心协同/自动化/将 CDN 缓存自动刷新加入到博客发布的工作流（Hexo、WordPress）","description":"本文提供两类博客刷新CDN方法，另附有腾讯云SDK的使用介绍以及API KEY安全使用方法","date":"2023-04-30T16:15:18.000Z","updated":"2024-12-09T13:10:31.890Z","language":"zh-CN","comments":true,"url":"p/b05ac1ee/","cover":"https://cdn.gallery.uuanqin.top/img/tencentcdn545.jpg","images":[],"content":"\n<div class=\"callout\" data-callout=\"success\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-check\"><path d=\"M20 6 9 17l-5-5\"/></svg>\n</div>\n<div class=\"callout-title-inner\">本文已收录至 <a href=\"https://butterfly.zhheo.com/\">Butterfly 主题美化教程</a></div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>使用了 CDN 加速源站的小伙伴可能会遇到一个问题，那就是每次发布博客到服务器后，都需要手动在腾讯云控制台进行节点的缓存刷新，很是麻烦。这里我介绍几种刷新 CDN 缓存的方法，对于 Hexo 博客，将着重介绍通过脚本的思路实现一键发布的具体流程。</p>\n<h1 id=\"方案一腾讯云对象存储的-cdn-刷新\"><a class=\"markdownIt-Anchor\" href=\"#方案一腾讯云对象存储的-cdn-刷新\"></a> 方案一：腾讯云对象存储的 CDN 刷新</h1>\n<p>首先介绍官方方案。点击存储桶后可以找到 CDN 缓存刷新函数，这是一项收费服务。有兴趣的小伙伴可以试一试。</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20230824094657.png\" alt=\"image.png\" /></p>\n<h1 id=\"方案二自写-js-脚本并利用钩子实现hexo-方案\"><a class=\"markdownIt-Anchor\" href=\"#方案二自写-js-脚本并利用钩子实现hexo-方案\"></a> 方案二：自写 JS 脚本并利用钩子实现（Hexo 方案）</h1>\n<h2 id=\"思路packagejson-编写\"><a class=\"markdownIt-Anchor\" href=\"#思路packagejson-编写\"></a> 思路（<code>package.json</code> 编写）</h2>\n<p>在接触 Hexo 博客建站的时候，你一定会知道 Hexo 三连：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class=\"line\"><span class=\"comment\"># 当然可以简写成</span></span><br><span class=\"line\">hexo clean &amp;&amp; hexo d -g</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>命令含义参考：<a href=\"https://hexo.io/zh-cn/docs/commands\">指令 | Hexo</a></p>\n</blockquote>\n<p>上面的命令可以写进 <code>[blog_root]/package.json</code> 的 <code>scripts</code> 中，如：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;publish&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo d -g&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;start&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo g &amp;&amp; hexo s&quot;</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n<p>这样每次部署我们只需要运行 <code>npm run publish</code> 即可完成连击。</p>\n<p>在完成博客部署连击后，我们可以再执行一个脚本刷新腾讯云 CDN 缓存。我打算写一个 js 脚本 <code>auto_flush_cdn.js</code> 用 node 运行（毕竟玩 Hexo 总会装有 Node.js 的吧）。</p>\n<p>这样我们的部署脚本就会是这样：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">  <span class=\"attr\">&quot;publish&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo d -g &amp;&amp; node .\\\\auto_flush_cdn.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n<p>或者利用钩子：</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;publish&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;hexo clean &amp;&amp; hexo d -g&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;postpublish&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;node .\\\\auto_flush_cdn.js&quot;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br></pre></td></tr></table></figure>\n<p>现在的问题就是 <code>auto_flush_cdn.js</code> 该如何写。</p>\n<h2 id=\"使用腾讯云-sdk-进行开发\"><a class=\"markdownIt-Anchor\" href=\"#使用腾讯云-sdk-进行开发\"></a> 使用腾讯云 SDK 进行开发</h2>\n<p>登录腾讯云后，打开云产品&gt;云 API：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-20230501153225264.png\" alt=\"image-20230501153225264\" width=\"302px\" /></p>\n<p>我们要使用腾讯云 SDK，需要先安装依赖：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/%E4%BE%9D%E8%B5%96%E4%B8%8B%E8%BD%BDdfsdf.jpg\" alt=\"依赖下载dfsdf\" /></p>\n<p>这里我就安装在博客目录了：博客下新建终端运行命令 <code>npm install tencentcloud-sdk-nodejs-cdn --save</code></p>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">「找不到模块」的解决方案</div>\n</div>\n<div class=\"callout-content\"><p>实践中遇到找不到模块的问题，安装好依赖后记得重启终端、VSCode 甚至电脑。如果不行请另外搜索解决方案。</p>\n</div></div><p>然后找到对应的 API，按照平台指示的说明填写好参数，充分利用其诊断工具进行在线调试。（一般不会出什么问题）</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/%E7%BA%BF%E4%B8%8A%E5%B0%9D%E8%AF%95%E6%8E%A5%E5%8F%A3dfdff.jpg\" alt=\"线上尝试接口dfdff\" /></p>\n<p>没有问题的话我们就可以把平台代码复制下来了，在代码中改改 API ID 和 API KEY 参数即可。</p>\n\n<div class=\"callout\" data-callout=\"warning\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">密钥安全性提示</div>\n</div>\n<div class=\"callout-content\"><p>此处 API ID 和 API KEY 参数填写仅供演示。为了安全起见，建议不要在代码中写入任何的密匙。详情看下一小节。</p>\n</div></div><p>运行一下我们的脚本文件尝试一下：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/%E6%88%90%E5%8A%9Fddf.jpg\" alt=\"成功ddf\" /></p>\n<p>没有返回错误信息，看了看控制台确实进行了刷新。如果出现问题，可以把 RequestId 粘贴到 <a href=\"https://console.cloud.tencent.com/api/diagnosis\">API Doctor(使用诊断) - 云 API - 控制台 (tencent.com)</a> 进行诊断。</p>\n<p>附控制台看刷新纪录的方法，打开内容分发网络找刷新预热的操作记录：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/%E6%9F%A5%E7%9C%8B%E6%9C%89%E6%B2%A1%E6%9C%89%E5%88%B7%E6%96%B0%E6%88%90%E5%8A%9F6546.jpg\" alt=\"查看有没有刷新成功6546\" /></p>\n<h2 id=\"安全使用-api-key\"><a class=\"markdownIt-Anchor\" href=\"#安全使用-api-key\"></a> 安全使用 API KEY</h2>\n<p>在使用腾讯云 SDK 进行开发时，不可避免的需要传入 API KEY，但是把密匙硬写在代码中是不安全的。</p>\n\n<div class=\"callout\" data-callout=\"warning\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">密钥安全性提示</div>\n</div>\n<div class=\"callout-content\"><p>代码泄露可能会导致 SecretId 和 SecretKey 泄露，并威胁账号下所有资源的安全性。建议不要在代码中使用持久 SecretId 和 SecretKey。</p>\n<p><em>——腾讯云</em></p>\n</div></div><p>这里介绍的是通过环境变量读取 SecretId 和 SecretKey 方案。</p>\n<h3 id=\"windows\"><a class=\"markdownIt-Anchor\" href=\"#windows\"></a> Windows</h3>\n<p>首先在自己的系统中配置环境变量，把自己的 SecretId 和 SecretKey 填进去：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/%E7%A4%BA%E4%BE%8Benv546546.jpg\" alt=\"示例env546546\" width=\"500px\" /></p>\n<p>我们可以写一个 demo 测试一下：</p>\n<p>新建 <code>test_env.js</code>，写入两行代码：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> <span class=\"title class_\">Key</span> = process.<span class=\"property\">env</span>.<span class=\"property\">TENCENT_API_SECRETID</span>;</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"title class_\">Key</span>)</span><br></pre></td></tr></table></figure>\n<p>运行脚本：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">node &lt;your test_env.js&gt;</span><br><span class=\"line\"><span class=\"comment\"># 例如 node .\\test_env.js</span></span><br><span class=\"line\"><span class=\"comment\"># 输出 YOUR_ENV</span></span><br></pre></td></tr></table></figure>\n<p>若成功输出即配置成功。</p>\n\n<div class=\"callout\" data-callout=\"hint\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-flame\"><path d=\"M8.5 14.5A2.5 2.5 0 0 0 11 12c0-1.38-.5-2-1-3-1.072-2.143-.224-4.054 2-6 .5 2.5 2 4.9 4 6.5 2 1.6 3 3.5 3 5.5a7 7 0 1 1-14 0c0-1.153.433-2.294 1-3a2.5 2.5 0 0 0 2.5 2.5z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">环境变量不生效的解决方案</div>\n</div>\n<div class=\"callout-content\"><p>环境变量配置好后，记得重启你的终端、VSCode（如果你使用 VSCode 的终端）。太玄学的话，你懂的，重启电脑。</p>\n</div></div><p>在你刚刚从腾讯云复制下来的代码文件中做以下修改：</p>\n<figure class=\"highlight diff\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">const tencentcloud = require(&quot;tencentcloud-sdk-nodejs-cdn&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">const CdnClient = tencentcloud.cdn.v20180606.Client;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"addition\">+ var secretId = process.env.TENCENT_API_SECRETID;</span></span><br><span class=\"line\"><span class=\"addition\">+ var secretKey = process.env.TENCENT_API_SECRETKEY;</span></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">const clientConfig = &#123;</span><br><span class=\"line\">  credential: &#123;</span><br><span class=\"line\"><span class=\"deletion\">-   secretId: &quot;SecretId&quot;,</span></span><br><span class=\"line\"><span class=\"deletion\">-   secretKey: &quot;SecretKey&quot;,</span></span><br><span class=\"line\"><span class=\"addition\">+   secretId: secretId,</span></span><br><span class=\"line\"><span class=\"addition\">+   secretKey: secretKey,</span></span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  ...</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n<p>python 中使用环境变量的方法：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\">os.environ[<span class=\"string\">&quot;TENCENT_API_SECRETID&quot;</span>]</span><br><span class=\"line\">os.environ[<span class=\"string\">&quot;TENCENT_API_SECRETKEY&quot;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 或</span></span><br><span class=\"line\">os.environ.get(<span class=\"string\">&quot;TENCENT_API_SECRETID&quot;</span>)</span><br><span class=\"line\">os.environ.get(<span class=\"string\">&quot;TENCENT_API_SECRETKEY&quot;</span>)</span><br></pre></td></tr></table></figure>\n<h3 id=\"linux\"><a class=\"markdownIt-Anchor\" href=\"#linux\"></a> Linux</h3>\n<p>Linux 中需要将环境变量持久化，方法有很多，这里我就演示其中一种。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">vim /etc/environment</span><br></pre></td></tr></table></figure>\n<p>添加：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">export TENCENT_API_SECRETID=AKIDvhxxxxxxxxxxxwP</span><br><span class=\"line\">export TENCENT_API_SECRETKEY=Exxxxxxxxxxxxxxxxh</span><br></pre></td></tr></table></figure>\n<p>然后手动执行命令使其生效：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">source</span> /etc/environment</span><br></pre></td></tr></table></figure>\n<p>可以执行以下命令查看环境变量：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">export</span></span><br><span class=\"line\"><span class=\"comment\"># declare -x TENCENT_API_SECRETID=&quot;AKIDvhxxxxxxxxxxxwP&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># declare -x TENCENT_API_SECRETKEY=&quot;Exxxxxxxxxxxxxxxxh&quot;</span></span><br></pre></td></tr></table></figure>\n<p>这种方法：</p>\n<ul>\n<li>生效时间：新开终端生效，或者手动 <code>source /etc/environment</code> 生效</li>\n<li>生效期限：永久有效</li>\n<li>生效范围：对所有用户有效</li>\n</ul>\n<h2 id=\"脚本\"><a class=\"markdownIt-Anchor\" href=\"#脚本\"></a> 脚本</h2>\n<p>最后的脚本文件文件：</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> tencentcloud = <span class=\"built_in\">require</span>(<span class=\"string\">&quot;tencentcloud-sdk-nodejs-cdn&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">CdnClient</span> = tencentcloud.<span class=\"property\">cdn</span>.<span class=\"property\">v20180606</span>.<span class=\"property\">Client</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">var</span> secretId = process.<span class=\"property\">env</span>.<span class=\"property\">TENCENT_API_SECRETID</span>;</span><br><span class=\"line\"><span class=\"keyword\">var</span> secretKey = process.<span class=\"property\">env</span>.<span class=\"property\">TENCENT_API_SECRETKEY</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实例化一个认证对象，入参需要传入腾讯云账户 SecretId 和 SecretKey，此处还需注意密钥对的保密</span></span><br><span class=\"line\"><span class=\"comment\">// 代码泄露可能会导致 SecretId 和 SecretKey 泄露，并威胁账号下所有资源的安全性。以下代码示例仅供参考，建议采用更安全的方式来使用密钥，请参见：https://cloud.tencent.com/document/product/1278/85305</span></span><br><span class=\"line\"><span class=\"comment\">// 密钥可前往官网控制台 https://console.cloud.tencent.com/cam/capi 进行获取</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> clientConfig = &#123;</span><br><span class=\"line\">  <span class=\"attr\">credential</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">secretId</span>: secretId,</span><br><span class=\"line\">    <span class=\"attr\">secretKey</span>: secretKey,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"attr\">region</span>: <span class=\"string\">&quot;&quot;</span>,</span><br><span class=\"line\">  <span class=\"attr\">profile</span>: &#123;</span><br><span class=\"line\">    <span class=\"attr\">httpProfile</span>: &#123;</span><br><span class=\"line\">      <span class=\"attr\">endpoint</span>: <span class=\"string\">&quot;cdn.tencentcloudapi.com&quot;</span>,</span><br><span class=\"line\">    &#125;,</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">// 实例化要请求产品的client对象,clientProfile是可选的</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> client = <span class=\"keyword\">new</span> <span class=\"title class_\">CdnClient</span>(clientConfig);</span><br><span class=\"line\"><span class=\"keyword\">const</span> params = &#123;</span><br><span class=\"line\">    <span class=\"string\">&quot;Paths&quot;</span>: [</span><br><span class=\"line\">      <span class=\"comment\">/* 替换成你的网址 */</span></span><br><span class=\"line\">        <span class=\"string\">&quot;https://uuanqin.top&quot;</span>,</span><br><span class=\"line\">        <span class=\"string\">&quot;https://www.uuanqin.top&quot;</span></span><br><span class=\"line\">    ],</span><br><span class=\"line\">    <span class=\"string\">&quot;FlushType&quot;</span>: <span class=\"string\">&quot;delete&quot;</span></span><br><span class=\"line\">&#125;;</span><br><span class=\"line\">client.<span class=\"title class_\">PurgePathCache</span>(params).<span class=\"title function_\">then</span>(</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(data);</span><br><span class=\"line\">  &#125;,</span><br><span class=\"line\">  <span class=\"function\">(<span class=\"params\">err</span>) =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&quot;error&quot;</span>, err);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n<h1 id=\"方案三wordpress-解决方案\"><a class=\"markdownIt-Anchor\" href=\"#方案三wordpress-解决方案\"></a> 方案三：WordPress 解决方案</h1>\n<p>在 <code>functions.php</code> 下添加自动刷新腾讯云控制台 CDN 缓存的操作。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br><span class=\"line\">124</span><br><span class=\"line\">125</span><br><span class=\"line\">126</span><br><span class=\"line\">127</span><br><span class=\"line\">128</span><br><span class=\"line\">129</span><br><span class=\"line\">130</span><br><span class=\"line\">131</span><br><span class=\"line\">132</span><br><span class=\"line\">133</span><br><span class=\"line\">134</span><br><span class=\"line\">135</span><br><span class=\"line\">136</span><br><span class=\"line\">137</span><br><span class=\"line\">138</span><br><span class=\"line\">139</span><br><span class=\"line\">140</span><br><span class=\"line\">141</span><br><span class=\"line\">142</span><br><span class=\"line\">143</span><br><span class=\"line\">144</span><br><span class=\"line\">145</span><br><span class=\"line\">146</span><br><span class=\"line\">147</span><br><span class=\"line\">148</span><br><span class=\"line\">149</span><br><span class=\"line\">150</span><br><span class=\"line\">151</span><br><span class=\"line\">152</span><br><span class=\"line\">153</span><br><span class=\"line\">154</span><br><span class=\"line\">155</span><br><span class=\"line\">156</span><br><span class=\"line\">157</span><br><span class=\"line\">158</span><br><span class=\"line\">159</span><br><span class=\"line\">160</span><br><span class=\"line\">161</span><br><span class=\"line\">162</span><br><span class=\"line\">163</span><br><span class=\"line\">164</span><br><span class=\"line\">165</span><br><span class=\"line\">166</span><br><span class=\"line\">167</span><br><span class=\"line\">168</span><br><span class=\"line\">169</span><br><span class=\"line\">170</span><br><span class=\"line\">171</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 需要填写你的密钥，访问 https://console.qcloud.com/capi 获取 SecretId 及 $secretKey */</span></span><br><span class=\"line\"><span class=\"variable\">$secretKey</span> = <span class=\"string\">&#x27;填写你的密钥&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$secretId</span> = <span class=\"string\">&#x27;填写你的密钥&#x27;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//更新或发布文章清理本文和首页CDN缓存</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;publish_post&#x27;</span>, <span class=\"string\">&#x27;Clean_By_Publish&#x27;</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//提交评论更新本文CDN缓存</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;comment_post&#x27;</span>, <span class=\"string\">&#x27;Clean_By_Comments&#x27;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//评论被审核更新本文CDN缓存</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">add_action</span>(<span class=\"string\">&#x27;comment_unapproved_to_approved&#x27;</span>, <span class=\"string\">&#x27;Clean_By_Approved&#x27;</span>,<span class=\"number\">0</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//发布文章更新CDN缓存函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Clean_By_Publish</span>(<span class=\"params\"><span class=\"variable\">$post_ID</span></span>)</span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">global</span> <span class=\"variable\">$secretKey</span>,<span class=\"variable\">$secretId</span>;</span><br><span class=\"line\"><span class=\"variable\">$url</span> = <span class=\"title function_ invoke__\">get_permalink</span>(<span class=\"variable\">$post_ID</span>);</span><br><span class=\"line\"><span class=\"variable\">$action</span>=<span class=\"string\">&#x27;RefreshCdnUrl&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*要清理的页面，默认包含首页和文章页面，需要清理其他页面请自行发挥*/</span></span><br><span class=\"line\"><span class=\"variable\">$PRIVATE_PARAMS</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;urls.0&#x27;</span> =&gt; <span class=\"title function_ invoke__\">home_url</span>(),</span><br><span class=\"line\"><span class=\"string\">&#x27;urls.1&#x27;</span> =&gt; <span class=\"variable\">$url</span> ,</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$HttpUrl</span>=<span class=\"string\">&quot;cdn.api.qcloud.com&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*除非有特殊说明，如MultipartUploadVodFile，其它接口都支持GET及POST*/</span></span><br><span class=\"line\"><span class=\"variable\">$HttpMethod</span>=<span class=\"string\">&quot;POST&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*是否https协议，大部分接口都必须为https，只有少部分接口除外（如MultipartUploadVodFile）*/</span></span><br><span class=\"line\"><span class=\"variable\">$isHttps</span> =<span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"comment\">/*下面这五个参数为所有接口的 公共参数；对于某些接口没有地域概念，则不用传递Region（如DescribeDeals）*/</span></span><br><span class=\"line\"><span class=\"variable\">$COMMON_PARAMS</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;Nonce&#x27;</span> =&gt; <span class=\"title function_ invoke__\">rand</span>(),</span><br><span class=\"line\"><span class=\"string\">&#x27;Timestamp&#x27;</span> =&gt;<span class=\"title function_ invoke__\">time</span>(<span class=\"literal\">NULL</span>),</span><br><span class=\"line\"><span class=\"string\">&#x27;Action&#x27;</span> =&gt;<span class=\"variable\">$action</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;SecretId&#x27;</span> =&gt; <span class=\"variable\">$secretId</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">/***********************************************************************************/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">CreateRequest</span>(<span class=\"variable\">$HttpUrl</span>,<span class=\"variable\">$HttpMethod</span>,<span class=\"variable\">$COMMON_PARAMS</span>,<span class=\"variable\">$secretKey</span>, <span class=\"variable\">$PRIVATE_PARAMS</span>, <span class=\"variable\">$isHttps</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//提交评论清理文章CDN函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Clean_By_Comments</span>(<span class=\"params\"><span class=\"variable\">$comment_id</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">global</span> <span class=\"variable\">$secretKey</span>,<span class=\"variable\">$secretId</span>;</span><br><span class=\"line\"><span class=\"variable\">$comment</span> = <span class=\"title function_ invoke__\">get_comment</span>(<span class=\"variable\">$comment_id</span>);</span><br><span class=\"line\"><span class=\"variable\">$url</span> = <span class=\"title function_ invoke__\">get_permalink</span>(<span class=\"variable\">$comment</span>-&gt;comment_post_ID);</span><br><span class=\"line\"><span class=\"variable\">$action</span>=<span class=\"string\">&#x27;RefreshCdnUrl&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*参数*/</span></span><br><span class=\"line\"><span class=\"variable\">$PRIVATE_PARAMS</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;urls.0&#x27;</span> =&gt; <span class=\"variable\">$url</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$HttpUrl</span>=<span class=\"string\">&quot;cdn.api.qcloud.com&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*除非有特殊说明，如MultipartUploadVodFile，其它接口都支持GET及POST*/</span></span><br><span class=\"line\"><span class=\"variable\">$HttpMethod</span>=<span class=\"string\">&quot;POST&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*是否https协议，大部分接口都必须为https，只有少部分接口除外（如MultipartUploadVodFile）*/</span></span><br><span class=\"line\"><span class=\"variable\">$isHttps</span> =<span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"comment\">/*下面这五个参数为所有接口的 公共参数；对于某些接口没有地域概念，则不用传递Region（如DescribeDeals）*/</span></span><br><span class=\"line\"><span class=\"variable\">$COMMON_PARAMS</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;Nonce&#x27;</span> =&gt; <span class=\"title function_ invoke__\">rand</span>(),</span><br><span class=\"line\"><span class=\"string\">&#x27;Timestamp&#x27;</span> =&gt;<span class=\"title function_ invoke__\">time</span>(<span class=\"literal\">NULL</span>),</span><br><span class=\"line\"><span class=\"string\">&#x27;Action&#x27;</span> =&gt;<span class=\"variable\">$action</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;SecretId&#x27;</span> =&gt; <span class=\"variable\">$secretId</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">/***********************************************************************************/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">CreateRequest</span>(<span class=\"variable\">$HttpUrl</span>,<span class=\"variable\">$HttpMethod</span>,<span class=\"variable\">$COMMON_PARAMS</span>,<span class=\"variable\">$secretKey</span>, <span class=\"variable\">$PRIVATE_PARAMS</span>, <span class=\"variable\">$isHttps</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//评论被审核清理CDN缓存函数</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">Clean_By_Approved</span>(<span class=\"params\"><span class=\"variable\">$comment</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"keyword\">global</span> <span class=\"variable\">$secretKey</span>,<span class=\"variable\">$secretId</span>;</span><br><span class=\"line\"><span class=\"variable\">$url</span> = <span class=\"title function_ invoke__\">get_permalink</span>(<span class=\"variable\">$comment</span>-&gt;comment_post_ID);</span><br><span class=\"line\"><span class=\"variable\">$action</span>=<span class=\"string\">&#x27;RefreshCdnUrl&#x27;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*参数*/</span></span><br><span class=\"line\"><span class=\"variable\">$PRIVATE_PARAMS</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;urls.0&#x27;</span> =&gt; <span class=\"variable\">$url</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"variable\">$HttpUrl</span>=<span class=\"string\">&quot;cdn.api.qcloud.com&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*除非有特殊说明，如MultipartUploadVodFile，其它接口都支持GET及POST*/</span></span><br><span class=\"line\"><span class=\"variable\">$HttpMethod</span>=<span class=\"string\">&quot;POST&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/*是否https协议，大部分接口都必须为https，只有少部分接口除外（如MultipartUploadVodFile）*/</span></span><br><span class=\"line\"><span class=\"variable\">$isHttps</span> =<span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"comment\">/*下面这五个参数为所有接口的 公共参数；对于某些接口没有地域概念，则不用传递Region（如DescribeDeals）*/</span></span><br><span class=\"line\"><span class=\"variable\">$COMMON_PARAMS</span> = <span class=\"keyword\">array</span>(</span><br><span class=\"line\"><span class=\"string\">&#x27;Nonce&#x27;</span> =&gt; <span class=\"title function_ invoke__\">rand</span>(),</span><br><span class=\"line\"><span class=\"string\">&#x27;Timestamp&#x27;</span> =&gt;<span class=\"title function_ invoke__\">time</span>(<span class=\"literal\">NULL</span>),</span><br><span class=\"line\"><span class=\"string\">&#x27;Action&#x27;</span> =&gt;<span class=\"variable\">$action</span>,</span><br><span class=\"line\"><span class=\"string\">&#x27;SecretId&#x27;</span> =&gt; <span class=\"variable\">$secretId</span>,</span><br><span class=\"line\">);</span><br><span class=\"line\"><span class=\"comment\">/***********************************************************************************/</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">CreateRequest</span>(<span class=\"variable\">$HttpUrl</span>,<span class=\"variable\">$HttpMethod</span>,<span class=\"variable\">$COMMON_PARAMS</span>,<span class=\"variable\">$secretKey</span>, <span class=\"variable\">$PRIVATE_PARAMS</span>, <span class=\"variable\">$isHttps</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//请求主函数，无需改动</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">CreateRequest</span>(<span class=\"params\"><span class=\"variable\">$HttpUrl</span>,<span class=\"variable\">$HttpMethod</span>,<span class=\"variable\">$COMMON_PARAMS</span>,<span class=\"variable\">$secretKey</span>, <span class=\"variable\">$PRIVATE_PARAMS</span>, <span class=\"variable\">$isHttps</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"variable\">$FullHttpUrl</span> = <span class=\"variable\">$HttpUrl</span>.<span class=\"string\">&quot;/v2/index.php&quot;</span>;</span><br><span class=\"line\"><span class=\"comment\">/***************对请求参数 按参数名 做字典序升序排列，注意此排序区分大小写*************/</span></span><br><span class=\"line\"><span class=\"variable\">$ReqParaArray</span> = <span class=\"title function_ invoke__\">array_merge</span>(<span class=\"variable\">$COMMON_PARAMS</span>, <span class=\"variable\">$PRIVATE_PARAMS</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">ksort</span>(<span class=\"variable\">$ReqParaArray</span>);</span><br><span class=\"line\"><span class=\"comment\">/**********************************生成签名原文**********************************</span></span><br><span class=\"line\"><span class=\"comment\">* 将 请求方法, URI地址,及排序好的请求参数 按照下面格式 拼接在一起, 生成签名原文，此请求中的原文为</span></span><br><span class=\"line\"><span class=\"comment\">* GETcvm.api.qcloud.com/v2/index.php?Action=DescribeInstances&amp;Nonce=345122&amp;Region=gz</span></span><br><span class=\"line\"><span class=\"comment\">* &amp;SecretId=AKIDz8krbsJ5yKBZQ ·1pn74WFkmLPx3gnPhESA&amp;Timestamp=1408704141</span></span><br><span class=\"line\"><span class=\"comment\">* &amp;instanceIds.0=qcvm12345&amp;instanceIds.1=qcvm56789</span></span><br><span class=\"line\"><span class=\"comment\">* ****************************************************************************/</span></span><br><span class=\"line\"><span class=\"variable\">$SigTxt</span> = <span class=\"variable\">$HttpMethod</span>.<span class=\"variable\">$FullHttpUrl</span>.<span class=\"string\">&quot;?&quot;</span>;</span><br><span class=\"line\"><span class=\"variable\">$isFirst</span> = <span class=\"literal\">true</span>;</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$ReqParaArray</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span> (!<span class=\"variable\">$isFirst</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$SigTxt</span> = <span class=\"variable\">$SigTxt</span>.<span class=\"string\">&quot;&amp;&quot;</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$isFirst</span>= <span class=\"literal\">false</span>;</span><br><span class=\"line\"><span class=\"comment\">/*拼接签名原文时，如果参数名称中携带_，需要替换成.*/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"title function_ invoke__\">strpos</span>(<span class=\"variable\">$key</span>, <span class=\"string\">&#x27;_&#x27;</span>))</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$key</span> = <span class=\"title function_ invoke__\">str_replace</span>(<span class=\"string\">&#x27;_&#x27;</span>, <span class=\"string\">&#x27;.&#x27;</span>, <span class=\"variable\">$key</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$SigTxt</span>=<span class=\"variable\">$SigTxt</span>.<span class=\"variable\">$key</span>.<span class=\"string\">&quot;=&quot;</span>.<span class=\"variable\">$value</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*********************根据签名原文字符串 $SigTxt，生成签名 Signature******************/</span></span><br><span class=\"line\"><span class=\"variable\">$Signature</span> = <span class=\"title function_ invoke__\">base64_encode</span>(<span class=\"title function_ invoke__\">hash_hmac</span>(<span class=\"string\">&#x27;sha1&#x27;</span>, <span class=\"variable\">$SigTxt</span>, <span class=\"variable\">$secretKey</span>, <span class=\"literal\">true</span>));</span><br><span class=\"line\"><span class=\"comment\">/***************拼接请求串,对于请求参数及签名，需要进行urlencode编码********************/</span></span><br><span class=\"line\"><span class=\"variable\">$Req</span> = <span class=\"string\">&quot;Signature=&quot;</span>.<span class=\"title function_ invoke__\">urlencode</span>(<span class=\"variable\">$Signature</span>);</span><br><span class=\"line\"><span class=\"keyword\">foreach</span> (<span class=\"variable\">$ReqParaArray</span> <span class=\"keyword\">as</span> <span class=\"variable\">$key</span> =&gt; <span class=\"variable\">$value</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$Req</span>=<span class=\"variable\">$Req</span>.<span class=\"string\">&quot;&amp;&quot;</span>.<span class=\"variable\">$key</span>.<span class=\"string\">&quot;=&quot;</span>.<span class=\"title function_ invoke__\">urlencode</span>(<span class=\"variable\">$value</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">/*********************************发送请求********************************/</span></span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$HttpMethod</span> === <span class=\"string\">&#x27;GET&#x27;</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$isHttps</span> === <span class=\"literal\">true</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$Req</span>=<span class=\"string\">&quot;https://&quot;</span>.<span class=\"variable\">$FullHttpUrl</span>.<span class=\"string\">&quot;?&quot;</span>.<span class=\"variable\">$Req</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$Req</span>=<span class=\"string\">&quot;http://&quot;</span>.<span class=\"variable\">$FullHttpUrl</span>.<span class=\"string\">&quot;?&quot;</span>.<span class=\"variable\">$Req</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$Rsp</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"variable\">$Req</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"variable\">$isHttps</span> === <span class=\"literal\">true</span>)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$Rsp</span>= <span class=\"title function_ invoke__\">SendPost</span>(<span class=\"string\">&quot;https://&quot;</span>.<span class=\"variable\">$FullHttpUrl</span>,<span class=\"variable\">$Req</span>,<span class=\"variable\">$isHttps</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">else</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\"><span class=\"variable\">$Rsp</span>= <span class=\"title function_ invoke__\">SendPost</span>(<span class=\"string\">&quot;http://&quot;</span>.<span class=\"variable\">$FullHttpUrl</span>,<span class=\"variable\">$Req</span>,<span class=\"variable\">$isHttps</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"comment\">//var_export(json_decode($Rsp,true));</span></span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"title function_ invoke__\">json_decode</span>(<span class=\"variable\">$Rsp</span>,<span class=\"literal\">true</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">SendPost</span>(<span class=\"params\"><span class=\"variable\">$FullHttpUrl</span>, <span class=\"variable\">$Req</span>, <span class=\"variable\">$isHttps</span></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\"><span class=\"variable\">$ch</span> = <span class=\"title function_ invoke__\">curl_init</span>();</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_POST, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_POSTFIELDS, <span class=\"variable\">$Req</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_URL, <span class=\"variable\">$FullHttpUrl</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_RETURNTRANSFER, <span class=\"number\">1</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_TIMEOUT, <span class=\"number\">1</span> );</span><br><span class=\"line\"><span class=\"keyword\">if</span> (<span class=\"variable\">$isHttps</span> === <span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_SSL_VERIFYPEER, <span class=\"literal\">false</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">curl_setopt</span>(<span class=\"variable\">$ch</span>, CURLOPT_SSL_VERIFYHOST, <span class=\"literal\">false</span>);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$result</span> = <span class=\"title function_ invoke__\">curl_exec</span>(<span class=\"variable\">$ch</span>);</span><br><span class=\"line\"><span class=\"keyword\">return</span> <span class=\"variable\">$result</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://cloud.tencent.com/document/product/1278/46697\">云 API 使用 API Explorer-快速入门-文档中心-腾讯云 (tencent.com)</a></li>\n<li><a href=\"https://cloud.tencent.com/document/sdk/Node.js\">Node.js-SDK 中心-腾讯云 (tencent.com)</a></li>\n<li><a href=\"https://blog.csdn.net/qq_41684621/article/details/111463672\">npm 安装包的路径在哪里<em>npm install 在哪里输入</em>兮动人的博客-CSDN 博客</a></li>\n<li><a href=\"https://blog.csdn.net/sunnyjingqi/article/details/107000607\">npm 之安装、更新、卸载本地安装包_samllplum 的博客-CSDN 博客</a></li>\n<li><a href=\"https://www.ly522.com/1506.html\">wordpress 腾讯 CDN 缓存实现发布/更新文章/评论自动刷新-轻刻年轮 (ly522.com)</a></li>\n<li><a href=\"https://docs.npmjs.com/cli/v6/using-npm/scripts#special-packagejson-config-object\">scripts | npm Docs (npmjs.com)</a></li>\n<li><a href=\"http://ruanyifeng.com/blog/2016/10/npm_scripts.html\">npm scripts 使用指南 - 阮一峰的网络日志 (ruanyifeng.com)</a></li>\n<li><a href=\"https://cloud.tencent.com/document/product/1278/85305\">云 API 云 API 密钥安全方案推荐-开发指南-文档中心-腾讯云 (tencent.com)</a></li>\n<li><a href=\"https://blog.csdn.net/xishining/article/details/119283522\">操作系统：Linux 环境变量配置的 6 种方法_export path 后 需要执行什么-CSDN博客</a></li>\n<li><a href=\"https://mwell.tech/archives/11408\">Python 中的环境变量 – 读取、打印、设置 – 码微 (mwell.tech)</a></li>\n</ul>\n","raw":"---\ntitle: 将 CDN 缓存自动刷新加入到博客发布的工作流（Hexo、WordPress）\ntags:\n  - CDN\n  - API\n  - Node.js\n  - JavaScript\n  - Hexo\n  - WordPress\n  - php\n  - SDK\n  - 腾讯云\n  - 对象存储\n  - COS\ncover: 'https://cdn.gallery.uuanqin.top/img/tencentcdn545.jpg'\nabbrlink: b05ac1ee\ndescription: 本文提供两类博客刷新CDN方法，另附有腾讯云SDK的使用介绍以及API KEY安全使用方法\ncategories:\n  - 核心协同\n  - 自动化\ndate: 2023-05-01 00:15:18\n---\n\n> [!success] 本文已收录至 [Butterfly 主题美化教程](https://butterfly.zhheo.com/)\n\n使用了 CDN 加速源站的小伙伴可能会遇到一个问题，那就是每次发布博客到服务器后，都需要手动在腾讯云控制台进行节点的缓存刷新，很是麻烦。这里我介绍几种刷新 CDN 缓存的方法，对于 Hexo 博客，将着重介绍通过脚本的思路实现一键发布的具体流程。\n\n# 方案一：腾讯云对象存储的 CDN 刷新\n\n首先介绍官方方案。点击存储桶后可以找到 CDN 缓存刷新函数，这是一项收费服务。有兴趣的小伙伴可以试一试。\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20230824094657.png)\n\n# 方案二：自写 JS 脚本并利用钩子实现（Hexo 方案）\n\n## 思路（`package.json` 编写）\n\n在接触 Hexo 博客建站的时候，你一定会知道 Hexo 三连：\n\n```sh\nhexo clean && hexo g && hexo d\n# 当然可以简写成\nhexo clean && hexo d -g\n```\n\n> 命令含义参考：[指令 | Hexo](https://hexo.io/zh-cn/docs/commands)\n\n上面的命令可以写进 `[blog_root]/package.json` 的 `scripts` 中，如：\n\n```json\n\"scripts\": {\n\t\"publish\": \"hexo clean && hexo d -g\",\n\t\"start\": \"hexo clean && hexo g && hexo s\"\n},\n```\n\n这样每次部署我们只需要运行 `npm run publish` 即可完成连击。\n\n在完成博客部署连击后，我们可以再执行一个脚本刷新腾讯云 CDN 缓存。我打算写一个 js 脚本 `auto_flush_cdn.js` 用 node 运行（毕竟玩 Hexo 总会装有 Node.js 的吧）。\n\n这样我们的部署脚本就会是这样：\n\n```json\n\"scripts\": {\n  \"publish\": \"hexo clean && hexo d -g && node .\\\\auto_flush_cdn.js\",\n},\n```\n\n或者利用钩子：\n\n```json\n\"scripts\": {\n\t\"publish\": \"hexo clean && hexo d -g\",\n    \"postpublish\": \"node .\\\\auto_flush_cdn.js\",\n},\n```\n\n现在的问题就是 `auto_flush_cdn.js` 该如何写。\n\n## 使用腾讯云 SDK 进行开发\n\n登录腾讯云后，打开云产品>云 API：\n\n![image-20230501153225264|302](https://cdn.gallery.uuanqin.top/img/image-20230501153225264.png)\n\n我们要使用腾讯云 SDK，需要先安装依赖：\n\n![依赖下载dfsdf](https://cdn.gallery.uuanqin.top/img/%25E4%25BE%259D%25E8%25B5%2596%25E4%25B8%258B%25E8%25BD%25BDdfsdf.jpg)\n\n这里我就安装在博客目录了：博客下新建终端运行命令 `npm install tencentcloud-sdk-nodejs-cdn --save`\n\n> [!hint] 「找不到模块」的解决方案\n> 实践中遇到找不到模块的问题，安装好依赖后记得重启终端、VSCode 甚至电脑。如果不行请另外搜索解决方案。\n\n然后找到对应的 API，按照平台指示的说明填写好参数，充分利用其诊断工具进行在线调试。（一般不会出什么问题）\n\n![线上尝试接口dfdff](https://cdn.gallery.uuanqin.top/img/%25E7%25BA%25BF%25E4%25B8%258A%25E5%25B0%259D%25E8%25AF%2595%25E6%258E%25A5%25E5%258F%25A3dfdff.jpg)\n\n没有问题的话我们就可以把平台代码复制下来了，在代码中改改 API ID 和 API KEY 参数即可。\n\n> [!warning] 密钥安全性提示\n> 此处 API ID 和 API KEY 参数填写仅供演示。为了安全起见，建议不要在代码中写入任何的密匙。详情看下一小节。\n\n运行一下我们的脚本文件尝试一下：\n\n![成功ddf](https://cdn.gallery.uuanqin.top/img/%25E6%2588%2590%25E5%258A%259Fddf.jpg)\n\n没有返回错误信息，看了看控制台确实进行了刷新。如果出现问题，可以把 RequestId 粘贴到 [API Doctor(使用诊断) - 云 API - 控制台 (tencent.com)](https://console.cloud.tencent.com/api/diagnosis) 进行诊断。\n\n附控制台看刷新纪录的方法，打开内容分发网络找刷新预热的操作记录：\n\n![查看有没有刷新成功6546](https://cdn.gallery.uuanqin.top/img/%25E6%259F%25A5%25E7%259C%258B%25E6%259C%2589%25E6%25B2%25A1%25E6%259C%2589%25E5%2588%25B7%25E6%2596%25B0%25E6%2588%2590%25E5%258A%259F6546.jpg)\n\n## 安全使用 API KEY\n\n在使用腾讯云 SDK 进行开发时，不可避免的需要传入 API KEY，但是把密匙硬写在代码中是不安全的。\n\n> [!warning] 密钥安全性提示\n> 代码泄露可能会导致 SecretId 和 SecretKey 泄露，并威胁账号下所有资源的安全性。建议不要在代码中使用持久 SecretId 和 SecretKey。\n>\n> _——腾讯云_\n\n这里介绍的是通过环境变量读取 SecretId 和 SecretKey 方案。\n\n### Windows\n\n首先在自己的系统中配置环境变量，把自己的 SecretId 和 SecretKey 填进去：\n\n![示例env546546|500](https://cdn.gallery.uuanqin.top/img/%25E7%25A4%25BA%25E4%25BE%258Benv546546.jpg)\n\n我们可以写一个 demo 测试一下：\n\n新建 `test_env.js`，写入两行代码：\n\n```js\nvar Key = process.env.TENCENT_API_SECRETID;\nconsole.log(Key)\n```\n\n运行脚本：\n\n```sh\nnode <your test_env.js>\n# 例如 node .\\test_env.js\n# 输出 YOUR_ENV\n```\n\n若成功输出即配置成功。\n\n> [!hint] 环境变量不生效的解决方案\n> 环境变量配置好后，记得重启你的终端、VSCode（如果你使用 VSCode 的终端）。太玄学的话，你懂的，重启电脑。\n\n在你刚刚从腾讯云复制下来的代码文件中做以下修改：\n\n```diff\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-cdn\");\n\nconst CdnClient = tencentcloud.cdn.v20180606.Client;\n\n+ var secretId = process.env.TENCENT_API_SECRETID;\n+ var secretKey = process.env.TENCENT_API_SECRETKEY;\n...\n\nconst clientConfig = {\n  credential: {\n-   secretId: \"SecretId\",\n-   secretKey: \"SecretKey\",\n+   secretId: secretId,\n+   secretKey: secretKey,\n  },\n  ...\n};\n```\n\npython 中使用环境变量的方法：\n```python\nimport os\nos.environ[\"TENCENT_API_SECRETID\"]\nos.environ[\"TENCENT_API_SECRETKEY\"]\n\n# 或\nos.environ.get(\"TENCENT_API_SECRETID\")\nos.environ.get(\"TENCENT_API_SECRETKEY\")\n```\n\n\n### Linux\n\nLinux 中需要将环境变量持久化，方法有很多，这里我就演示其中一种。\n\n```sh\nvim /etc/environment\n```\n\n添加：\n\n```\nexport TENCENT_API_SECRETID=AKIDvhxxxxxxxxxxxwP\nexport TENCENT_API_SECRETKEY=Exxxxxxxxxxxxxxxxh\n```\n\n然后手动执行命令使其生效：\n\n```sh\nsource /etc/environment\n```\n\n可以执行以下命令查看环境变量：\n```sh\nexport\n# declare -x TENCENT_API_SECRETID=\"AKIDvhxxxxxxxxxxxwP\"\n# declare -x TENCENT_API_SECRETKEY=\"Exxxxxxxxxxxxxxxxh\"\n```\n\n\n这种方法：\n\n- 生效时间：新开终端生效，或者手动 `source /etc/environment` 生效\n- 生效期限：永久有效\n- 生效范围：对所有用户有效\n\n## 脚本\n\n最后的脚本文件文件：\n\n```js\n// Depends on tencentcloud-sdk-nodejs version 4.0.3 or higher\nconst tencentcloud = require(\"tencentcloud-sdk-nodejs-cdn\");\n\nconst CdnClient = tencentcloud.cdn.v20180606.Client;\n\nvar secretId = process.env.TENCENT_API_SECRETID;\nvar secretKey = process.env.TENCENT_API_SECRETKEY;\n\n// 实例化一个认证对象，入参需要传入腾讯云账户 SecretId 和 SecretKey，此处还需注意密钥对的保密\n// 代码泄露可能会导致 SecretId 和 SecretKey 泄露，并威胁账号下所有资源的安全性。以下代码示例仅供参考，建议采用更安全的方式来使用密钥，请参见：https://cloud.tencent.com/document/product/1278/85305\n// 密钥可前往官网控制台 https://console.cloud.tencent.com/cam/capi 进行获取\nconst clientConfig = {\n  credential: {\n    secretId: secretId,\n    secretKey: secretKey,\n  },\n  region: \"\",\n  profile: {\n    httpProfile: {\n      endpoint: \"cdn.tencentcloudapi.com\",\n    },\n  },\n};\n\n// 实例化要请求产品的client对象,clientProfile是可选的\nconst client = new CdnClient(clientConfig);\nconst params = {\n    \"Paths\": [\n      /* 替换成你的网址 */\n        \"https://uuanqin.top\",\n        \"https://www.uuanqin.top\"\n    ],\n    \"FlushType\": \"delete\"\n};\nclient.PurgePathCache(params).then(\n  (data) => {\n    console.log(data);\n  },\n  (err) => {\n    console.error(\"error\", err);\n  }\n);\n```\n\n# 方案三：WordPress 解决方案\n\n在 `functions.php` 下添加自动刷新腾讯云控制台 CDN 缓存的操作。\n\n```php\n/* 需要填写你的密钥，访问 https://console.qcloud.com/capi 获取 SecretId 及 $secretKey */\n$secretKey = '填写你的密钥';\n$secretId = '填写你的密钥';\n\n//更新或发布文章清理本文和首页CDN缓存\nadd_action('publish_post', 'Clean_By_Publish', 0);\n\n//提交评论更新本文CDN缓存\nadd_action('comment_post', 'Clean_By_Comments',0);\n\n//评论被审核更新本文CDN缓存\nadd_action('comment_unapproved_to_approved', 'Clean_By_Approved',0);\n\n//发布文章更新CDN缓存函数\nfunction Clean_By_Publish($post_ID){\nglobal $secretKey,$secretId;\n$url = get_permalink($post_ID);\n$action='RefreshCdnUrl';\n/*要清理的页面，默认包含首页和文章页面，需要清理其他页面请自行发挥*/\n$PRIVATE_PARAMS = array(\n'urls.0' => home_url(),\n'urls.1' => $url ,\n);\n$HttpUrl=\"cdn.api.qcloud.com\";\n/*除非有特殊说明，如MultipartUploadVodFile，其它接口都支持GET及POST*/\n$HttpMethod=\"POST\";\n/*是否https协议，大部分接口都必须为https，只有少部分接口除外（如MultipartUploadVodFile）*/\n$isHttps =true;\n/*下面这五个参数为所有接口的 公共参数；对于某些接口没有地域概念，则不用传递Region（如DescribeDeals）*/\n$COMMON_PARAMS = array(\n'Nonce' => rand(),\n'Timestamp' =>time(NULL),\n'Action' =>$action,\n'SecretId' => $secretId,\n);\n/***********************************************************************************/\nCreateRequest($HttpUrl,$HttpMethod,$COMMON_PARAMS,$secretKey, $PRIVATE_PARAMS, $isHttps);\n}\n\n//提交评论清理文章CDN函数\nfunction Clean_By_Comments($comment_id)\n{\nglobal $secretKey,$secretId;\n$comment = get_comment($comment_id);\n$url = get_permalink($comment->comment_post_ID);\n$action='RefreshCdnUrl';\n/*参数*/\n$PRIVATE_PARAMS = array(\n'urls.0' => $url,\n);\n$HttpUrl=\"cdn.api.qcloud.com\";\n/*除非有特殊说明，如MultipartUploadVodFile，其它接口都支持GET及POST*/\n$HttpMethod=\"POST\";\n/*是否https协议，大部分接口都必须为https，只有少部分接口除外（如MultipartUploadVodFile）*/\n$isHttps =true;\n/*下面这五个参数为所有接口的 公共参数；对于某些接口没有地域概念，则不用传递Region（如DescribeDeals）*/\n$COMMON_PARAMS = array(\n'Nonce' => rand(),\n'Timestamp' =>time(NULL),\n'Action' =>$action,\n'SecretId' => $secretId,\n);\n/***********************************************************************************/\nCreateRequest($HttpUrl,$HttpMethod,$COMMON_PARAMS,$secretKey, $PRIVATE_PARAMS, $isHttps);\n}\n\n//评论被审核清理CDN缓存函数\nfunction Clean_By_Approved($comment)\n{\nglobal $secretKey,$secretId;\n$url = get_permalink($comment->comment_post_ID);\n$action='RefreshCdnUrl';\n/*参数*/\n$PRIVATE_PARAMS = array(\n'urls.0' => $url,\n);\n$HttpUrl=\"cdn.api.qcloud.com\";\n/*除非有特殊说明，如MultipartUploadVodFile，其它接口都支持GET及POST*/\n$HttpMethod=\"POST\";\n/*是否https协议，大部分接口都必须为https，只有少部分接口除外（如MultipartUploadVodFile）*/\n$isHttps =true;\n/*下面这五个参数为所有接口的 公共参数；对于某些接口没有地域概念，则不用传递Region（如DescribeDeals）*/\n$COMMON_PARAMS = array(\n'Nonce' => rand(),\n'Timestamp' =>time(NULL),\n'Action' =>$action,\n'SecretId' => $secretId,\n);\n/***********************************************************************************/\nCreateRequest($HttpUrl,$HttpMethod,$COMMON_PARAMS,$secretKey, $PRIVATE_PARAMS, $isHttps);\n}\n\n//请求主函数，无需改动\nfunction CreateRequest($HttpUrl,$HttpMethod,$COMMON_PARAMS,$secretKey, $PRIVATE_PARAMS, $isHttps)\n{\n$FullHttpUrl = $HttpUrl.\"/v2/index.php\";\n/***************对请求参数 按参数名 做字典序升序排列，注意此排序区分大小写*************/\n$ReqParaArray = array_merge($COMMON_PARAMS, $PRIVATE_PARAMS);\nksort($ReqParaArray);\n/**********************************生成签名原文**********************************\n* 将 请求方法, URI地址,及排序好的请求参数 按照下面格式 拼接在一起, 生成签名原文，此请求中的原文为\n* GETcvm.api.qcloud.com/v2/index.php?Action=DescribeInstances&Nonce=345122&Region=gz\n* &SecretId=AKIDz8krbsJ5yKBZQ ·1pn74WFkmLPx3gnPhESA&Timestamp=1408704141\n* &instanceIds.0=qcvm12345&instanceIds.1=qcvm56789\n* ****************************************************************************/\n$SigTxt = $HttpMethod.$FullHttpUrl.\"?\";\n$isFirst = true;\nforeach ($ReqParaArray as $key => $value)\n{\nif (!$isFirst)\n{\n$SigTxt = $SigTxt.\"&\";\n}\n$isFirst= false;\n/*拼接签名原文时，如果参数名称中携带_，需要替换成.*/\nif(strpos($key, '_'))\n{\n$key = str_replace('_', '.', $key);\n}\n$SigTxt=$SigTxt.$key.\"=\".$value;\n}\n/*********************根据签名原文字符串 $SigTxt，生成签名 Signature******************/\n$Signature = base64_encode(hash_hmac('sha1', $SigTxt, $secretKey, true));\n/***************拼接请求串,对于请求参数及签名，需要进行urlencode编码********************/\n$Req = \"Signature=\".urlencode($Signature);\nforeach ($ReqParaArray as $key => $value)\n{\n$Req=$Req.\"&\".$key.\"=\".urlencode($value);\n}\n/*********************************发送请求********************************/\nif($HttpMethod === 'GET')\n{\nif($isHttps === true)\n{\n$Req=\"https://\".$FullHttpUrl.\"?\".$Req;\n}\nelse\n{\n$Req=\"http://\".$FullHttpUrl.\"?\".$Req;\n}\n$Rsp = file_get_contents($Req);\n}\nelse\n{\nif($isHttps === true)\n{\n$Rsp= SendPost(\"https://\".$FullHttpUrl,$Req,$isHttps);\n}\nelse\n{\n$Rsp= SendPost(\"http://\".$FullHttpUrl,$Req,$isHttps);\n}\n}\n//var_export(json_decode($Rsp,true));\nreturn json_decode($Rsp,true);\n}\nfunction SendPost($FullHttpUrl, $Req, $isHttps)\n{\n$ch = curl_init();\ncurl_setopt($ch, CURLOPT_POST, 1);\ncurl_setopt($ch, CURLOPT_POSTFIELDS, $Req);\ncurl_setopt($ch, CURLOPT_URL, $FullHttpUrl);\ncurl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);\ncurl_setopt($ch, CURLOPT_TIMEOUT, 1 );\nif ($isHttps === true) {\ncurl_setopt($ch, CURLOPT_SSL_VERIFYPEER, false);\ncurl_setopt($ch, CURLOPT_SSL_VERIFYHOST, false);\n}\n$result = curl_exec($ch);\nreturn $result;\n}\n```\n\n# 本文参考\n\n- [云 API 使用 API Explorer-快速入门-文档中心-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/1278/46697)\n- [Node.js-SDK 中心-腾讯云 (tencent.com)](https://cloud.tencent.com/document/sdk/Node.js)\n- [npm 安装包的路径在哪里*npm install 在哪里输入*兮动人的博客-CSDN 博客](https://blog.csdn.net/qq_41684621/article/details/111463672)\n- [npm 之安装、更新、卸载本地安装包\\_samllplum 的博客-CSDN 博客](https://blog.csdn.net/sunnyjingqi/article/details/107000607)\n- [wordpress 腾讯 CDN 缓存实现发布/更新文章/评论自动刷新-轻刻年轮 (ly522.com)](https://www.ly522.com/1506.html)\n- [scripts | npm Docs (npmjs.com)](https://docs.npmjs.com/cli/v6/using-npm/scripts#special-packagejson-config-object)\n- [npm scripts 使用指南 - 阮一峰的网络日志 (ruanyifeng.com)](http://ruanyifeng.com/blog/2016/10/npm_scripts.html)\n- [云 API 云 API 密钥安全方案推荐-开发指南-文档中心-腾讯云 (tencent.com)](https://cloud.tencent.com/document/product/1278/85305)\n- [操作系统：Linux 环境变量配置的 6 种方法_export path 后 需要执行什么-CSDN博客](https://blog.csdn.net/xishining/article/details/119283522)\n- [Python 中的环境变量 – 读取、打印、设置 – 码微 (mwell.tech)](https://mwell.tech/archives/11408)\n","categories":[{"name":"核心协同","api":"api/categories/核心协同.json"},{"name":"自动化","api":"api/categories/核心协同/自动化.json"}],"tags":[{"name":"CDN","api":"api/tags/CDN.json"},{"name":"腾讯云","api":"api/tags/腾讯云.json"},{"name":"JavaScript","api":"api/tags/JavaScript.json"},{"name":"API","api":"api/tags/API.json"},{"name":"Hexo","api":"api/tags/Hexo.json"},{"name":"WordPress","api":"api/tags/WordPress.json"},{"name":"SDK","api":"api/tags/SDK.json"},{"name":"COS","api":"api/tags/COS.json"},{"name":"对象存储","api":"api/tags/对象存储.json"},{"name":"Node.js","api":"api/tags/Node-js.json"},{"name":"php","api":"api/tags/php.json"}]},"api":"api/posts/p/b05ac1ee.json"}