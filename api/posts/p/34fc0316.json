{"data":{"title":"go-cqhttp 部署与简单编程","slug":"核心协同/自动化/go-cqhttp 部署与简单编程","description":"舍友用了都说好","date":"2024-04-18T11:08:47.000Z","updated":"2025-08-12T13:53:02.284Z","language":"zh-CN","comments":true,"url":"p/34fc0316/","cover":"https://cdn.gallery.uuanqin.top/img/20240418211821.webp","images":[],"content":"\n<div class=\"callout\" data-callout=\"warning\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-alert-triangle\"><path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3Z\"/><path d=\"M12 9v4\"/><path d=\"M12 17h.01\"/></svg>\n</div>\n<div class=\"callout-title-inner\">免责声明：本文仅供学习和交流，切勿用于违法行为。本文作者不对读者的不当使用负责。</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>在 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/5744d011/\"><span class=\"bilink-pop-up\">站内文章</span>之前的文章</a> 中提到，我需要每天查询宿舍水电费余额。抓到小程序查余额的接口后，我打算把消息通知到宿舍 QQ 群中（微信群机器人操作太麻烦，或者说只有企业群才有机器人）。</p>\n<p>本文简要介绍 go-cqhttp 部署与编程思路，并实现一个简单的单向数据传输的 Demo。</p>\n<h1 id=\"简述qq-机器人的曾经与未来\"><a class=\"markdownIt-Anchor\" href=\"#简述qq-机器人的曾经与未来\"></a> 简述：QQ 机器人的曾经与未来</h1>\n<p>酷 Q 是一款制造 QQ 聊天机器人的软件，主要功能是获取 QQ 的聊天消息，然后通过各种插件达到各种不同的功能。</p>\n<p><a href=\"https://github.com/kyubotics/coolq-http-api\">cqhttp</a> 是 2017 年初出现的基于 CKYU（一个 QQ 机器人插件平台，应该就是酷 Q）的一款开源免费插件，它使用户能够通过 HTTP 或 WebSocket 对 CKYU 的事件进行上报以及接收请求来调用 CKYU 的 DLL 接口，从而可以使用其它语言（不方便编译到原生二进制的语言）编写 CKYU 插件。在 CQHTTP 活跃开发和维护期间，有非常多的开发者使用 Python、Java、Node.js 等 web 开发常用语言基于 CQHTTP 插件编写各式各样的聊天机器人。</p>\n<blockquote>\n<p>2020 年晨风律师函事件发生，当年酷 Q 官网决定停运。<br />\ncqhttp 项目在 2020 年归档，作者自述原因为无力维护。</p>\n</blockquote>\n\n<div class=\"callout\" data-callout=\"cite\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-quote\"><path d=\"M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z\"/><path d=\"M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">愿我们能在更开放的平行世界里相遇。——酷 Q 官网</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>在新的机器人平台 Mirai 开始发展、以及 CKYU 决定停运之后，为了让原来基于 CQHTTP 插件编写的机器人能够继续运行，一些开发者在其它机器人平台上编写了兼容 CQHTTP 接口的插件/模块。 go-cqhttp 是其中较为广泛使用的一个。</p>\n<p><a href=\"https://github.com/Mrs4s/go-cqhttp\">go-cqhttp</a> 是使用 <a href=\"https://github.com/mamoe/mirai\">mirai</a> 以及 <a href=\"https://github.com/Mrs4s/MiraiGo\">Mirai</a> 开发的 cqhttp golang 原生实现，并在 <a href=\"https://github.com/richardchien/coolq-http-api\">cqhttp 原版</a> 的基础上做了部分修改和拓展。</p>\n<p>但是以上均不是官方推出的机器人或接口。2020 年 4 月初，腾讯官方内测 Hoo!k 机器人，不久后下线。2023 年 7 月，腾讯 QQ Windows 全新 NT 架构 9.9.0 体验版已上架官网开放下载。</p>\n<blockquote>\n<p>go-cqhttp 作者在 2023 年发布 <a href=\"https://github.com/Mrs4s/go-cqhttp/issues/2471\">声明</a>，称由于 QQ 官方针对协议库的围追堵截，作者本人已无力维护项目。</p>\n</blockquote>\n\n<div class=\"callout\" data-callout=\"cite\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-quote\"><path d=\"M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z\"/><path d=\"M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">协议库的时代已经过去，接下来是 Hook 官方客户端的时代。——go-cqhttp 项目维护者 Mrs4s</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>如今 2024 年 NTQQ 正式版诞生，官方正式推出「QQ 机器人」，称其可以直接打通「QQ 频道」「QQ 群」与个人。</p>\n<h1 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\"></a> 思路</h1>\n<blockquote>\n<p><a href=\"https://github.com/botuniverse/onebot\">OneBot</a> 是统一的聊天机器人应用接口标准，旨在统一不同聊天平台上的机器人应用开发接口，使开发者只需编写一次业务逻辑代码即可应用到多种机器人平台。go-cqhttp 支持该协议。2020 年诞生。</p>\n</blockquote>\n<p>对于个人用户，官方的 QQ 机器人不能添加到群，故放弃此想法。go-cqhttp 虽停止维护，但是还能用，用这半个学期应该是可以的。我尝试了过使用基于 go-cqhttp 开发的 Python SDK（<a href=\"https://github.com/FengLiuFeseliud/pycqBot\">pycqBot</a>），但不太好用。</p>\n<p>使用 go-cqhttp 需要有一个小号，充当「机器人」。</p>\n<p>项目离不开本地开发（我的电脑使用 Windows），定时任务离不开 Linux 服务器部署。</p>\n<p>本地测试时信息流：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240418204224.webp\" alt=\"image.png\" /></p>\n<p>实际应用时的信息流：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/20240418204251.webp\" alt=\"image.png\" /></p>\n<h1 id=\"本地测试开发\"><a class=\"markdownIt-Anchor\" href=\"#本地测试开发\"></a> 本地测试开发</h1>\n<p>安装 go-cqhttp，它是一个可执行文件，直接下载下来就可以用。实测，不能使用账号密码登录，因此我们需要进行扫码登录。</p>\n<p>刚刚下载好的 go-cqhttp 需要在命令行中执行一遍（不要鼠标双击）。通信方式选择 0。本地就会生成 <code>config.yml</code> 文件。</p>\n<p>此时还不能扫码登录，会有出现以下报错：</p>\n\n<div class=\"callout\" data-callout=\"error\">\n<div class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-zap\"><polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"/></svg>\n</div>\n<div class=\"callout-title-inner\">错误：当前协议不支持二维码登录, 请配置账号密码登录。</div>\n</div>\n<div class=\"callout-content\"><p></p>\n</div></div><p>这时，我们看到目录会生成 <code>device.json</code> 文件，点进去，把 <code>&quot;protocol&quot;:6</code> 改成 <code>&quot;protocol&quot;:2</code>，就可以拿到二维码手机扫码登陆了。</p>\n<p>接下来用机器人账号进行扫码即可。登录成功后，你可以先和大号建一个小群以供测试。</p>\n<p><strong>注意到本地会生成一个 <code>session.token</code> 的文件，请保留。</strong></p>\n<p>在浏览器或其它工具发送 GET 指令。（参考 <a href=\"\">onebot-11/api/public.md at master · botuniverse/onebot-11 (github.com)</a>）</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://127.0.0.1:5700/send_group_msg?group_id=&lt;QQ群群号&gt;&amp;message=hello_world</span><br><span class=\"line\"><span class=\"comment\"># 5700 是 go-cqhttp 开放的端口</span></span><br></pre></td></tr></table></figure>\n<p>群里收到机器人发送的 <code>hello_world</code> 即配置成功。</p>\n<p>接下来写个 Python 脚本，用于查水电费，或者执行其它你想要的功能（比如使用 WebHook 推送）。这个脚本打算放在 Linux 服务器中运行。脚本实现：</p>\n<ol>\n<li>GET 请求获取水电费余额</li>\n<li>计算余额是否不足</li>\n<li>【可选】使用 hook 进行推送</li>\n<li>发送消息至机器人</li>\n<li>结束</li>\n</ol>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> json  </span><br><span class=\"line\"><span class=\"keyword\">import</span> requests  </span><br><span class=\"line\">  </span><br><span class=\"line\">QQ_GROUP_NUMBER = <span class=\"number\">123456</span> <span class=\"comment\"># QQ群号    </span></span><br><span class=\"line\">QQ_PUSH_URL = <span class=\"string\">&#x27;http://xxxx:5700/send_group_msg&#x27;</span></span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">send_message_qq</span>(<span class=\"params\">msg</span>):</span><br><span class=\"line\">    pyload = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;group_id&quot;</span>: QQ_GROUP_NUMBER,</span><br><span class=\"line\">        <span class=\"string\">&quot;message&quot;</span>: msg</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    headers = &#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;Content-Type&quot;</span>: <span class=\"string\">&quot;application/json; charset=UTF-8&quot;</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    requests.post(QQ_PUSH_URL, data=json.dumps(pyload), headers=headers)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">main</span>():</span><br><span class=\"line\">\t<span class=\"comment\"># 编写自己的逻辑 比如获取水电费</span></span><br><span class=\"line\">    send_message_qq(msg)  <span class=\"comment\"># Q群提示</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    main()</span><br></pre></td></tr></table></figure>\n<h1 id=\"linux-部署\"><a class=\"markdownIt-Anchor\" href=\"#linux-部署\"></a> Linux 部署</h1>\n<p>安装 go-cqhttp，解压压缩包。同理，改一下协议并先运行一下。<strong>此时并不能扫码登录 QQ，因为 QQ 判定你的登录地和扫码地太远。这时候我们只需要把之前的 <code>session.token</code> 文件复制到当前目录即可。</strong></p>\n<p>运行 go-cqhttp。我们可以在本地浏览器等 HTTP 客户端进行测试：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">http://&lt;服务器IP&gt;:5700/send_group_msg?group_id=&lt;QQ群群号&gt;&amp;message=hello_world</span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>云服务器安全组中记得把 5700 打开。</p>\n</blockquote>\n<p>测试无误后把 python 文件复制过来，记得改一下正确的 <code>QQ_PUSH_URL</code>，应改为 <code>http://127.0.0.1:5700/send_group_msg</code>。</p>\n<p>后台运行 go-cqhttp（参考 <a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/91c1c44b/\"><span class=\"bilink-pop-up\">站内文章</span>Linux 使用 nohup 后台运行程序</a>）：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 必须在go-cqhttp存在的目录运行指令</span></span><br><span class=\"line\"><span class=\"built_in\">nohup</span> /&lt;your_dir&gt;/go-cqhttp &amp;</span><br></pre></td></tr></table></figure>\n<p>然后将运行 python 脚本的任务添加到 crontab 中实现定时启动（参考：<a class=\"uuanqin-bilink\" target=\"_blank\" href=\"/p/88536c89/\"><span class=\"bilink-pop-up\">站内文章</span>Linux 使用 Cron 创建定时任务</a>）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">4 8 * * * /usr/bin/python /&lt;your_dir&gt;/your.py </span><br></pre></td></tr></table></figure>\n<blockquote>\n<p>后续几个月的使用反馈：偶然出现消息没有成功发送出去的情况，所以不要过度依赖此机器人。</p>\n</blockquote>\n<h1 id=\"后记\"><a class=\"markdownIt-Anchor\" href=\"#后记\"></a> 后记</h1>\n<p>如果想更方便更快捷实现更多丰富的功能（比如发图、群管理、群指令、游戏数据管理等），可以考虑使用各种语言的 SDK 进行进一步的开发：<a href=\"https://docs.go-cqhttp.org/guide/quick_start.html#%E5%B7%B2%E7%9F%A5%E7%9A%84-go-cqhttp-%E9%80%9A%E4%BF%A1-sdk\">开始 | go-cqhttp 帮助中心</a></p>\n<p>2024 年 7 月 27 日通过检查发现，从昨天（26 日）开始沈典巷的某公寓的水电费的接口升级了，似乎加入了认证机制，不能通过脚本查看具体水电费余额，手机上也不能查看其他宿舍的余额了。机器人倒是没挂。</p>\n<p>第二天找到了通知原文：</p>\n\n<details class=\"callout\" data-callout=\"cite\" data-callout-fold=\"-\">\n<summary class=\"callout-title\">\n<div class=\"callout-title-icon\">\n<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"lucide lucide-quote\"><path d=\"M3 21c3 0 7-1 7-8V5c0-1.25-.756-2.017-2-2H4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2 1 0 1 0 1 1v1c0 1-1 2-2 2s-1 .008-1 1.031V20c0 1 0 1 1 1z\"/><path d=\"M15 21c3 0 7-1 7-8V5c0-1.25-.757-2.017-2-2h-4c-1.25 0-2 .75-2 1.972V11c0 1.25.75 2 2 2h.75c0 2.25.25 4-2.75 4v3c0 1 0 1 1 1z\"/></svg>\n</div>\n<div class=\"callout-title-inner\">关于「XX 通」水电小程序升级的通知</div>\n<div class=\"callout-fold\"></div>\n</summary>\n<div class=\"callout-content\"><p>各公寓区住户您好：为尽量避免公寓住户在「XX 通」水电充值过程中的误充情况，现对「XX 通」水电充值程序优化升级。计划更新时间：2024 年 7 月 26 日 10 时。主要更新内容：</p>\n<ol>\n<li>进入水电小程序后，系统将默认选择本人所登记房间；</li>\n<li>非本人所登记房间余额将不显示，请注意区分；</li>\n<li>如需向非本人房间充值，可以手动选择房间号后充值。</li>\n</ol>\n<p>注意事项：如同学发现「XX 通」系统显示的房间号和本人入住房间有偏差，可至各公寓区一站式服务中心处理（如存在私下调宿情况，公寓区一站式服务中心不予处理）。</p>\n</div></details><h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://www.bilibili.com/read/cv7009209/\">我与酷Q的故事——纪念QQ机器人业黑暗的一天 - 哔哩哔哩 (bilibili.com)</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/166310645\">酷Q停运后，其他机器人，该何去何从？ - 知乎 (zhihu.com)</a></li>\n<li><a href=\"https://onebot.dev/introduction.html\">介绍 | OneBot</a></li>\n<li><a href=\"https://www.zhihu.com/question/610131308\">腾讯 QQ Windows 全新 NT 架构 9.9.0 体验版上架官网，升级后有哪些亮点？ - 知乎 (zhihu.com)</a></li>\n<li><a href=\"https://blog.csdn.net/zoey_peak/article/details/130610547\">【个人笔记】go-cqhttp+pycqBot配置-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/apple_51931783/article/details/128421324\">初识Nonebot2-CSDN博客</a></li>\n<li><a href=\"https://juejin.cn/post/7229314169647726629\">Linux 安装配置 go-cqhttp - 掘金 (juejin.cn)</a></li>\n<li><a href=\"https://blog.csdn.net/hanhx1993/article/details/89668170\">listen tcp :8080: bind: Only one usage of each socket address (protocol/network address/port) is nor-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/Amiao_173/article/details/128559937\">解决Go-CQhttp无法登录（服务器如何登录）的问题_go-cqhttp登录失败-CSDN博客</a></li>\n<li><a href=\"https://blog.csdn.net/qq_39247153/article/details/81984524\">使用python解析Json字符串-获取Json字符串关键字_python解析json获取key字段名-CSDN博客</a></li>\n<li><a href=\"https://zhuanlan.zhihu.com/p/629006773\">Python爬虫基础（3）——requests库get请求方法 - 知乎 (zhihu.com)</a></li>\n</ul>\n","raw":"---\ntitle: go-cqhttp 部署与简单编程\ntags:\n  - QQ\n  - cqhttp\n  - Python\n  - HTTP\n  - Windows\n  - Linux\ncover: 'https://cdn.gallery.uuanqin.top/img/20240418211821.webp'\ndescription: 舍友用了都说好\nabbrlink: 34fc0316\ncategories:\n  - 核心协同\n  - 自动化\ndate: 2024-04-18 19:08:47\ntop_img:\n---\n\n> [!warning] 免责声明：本文仅供学习和交流，切勿用于违法行为。本文作者不对读者的不当使用负责。\n\n在 [[对电脑端微信小程序抓包|之前的文章]] 中提到，我需要每天查询宿舍水电费余额。抓到小程序查余额的接口后，我打算把消息通知到宿舍 QQ 群中（微信群机器人操作太麻烦，或者说只有企业群才有机器人）。\n\n本文简要介绍 go-cqhttp 部署与编程思路，并实现一个简单的单向数据传输的 Demo。\n\n# 简述：QQ 机器人的曾经与未来\n\n酷 Q 是一款制造 QQ 聊天机器人的软件，主要功能是获取 QQ 的聊天消息，然后通过各种插件达到各种不同的功能。\n\n[cqhttp](https://github.com/kyubotics/coolq-http-api) 是 2017 年初出现的基于 CKYU（一个 QQ 机器人插件平台，应该就是酷 Q）的一款开源免费插件，它使用户能够通过 HTTP 或 WebSocket 对 CKYU 的事件进行上报以及接收请求来调用 CKYU 的 DLL 接口，从而可以使用其它语言（不方便编译到原生二进制的语言）编写 CKYU 插件。在 CQHTTP 活跃开发和维护期间，有非常多的开发者使用 Python、Java、Node.js 等 web 开发常用语言基于 CQHTTP 插件编写各式各样的聊天机器人。\n\n> 2020 年晨风律师函事件发生，当年酷 Q 官网决定停运。\n> cqhttp 项目在 2020 年归档，作者自述原因为无力维护。\n\n> [!cite] 愿我们能在更开放的平行世界里相遇。——酷 Q 官网\n\n在新的机器人平台 Mirai 开始发展、以及 CKYU 决定停运之后，为了让原来基于 CQHTTP 插件编写的机器人能够继续运行，一些开发者在其它机器人平台上编写了兼容 CQHTTP 接口的插件/模块。 go-cqhttp 是其中较为广泛使用的一个。\n\n[go-cqhttp](https://github.com/Mrs4s/go-cqhttp) 是使用 [mirai](https://github.com/mamoe/mirai) 以及 [Mirai](https://github.com/Mrs4s/MiraiGo) 开发的 cqhttp golang 原生实现，并在 [cqhttp 原版](https://github.com/richardchien/coolq-http-api) 的基础上做了部分修改和拓展。\n\n但是以上均不是官方推出的机器人或接口。2020 年 4 月初，腾讯官方内测 Hoo!k 机器人，不久后下线。2023 年 7 月，腾讯 QQ Windows 全新 NT 架构 9.9.0 体验版已上架官网开放下载。\n\n> go-cqhttp 作者在 2023 年发布 [声明](https://github.com/Mrs4s/go-cqhttp/issues/2471)，称由于 QQ 官方针对协议库的围追堵截，作者本人已无力维护项目。\n\n> [!cite] 协议库的时代已经过去，接下来是 Hook 官方客户端的时代。——go-cqhttp 项目维护者 Mrs4s\n\n如今 2024 年 NTQQ 正式版诞生，官方正式推出「QQ 机器人」，称其可以直接打通「QQ 频道」「QQ 群」与个人。\n\n# 思路\n\n> [OneBot](https://github.com/botuniverse/onebot) 是统一的聊天机器人应用接口标准，旨在统一不同聊天平台上的机器人应用开发接口，使开发者只需编写一次业务逻辑代码即可应用到多种机器人平台。go-cqhttp 支持该协议。2020 年诞生。\n\n对于个人用户，官方的 QQ 机器人不能添加到群，故放弃此想法。go-cqhttp 虽停止维护，但是还能用，用这半个学期应该是可以的。我尝试了过使用基于 go-cqhttp 开发的 Python SDK（[pycqBot](https://github.com/FengLiuFeseliud/pycqBot)），但不太好用。\n\n使用 go-cqhttp 需要有一个小号，充当「机器人」。\n\n项目离不开本地开发（我的电脑使用 Windows），定时任务离不开 Linux 服务器部署。\n\n本地测试时信息流：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240418204224.webp)\n\n实际应用时的信息流：\n\n![image.png](https://cdn.gallery.uuanqin.top/img/20240418204251.webp)\n\n# 本地测试开发\n\n安装 go-cqhttp，它是一个可执行文件，直接下载下来就可以用。实测，不能使用账号密码登录，因此我们需要进行扫码登录。\n\n刚刚下载好的 go-cqhttp 需要在命令行中执行一遍（不要鼠标双击）。通信方式选择 0。本地就会生成 `config.yml` 文件。\n\n此时还不能扫码登录，会有出现以下报错：\n\n> [!error] 错误：当前协议不支持二维码登录, 请配置账号密码登录。\n\n这时，我们看到目录会生成 `device.json` 文件，点进去，把 `\"protocol\":6` 改成 `\"protocol\":2`，就可以拿到二维码手机扫码登陆了。\n\n接下来用机器人账号进行扫码即可。登录成功后，你可以先和大号建一个小群以供测试。\n\n**注意到本地会生成一个 `session.token` 的文件，请保留。**\n\n在浏览器或其它工具发送 GET 指令。（参考 [onebot-11/api/public.md at master · botuniverse/onebot-11 (github.com)]()）\n\n```sh\nhttp://127.0.0.1:5700/send_group_msg?group_id=<QQ群群号>&message=hello_world\n# 5700 是 go-cqhttp 开放的端口\n```\n\n群里收到机器人发送的 `hello_world` 即配置成功。\n\n接下来写个 Python 脚本，用于查水电费，或者执行其它你想要的功能（比如使用 WebHook 推送）。这个脚本打算放在 Linux 服务器中运行。脚本实现：\n\n1. GET 请求获取水电费余额\n2. 计算余额是否不足\n3. 【可选】使用 hook 进行推送\n4. 发送消息至机器人\n5. 结束\n\n```python\nimport json  \nimport requests  \n  \nQQ_GROUP_NUMBER = 123456 # QQ群号    \nQQ_PUSH_URL = 'http://xxxx:5700/send_group_msg'\n  \ndef send_message_qq(msg):\n    pyload = {\n        \"group_id\": QQ_GROUP_NUMBER,\n        \"message\": msg\n    }\n    headers = {\n        \"Content-Type\": \"application/json; charset=UTF-8\"\n    }\n    requests.post(QQ_PUSH_URL, data=json.dumps(pyload), headers=headers)\n\ndef main():\n\t# 编写自己的逻辑 比如获取水电费\n    send_message_qq(msg)  # Q群提示\n\nif __name__ == '__main__':\n    main()\n```\n\n# Linux 部署\n\n安装 go-cqhttp，解压压缩包。同理，改一下协议并先运行一下。**此时并不能扫码登录 QQ，因为 QQ 判定你的登录地和扫码地太远。这时候我们只需要把之前的 `session.token` 文件复制到当前目录即可。**\n\n运行 go-cqhttp。我们可以在本地浏览器等 HTTP 客户端进行测试：\n\n```url\nhttp://<服务器IP>:5700/send_group_msg?group_id=<QQ群群号>&message=hello_world\n```\n\n> 云服务器安全组中记得把 5700 打开。\n\n测试无误后把 python 文件复制过来，记得改一下正确的 `QQ_PUSH_URL`，应改为 `http://127.0.0.1:5700/send_group_msg`。\n\n后台运行 go-cqhttp（参考 [[Linux 使用 nohup 后台运行程序]]）：\n\n```sh\n# 必须在go-cqhttp存在的目录运行指令\nnohup /<your_dir>/go-cqhttp &\n```\n\n然后将运行 python 脚本的任务添加到 crontab 中实现定时启动（参考：[[Linux 使用 Cron 创建定时任务]]）\n\n```cron\n4 8 * * * /usr/bin/python /<your_dir>/your.py \n```\n\n> 后续几个月的使用反馈：偶然出现消息没有成功发送出去的情况，所以不要过度依赖此机器人。\n\n# 后记\n\n如果想更方便更快捷实现更多丰富的功能（比如发图、群管理、群指令、游戏数据管理等），可以考虑使用各种语言的 SDK 进行进一步的开发：[开始 | go-cqhttp 帮助中心](https://docs.go-cqhttp.org/guide/quick_start.html#%E5%B7%B2%E7%9F%A5%E7%9A%84-go-cqhttp-%E9%80%9A%E4%BF%A1-sdk)\n\n2024 年 7 月 27 日通过检查发现，从昨天（26 日）开始沈典巷的某公寓的水电费的接口升级了，似乎加入了认证机制，不能通过脚本查看具体水电费余额，手机上也不能查看其他宿舍的余额了。机器人倒是没挂。\n\n第二天找到了通知原文：\n\n> [!cite]- 关于「XX 通」水电小程序升级的通知\n> 各公寓区住户您好：为尽量避免公寓住户在「XX 通」水电充值过程中的误充情况，现对「XX 通」水电充值程序优化升级。计划更新时间：2024 年 7 月 26 日 10 时。主要更新内容：\n> 1. 进入水电小程序后，系统将默认选择本人所登记房间；\n> 2. 非本人所登记房间余额将不显示，请注意区分；\n> 3. 如需向非本人房间充值，可以手动选择房间号后充值。\n> \n> 注意事项：如同学发现「XX 通」系统显示的房间号和本人入住房间有偏差，可至各公寓区一站式服务中心处理（如存在私下调宿情况，公寓区一站式服务中心不予处理）。\n\n# 本文参考\n- [我与酷Q的故事——纪念QQ机器人业黑暗的一天 - 哔哩哔哩 (bilibili.com)](https://www.bilibili.com/read/cv7009209/)\n- [酷Q停运后，其他机器人，该何去何从？ - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/166310645)\n- [介绍 | OneBot](https://onebot.dev/introduction.html)\n- [腾讯 QQ Windows 全新 NT 架构 9.9.0 体验版上架官网，升级后有哪些亮点？ - 知乎 (zhihu.com)](https://www.zhihu.com/question/610131308)\n- [【个人笔记】go-cqhttp+pycqBot配置-CSDN博客](https://blog.csdn.net/zoey_peak/article/details/130610547)\n- [初识Nonebot2-CSDN博客](https://blog.csdn.net/apple_51931783/article/details/128421324)\n- [Linux 安装配置 go-cqhttp - 掘金 (juejin.cn)](https://juejin.cn/post/7229314169647726629)\n- [listen tcp :8080: bind: Only one usage of each socket address (protocol/network address/port) is nor-CSDN博客](https://blog.csdn.net/hanhx1993/article/details/89668170)\n- [解决Go-CQhttp无法登录（服务器如何登录）的问题_go-cqhttp登录失败-CSDN博客](https://blog.csdn.net/Amiao_173/article/details/128559937)\n- [使用python解析Json字符串-获取Json字符串关键字_python解析json获取key字段名-CSDN博客](https://blog.csdn.net/qq_39247153/article/details/81984524)\n- [Python爬虫基础（3）——requests库get请求方法 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/629006773)\n\n","categories":[{"name":"核心协同","api":"api/categories/核心协同.json"},{"name":"自动化","api":"api/categories/核心协同/自动化.json"}],"tags":[{"name":"Linux","api":"api/tags/Linux.json"},{"name":"Python","api":"api/tags/Python.json"},{"name":"HTTP","api":"api/tags/HTTP.json"},{"name":"Windows","api":"api/tags/Windows.json"},{"name":"QQ","api":"api/tags/QQ.json"},{"name":"cqhttp","api":"api/tags/cqhttp.json"}]},"api":"api/posts/p/34fc0316.json"}