{"data":{"title":"Linux 使用 nohup 后台运行程序","slug":"核心协同/自动化/Linux 使用 nohup 后台运行程序","description":"保证自己的项目一直运行，不会因为关闭终端而结束","date":"2024-04-18T04:23:22.000Z","updated":"2025-09-26T16:05:50.739Z","language":"zh-CN","comments":true,"url":"p/91c1c44b/","cover":"https://cdn.gallery.uuanqin.top/img/20240418190126.webp","images":[],"content":"<p>nohu<strong>p</strong> 英文全称 no hang up（不挂起）。当我们把项目部署到服务器上时，只有一直保持 linux 终端的连接才能够运行项目，当我们把连接软件 Xshell 或者 Finalshell 连接工具关掉时，项目也就停止运行。只要用了 nohup 命令，我们的项目就能够一直运行了，此时就实现了我们需求。</p>\n<blockquote>\n<p>易错点：有些人会错拼为 nohub ，比如我… 😅😅😅</p>\n</blockquote>\n<h1 id=\"检查\"><a class=\"markdownIt-Anchor\" href=\"#检查\"></a> 检查</h1>\n<p>查询 nohup 是否安装：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">which</span> <span class=\"built_in\">nohup</span></span><br></pre></td></tr></table></figure>\n<p>安装方法略。</p>\n<h1 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\"></a> 使用</h1>\n<p>nohup 命令，在默认情况下（非重定向时），会输出一个名叫 nohup.out 的文件到当前目录下，如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。</p>\n<p>语法格式：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> Command [Arg...] [&amp;]</span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>nohup</code>：不挂断的运行，并没有后台运行的功能，使命令永久的执行下去，断开 SSH 连接不会影响他的运行。</li>\n<li><code>Command</code>：要执行的命令。</li>\n<li><code>Arg</code>：一些参数，可以指定输出文件。</li>\n<li><code>&amp;</code>：让命令在后台执行，终端退出后命令仍旧执行。</li>\n</ul>\n<p>比如：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">nohup</span> ./myscript.sh &amp;</span><br></pre></td></tr></table></figure>\n<p>在终端如果看到以下输出，并返回工作序号和 pid，说明运行成功：</p>\n<figure class=\"highlight text\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">[1] 166603</span><br><span class=\"line\">nohup: ignoring input and appending output to &#x27;nohup.out&#x27;</span><br></pre></td></tr></table></figure>\n<p>输入 <code>jobs</code> 命令查看运行的工作：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">jobs</span></span><br><span class=\"line\"><span class=\"comment\"># [1]+  Running                 nohup java -jar ./demo-interface-0.0.1-SNAPSHOT.jar &amp;</span></span><br></pre></td></tr></table></figure>\n<p><code>nohup.out</code> 记录有启动日志：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">tail</span> -500 nohup.out <span class=\"comment\"># 查看启动日志</span></span><br></pre></td></tr></table></figure>\n<p>若要停止运行，我们可以先找到进程号：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ps -aux | grep <span class=\"string\">&quot;myscript.sh&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># a:显示所有程序</span></span><br><span class=\"line\"><span class=\"comment\"># u:以用户为主的格式来显示</span></span><br><span class=\"line\"><span class=\"comment\"># x:显示所有程序，不区分终端机</span></span><br><span class=\"line\"><span class=\"comment\"># 也可以使用 ps -def | grep &quot;myscript.sh&quot;</span></span><br></pre></td></tr></table></figure>\n<p>第一个号码就是 PID。接下来使用 <code>kill</code> 命令删除。</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">kill</span> -9 &lt;PID&gt;</span><br><span class=\"line\"><span class=\"comment\"># kill 程序可以向另外的进程发送任意的信号。上述命令表示发送信号9(SIGKILL)给指定的进程。</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"本文参考\"><a class=\"markdownIt-Anchor\" href=\"#本文参考\"></a> 本文参考</h1>\n<ul>\n<li><a href=\"https://blog.csdn.net/qq_45830276/article/details/126044645\">Linux中安装和使用nohup命令_nohup安装-CSDN博客</a></li>\n<li><a href=\"https://www.runoob.com/linux/linux-comm-nohup.html\">Linux nohup 命令 | 菜鸟教程 (runoob.com)</a></li>\n<li><a href=\"https://baijiahao.baidu.com/s?id=1761537282329297979&amp;wfr=spider&amp;for=pc\">linux常用功能——后台运行 (baidu.com)</a></li>\n<li><a href=\"https://blog.csdn.net/cooldream2009/article/details/134990775\">Linux中ps命令使用指南-CSDN博客</a></li>\n</ul>\n","raw":"---\ntitle: Linux 使用 nohup 后台运行程序\ntags:\n  - Linux\n  - nohup\ncover: 'https://cdn.gallery.uuanqin.top/img/20240418190126.webp'\ndescription: 保证自己的项目一直运行，不会因为关闭终端而结束\nabbrlink: 91c1c44b\ncategories:\n  - 核心协同\n  - 自动化\ndate: 2024-04-18 12:23:22\ntop_img:\n---\n\nnohu**p** 英文全称 no hang up（不挂起）。当我们把项目部署到服务器上时，只有一直保持 linux 终端的连接才能够运行项目，当我们把连接软件 Xshell 或者 Finalshell 连接工具关掉时，项目也就停止运行。只要用了 nohup 命令，我们的项目就能够一直运行了，此时就实现了我们需求。\n\n> 易错点：有些人会错拼为 nohub ，比如我...... 😅😅😅\n\n# 检查\n\n查询 nohup 是否安装：\n\n```sh\nwhich nohup\n```\n\n安装方法略。\n\n# 使用\n\nnohup 命令，在默认情况下（非重定向时），会输出一个名叫 nohup.out 的文件到当前目录下，如果当前目录的 nohup.out 文件不可写，输出重定向到 $HOME/nohup.out 文件中。\n\n语法格式：\n\n```sh\nnohup Command [Arg...] [&]\n```\n\n- `nohup`：不挂断的运行，并没有后台运行的功能，使命令永久的执行下去，断开 SSH 连接不会影响他的运行。\n- `Command`：要执行的命令。\n- `Arg`：一些参数，可以指定输出文件。\n- `&`：让命令在后台执行，终端退出后命令仍旧执行。\n\n比如：\n\n```sh\nnohup ./myscript.sh &\n```\n\n在终端如果看到以下输出，并返回工作序号和 pid，说明运行成功：\n\n```text\n[1] 166603\nnohup: ignoring input and appending output to 'nohup.out'\n```\n\n输入 `jobs` 命令查看运行的工作：\n```sh\njobs\n# [1]+  Running                 nohup java -jar ./demo-interface-0.0.1-SNAPSHOT.jar &\n```\n\n`nohup.out` 记录有启动日志：\n\n```sh\ntail -500 nohup.out # 查看启动日志\n```\n\n若要停止运行，我们可以先找到进程号：\n\n```sh\nps -aux | grep \"myscript.sh\"\n# a:显示所有程序\n# u:以用户为主的格式来显示\n# x:显示所有程序，不区分终端机\n# 也可以使用 ps -def | grep \"myscript.sh\"\n```\n\n第一个号码就是 PID。接下来使用 `kill` 命令删除。\n\n```sh\nkill -9 <PID>\n# kill 程序可以向另外的进程发送任意的信号。上述命令表示发送信号9(SIGKILL)给指定的进程。\n```\n\n# 本文参考\n- [Linux中安装和使用nohup命令_nohup安装-CSDN博客](https://blog.csdn.net/qq_45830276/article/details/126044645)\n- [Linux nohup 命令 | 菜鸟教程 (runoob.com)](https://www.runoob.com/linux/linux-comm-nohup.html)\n- [linux常用功能——后台运行 (baidu.com)](https://baijiahao.baidu.com/s?id=1761537282329297979&wfr=spider&for=pc)\n- [Linux中ps命令使用指南-CSDN博客](https://blog.csdn.net/cooldream2009/article/details/134990775)\n","categories":[{"name":"核心协同","api":"api/categories/核心协同.json"},{"name":"自动化","api":"api/categories/核心协同/自动化.json"}],"tags":[{"name":"Linux","api":"api/tags/Linux.json"},{"name":"nohup","api":"api/tags/nohup.json"}]},"api":"api/posts/p/91c1c44b.json"}