{"title":"最小差值问题的贪心理解","tags":["LeetCode","贪心","Java"],"cover":"https://cdn.gallery.uuanqin.top/img/202409192134284.webp","description":"尝试自证贪心算法的正确性","categories":["算法与数据结构"],"abbrlink":"3fe090c8","katex":true,"date":"2024-09-19T18:16:50.000Z","top_img":null,"summary":"今天带来的两道最小差值问题的解决方案。重点讨论「最小差值 II」中贪心算法的证明，因为 LeetCode 关于这道题的题解写得十分晦涩，生怕别人看懂。 本文题目难度标识：🟩简单，🟨中等，🟥困难。 「最小差值 I」：k 是可伸缩的 > [!example] 题目：🟩 908. 最小差值 I - 力扣（LeetCode） > 给你一个整数数组 `nums`，和一个整数 `k` 。 > > 在一个操作中，您可以选择 `0 <= i < nums.length` 的任何索引 i 。将 `nums[i]` 改为 `nums[i] + x` ，其中 `x` 是一个范围为 `[-k, k]` 的整数。对于每个索引 i ，最多 只能 应用 一次 此操作。 > > `nums` 的 分数 是 `nums` 中最大和最小元素的差值。 > > 在对 `nums` 中的每个索引最多应用一次上述操作后，返回 `nums` 的最低 分数 。 假设整数数组 nums 的最小值为 minNum，最大值为 maxNum。使用数学方法不难证明以下定理： > [!tldr] 定理：如果 $\\text{maxNum}-\\text{minNum}≤2k$，那么我们总可以将整数数组 nums 的所有元素都改为同一个整数，因此更改后的整数数组 nums 的最低分数为 0。 > > 证明：因为 maxNum-\\text{minNum}≤2k，所以存在整数 $x\\in [\\text{minNum},\\text{maxNum}]$，使得 $x-\\text{minNum}\\le k$ 且 $\\text{maxNum}-x≤k$。那么整数数组 nums 的所有元素与整数 x 的绝对差值都不超过 k，即所有元素都可以改为 x。 > [!tldr] 定理：如果 $\\text{maxNum}-\\text{minNum}>2k$，那么更改后的整数数组 nums 的最低分数为 $\\text{maxNum}-\\text{minNum}-2k$。 > > 证明：对于 `minNum` 和 `maxNum` 两个元素，我们将 `minNum` 改为 $\\text{minNum}+k$，`maxNum` 改为 $\\text{maxNum}-k$，此时两个元素的绝对差值最小。..."}