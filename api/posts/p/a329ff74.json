{"data":{"title":"Flask+Vue 前后端开发的快速上手——极简图书管理系统","slug":"技术学习/Flask+Vue 前后端开发的快速上手——极简图书管理系统","description":"源码项目学习实践，快速掌握Flask+Vue的前后端开发流程","date":"2023-05-04T08:29:14.000Z","updated":"2025-07-02T15:10:01.351Z","language":"zh-CN","comments":true,"url":"p/a329ff74/","cover":"https://cdn.gallery.uuanqin.top/img/tushuguanlixitongcover.png","images":[],"content":"<blockquote>\n<p>本文章源代码（附于文末）是经由 <a href=\"https://www.bilibili.com/video/BV1Jr4y1771i\">Bilibili视频</a> 手敲而来，再经过实际情况做了小的改良（使用 MySQL 数据库），是视频教程内容的源码部分的补充，强烈建议配合视频食用。</p>\n<p>当然有一定相关知识基础，但不愿意看视频的，可以<strong>直接理解源码，读代码注解</strong>即可。</p>\n</blockquote>\n<p>不管你做过多少的项目，<strong>图书管理系统</strong>你总该做过吧？</p>\n<blockquote>\n<p><em>面试官：你是我见过的第 XXX 个做图书管理系统的。</em></p>\n</blockquote>\n<p>像这种不大不小的前后端开发项目，是最适合个人学习新技术的。这篇文章分享一个极简图书管理系统的前后端开发项目源码学习实践，帮助你快速熟悉 Flask+Vue 前后端分离的开发流程。适合基本了解 Vue 与 Flask 基本功能，但想进行前后端交互实践的学习者，动手体验自己造一个小项目。</p>\n<p>前置知识：</p>\n<ul>\n<li>Python 基础，懂 Python 基本的语法</li>\n<li>一点点 HTML+CSS+Javascript+AJAX 基础，不需要特别深入</li>\n<li>Vue 基础，这里推荐做完互动教程（API 风格：组合式）就行：<a href=\"https://cn.vuejs.org/tutorial/#step-1\">教程 | Vue.js (vuejs.org)</a></li>\n<li>Flask 基础，推荐一边做一边查阅：<a href=\"https://tutorial.helloflask.com/\">Flask 入门教程 (helloflask.com)</a></li>\n<li>MySQL 基础（非必需）</li>\n</ul>\n<h1 id=\"功能展示\"><a class=\"markdownIt-Anchor\" href=\"#功能展示\"></a> 功能展示</h1>\n<p>基本页面：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-20230504170537219.png\" alt=\"image-20230504170537219\" /></p>\n<p>实现了图书管理系统增删改查功能。</p>\n<h1 id=\"环境与依赖\"><a class=\"markdownIt-Anchor\" href=\"#环境与依赖\"></a> 环境与依赖</h1>\n<p>环境：Python 3.10</p>\n<p>后端：</p>\n<ul>\n<li>Python 安装 Flask</li>\n<li>pip 安装 Flask-Cors、Flask-Cors、PyMySQL</li>\n</ul>\n<p>前端：Vite、Vue、axios、element-plus</p>\n<h1 id=\"案例代码使用\"><a class=\"markdownIt-Anchor\" href=\"#案例代码使用\"></a> 案例代码使用</h1>\n<h2 id=\"后端\"><a class=\"markdownIt-Anchor\" href=\"#后端\"></a> 后端</h2>\n<p>创建好 Flask 项目后，把以下文件放入项目文件夹中即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">后端项目</span><br><span class=\"line\">│  .env         # python-dotenv 相关</span><br><span class=\"line\">│  .flaskenv    # python-dotenv 相关</span><br><span class=\"line\">│  app.py       # flask主程序</span><br><span class=\"line\">│  demo.http    # HTTP请求测试文件</span><br><span class=\"line\">│  extension.py # 扩展</span><br><span class=\"line\">│  models.py    # 数据库</span><br></pre></td></tr></table></figure>\n<p>你在 PyCharm 看到的应该是这样的：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-20230504174717777.png\" alt=\"image-20230504174717777\" /></p>\n<p>通过以下命令启动后端服务器:</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">flask run</span><br><span class=\"line\"><span class=\"comment\"># 或</span></span><br><span class=\"line\">python app.py</span><br></pre></td></tr></table></figure>\n<h2 id=\"前端\"><a class=\"markdownIt-Anchor\" href=\"#前端\"></a> 前端</h2>\n<p>通过 Vite 创建 Vue 项目后，把/src/assets/main.css 中的内容注释掉，免得后面网页显示异常。</p>\n<p>用本案例的两个文件替换原项目的对应文件：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">App.vue</span><br><span class=\"line\">main.js</span><br></pre></td></tr></table></figure>\n<p>你在 VSCode 看到的应该是这样的：</p>\n<p><img src= \"/image/loading.gif\" data-lazy-src=\"https://cdn.gallery.uuanqin.top/img/image-20230504175239052.png\" alt=\"image-20230504175239052\" /></p>\n<p>通过以下命令启动客户端：</p>\n<figure class=\"highlight sh\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm run dev</span><br></pre></td></tr></table></figure>\n<h1 id=\"问题解决记录\"><a class=\"markdownIt-Anchor\" href=\"#问题解决记录\"></a> 问题解决记录</h1>\n<p>这个板块记录我在参照视频敲代码所遇到的问题。在我提供的代码中，这些问题已被解决。</p>\n<p><strong>Q: 我使用的数据库是 mysql</strong></p>\n<p>A: 安装 PyMySQL Python 包之后，app.config 可以这样写：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">app.config[<span class=\"string\">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = <span class=\"string\">&#x27;mysql+pymysql://root:&lt;your mysql key&gt;@localhost:3306/&lt;your database name&gt;?charset=utf8mb4&#x27;</span></span><br></pre></td></tr></table></figure>\n<p>改变上述代码中的：</p>\n<ul>\n<li>&lt;your mysql key&gt;：你的 Mysql 数据库密码</li>\n<li>&lt;your database name&gt;：你创建的数据库名，记得要预先创建好</li>\n</ul>\n<p><strong>Q: js 中模板字符串 <code>$&#123;var&#125;</code> 无效</strong></p>\n<p>A: 注意，字符串用`来括住，不是单引号，不是双引号。</p>\n<p>参考：<a href=\"https://bbs.csdn.net/topics/392194597\">ES6 模板字符串 ${} 无效-CSDN社区</a></p>\n<p><strong>Q: 出现跨域问题</strong></p>\n<p>A: 代码里已经解决了跨域问题，请检查请求的 URL 是否正确</p>\n<p>参考：<a href=\"https://zhuanlan.zhihu.com/p/75738155\">flask restful 处理跨域请求 - 知乎 (zhihu.com)</a></p>\n<p><strong>Q: 希望服务端的响应报文返回中文而不是 Unicode 字符串</strong></p>\n<p>A: 对服务端的返回结果进行处理，如：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ret= &#123; <span class=\"string\">&#x27;&#x27;&#x27;your data&#x27;&#x27;&#x27;</span> &#125;</span><br><span class=\"line\"><span class=\"keyword\">return</span> json.dumps(ret, ensure_ascii=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n<p>注意，由于 Flask 版本更新，为 Flask app 设置变量 <code>JSON_AS_ASCII</code> 的方法已经失效。</p>\n<p>参考：</p>\n<ul>\n<li>[flask 或 flask-restful 的接口开发，返回的 json 数据能显示中文的方法 _flask 设置 json 数据显示中文格式 _fj_changing 的博客 -CSDN 博客](<a href=\"https://blog.csdn.net/fj_changing/article/details/116385130#:~:text=%E7%94%A8,flask\">https://blog.csdn.net/fj_changing/article/details/116385130#:~:text=用,flask</a> 或 flask-restful 开发接口时，返回给前端的 json 数据中若有中文，在 postman 的 raw 里或浏览器直接访问，中文会显示成 unicode 编码之后的形式，下面是使之显示成中文的方法。)</li>\n<li><a href=\"https://flask.palletsprojects.com/en/2.3.x/changes/?highlight=json_as_ascii\">Changes — Flask Documentation (2.3.x) (palletsprojects.com)</a></li>\n</ul>\n<h1 id=\"额外收获\"><a class=\"markdownIt-Anchor\" href=\"#额外收获\"></a> 额外收获</h1>\n<p>用 HTTP 文件调试 API 的技能学习，参考这篇文章学会写 http 的测试请求：<a href=\"https://marketplace.visualstudio.com/items?itemName=humao.rest-client\">REST Client - Visual Studio Marketplace</a></p>\n<p>RESTful 风格 API：<a href=\"http://ruanyifeng.com/blog/2014/05/restful_api.html\">RESTful API 设计指南 - 阮一峰的网络日志 (ruanyifeng.com)</a></p>\n<h1 id=\"源代码\"><a class=\"markdownIt-Anchor\" href=\"#源代码\"></a> 源代码</h1>\n<p>链接：<a href=\"https://pan.baidu.com/s/1wvCntRDhUhzhxBe-Z6hdug?pwd=xzw6\">https://pan.baidu.com/s/1wvCntRDhUhzhxBe-Z6hdug?pwd=xzw6</a></p>\n<p>提取码：xzw6</p>\n","raw":"---\ntitle: Flask+Vue 前后端开发的快速上手——极简图书管理系统\ntags:\n  - Python\n  - Flask\n  - Vite\n  - Vue\n  - ElementPlus\n  - MySQL\n  - 源码案例驱动\ncover: 'https://cdn.gallery.uuanqin.top/img/tushuguanlixitongcover.png'\ndescription: 源码项目学习实践，快速掌握Flask+Vue的前后端开发流程\nabbrlink: a329ff74\ncategories:\n  - 技术学习\ndate: 2023-05-04 16:29:14\ntop_img:\n---\n\n> 本文章源代码（附于文末）是经由 [Bilibili视频](https://www.bilibili.com/video/BV1Jr4y1771i) 手敲而来，再经过实际情况做了小的改良（使用 MySQL 数据库），是视频教程内容的源码部分的补充，强烈建议配合视频食用。\n>\n> 当然有一定相关知识基础，但不愿意看视频的，可以**直接理解源码，读代码注解**即可。\n\n不管你做过多少的项目，**图书管理系统**你总该做过吧？\n\n> *面试官：你是我见过的第 XXX 个做图书管理系统的。*\n\n像这种不大不小的前后端开发项目，是最适合个人学习新技术的。这篇文章分享一个极简图书管理系统的前后端开发项目源码学习实践，帮助你快速熟悉 Flask+Vue 前后端分离的开发流程。适合基本了解 Vue 与 Flask 基本功能，但想进行前后端交互实践的学习者，动手体验自己造一个小项目。\n\n前置知识：\n\n* Python 基础，懂 Python 基本的语法\n* 一点点 HTML+CSS+Javascript+AJAX 基础，不需要特别深入\n* Vue 基础，这里推荐做完互动教程（API 风格：组合式）就行：[教程 | Vue.js (vuejs.org)](https://cn.vuejs.org/tutorial/#step-1)\n* Flask 基础，推荐一边做一边查阅：[Flask 入门教程 (helloflask.com)](https://tutorial.helloflask.com/)\n* MySQL 基础（非必需）\n\n# 功能展示\n\n基本页面：\n\n![image-20230504170537219](https://cdn.gallery.uuanqin.top/img/image-20230504170537219.png)\n\n实现了图书管理系统增删改查功能。\n\n# 环境与依赖\n\n环境：Python 3.10\n\n后端：\n\n* Python 安装 Flask\n* pip 安装 Flask-Cors、Flask-Cors、PyMySQL\n\n前端：Vite、Vue、axios、element-plus\n\n# 案例代码使用\n\n## 后端\n\n创建好 Flask 项目后，把以下文件放入项目文件夹中即可\n\n```test\n后端项目\n│  .env         # python-dotenv 相关\n│  .flaskenv    # python-dotenv 相关\n│  app.py       # flask主程序\n│  demo.http    # HTTP请求测试文件\n│  extension.py # 扩展\n│  models.py    # 数据库\n```\n\n你在 PyCharm 看到的应该是这样的：\n\n![image-20230504174717777](https://cdn.gallery.uuanqin.top/img/image-20230504174717777.png)\n\n通过以下命令启动后端服务器:\n\n```sh\nflask run\n# 或\npython app.py\n```\n\n## 前端\n\n通过 Vite 创建 Vue 项目后，把/src/assets/main.css 中的内容注释掉，免得后面网页显示异常。\n\n用本案例的两个文件替换原项目的对应文件：\n\n```\nApp.vue\nmain.js\n```\n\n你在 VSCode 看到的应该是这样的：\n\n![image-20230504175239052](https://cdn.gallery.uuanqin.top/img/image-20230504175239052.png)\n\n通过以下命令启动客户端：\n\n```sh\nnpm run dev\n```\n\n# 问题解决记录\n\n这个板块记录我在参照视频敲代码所遇到的问题。在我提供的代码中，这些问题已被解决。\n\n**Q: 我使用的数据库是 mysql**\n\nA: 安装 PyMySQL Python 包之后，app.config 可以这样写：\n\n```python\napp.config['SQLALCHEMY_DATABASE_URI'] = 'mysql+pymysql://root:<your mysql key>@localhost:3306/<your database name>?charset=utf8mb4'\n```\n\n改变上述代码中的：\n\n* \\<your mysql key\\>：你的 Mysql 数据库密码\n* \\<your database name\\>：你创建的数据库名，记得要预先创建好\n\n**Q: js 中模板字符串 `${var}` 无效**\n\nA: 注意，字符串用\\`来括住，不是单引号，不是双引号。\n\n参考：[ES6 模板字符串 ${} 无效-CSDN社区](https://bbs.csdn.net/topics/392194597)\n\n**Q: 出现跨域问题**\n\nA: 代码里已经解决了跨域问题，请检查请求的 URL 是否正确\n\n参考：[flask restful 处理跨域请求 - 知乎 (zhihu.com)](https://zhuanlan.zhihu.com/p/75738155)\n\n**Q: 希望服务端的响应报文返回中文而不是 Unicode 字符串**\n\nA: 对服务端的返回结果进行处理，如：\n\n```python\nret= { '''your data''' }\nreturn json.dumps(ret, ensure_ascii=False)\n```\n\n注意，由于 Flask 版本更新，为 Flask app 设置变量 `JSON_AS_ASCII` 的方法已经失效。\n\n参考：\n\n* [flask 或 flask-restful 的接口开发，返回的 json 数据能显示中文的方法 _flask 设置 json 数据显示中文格式 _fj_changing 的博客 -CSDN 博客](https://blog.csdn.net/fj_changing/article/details/116385130#:~:text=用,flask 或 flask-restful 开发接口时，返回给前端的 json 数据中若有中文，在 postman 的 raw 里或浏览器直接访问，中文会显示成 unicode 编码之后的形式，下面是使之显示成中文的方法。)\n* [Changes — Flask Documentation (2.3.x) (palletsprojects.com)](https://flask.palletsprojects.com/en/2.3.x/changes/?highlight=json_as_ascii)\n\n# 额外收获\n\n用 HTTP 文件调试 API 的技能学习，参考这篇文章学会写 http 的测试请求：[REST Client - Visual Studio Marketplace](https://marketplace.visualstudio.com/items?itemName=humao.rest-client)\n\nRESTful 风格 API：[RESTful API 设计指南 - 阮一峰的网络日志 (ruanyifeng.com)](http://ruanyifeng.com/blog/2014/05/restful_api.html)\n\n# 源代码\n\n链接：https://pan.baidu.com/s/1wvCntRDhUhzhxBe-Z6hdug?pwd=xzw6\n\n提取码：xzw6\n","categories":[{"name":"技术学习","api":"api/categories/技术学习.json"}],"tags":[{"name":"MySQL","api":"api/tags/MySQL.json"},{"name":"Python","api":"api/tags/Python.json"},{"name":"Flask","api":"api/tags/Flask.json"},{"name":"Vite","api":"api/tags/Vite.json"},{"name":"Vue","api":"api/tags/Vue.json"},{"name":"ElementPlus","api":"api/tags/ElementPlus.json"},{"name":"源码案例驱动","api":"api/tags/源码案例驱动.json"}]},"api":"api/posts/p/a329ff74.json"}