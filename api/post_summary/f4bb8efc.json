{"title":"差分数组","tags":["Array","Java","前缀和"],"cover":"https://cdn.gallery.uuanqin.top/img/202505262100782.webp","description":"运用差分数组的性质降低复杂度","katex":true,"categories":["算法与数据结构"],"abbrlink":"f4bb8efc","date":"2025-05-22T23:04:47.000Z","top_img":null,"summary":"差分数组是前缀和的逆运算。 > [!cite] > 差分与 [[前后缀分解的应用|前缀和]] 的关系，类似导数与积分的关系。——@灵茶山艾府 本文题目难度标识：🟩简单，🟨中等，🟥困难。 一维差分 对于数组 a，定义其差分数组（difference array）为 $$ d[i] = \\begin{cases} a[0], & \\quad i = 0 \\\\ a[i] - a[i - 1], & \\quad i \\geq 1 \\end{cases} $$ 差分数组具有以下性质： 性质 1：从左到右累加 d 中的元素，可以得到数组 a。 性质 2：如下两个操作是等价的。 - 把 a 的子数组 $a[i],a[i+1],…,a[j]$ 都加上 $x$。 - 把 $d[i]$ 增加 $x$，把 $d[j+1]$ 减少 $x$。 观察性质 2，原本 $O(n)$ 的操作可以变为 $O(1)$ 的操作，然后通过性质 1 使用 $O(n)$ 的时间恢复数组 a。性质 2 也告诉我们差分数组是怎么影响原数组的。当 $d[i]$ 发生变动，如加 1，表示把 a 中下标 i 及后面的数都加上了 1。 > [!example] 本节例题 🟨 1094. 拼车 - 力扣（LeetCode） 相关题目：🟩 2848. 与车相交的点 - 力扣（LeetCode） 如果差分数组的数据比较稀疏，或构建差分数组的长度过大，那么在实现差分数组时除了建立一个 `Array` 数组外，还可以使用 `Map` 替代数组记录下标和值的键值对。 Java 具体做法为，使用 `TreeMap` 或使用普通 `Map`，再对 `key` 做一次排序。 相关题目： 🟨 731. 我的日程安排表 II - 力扣（LeetCode） 🟥 732. 我的日程安排表 III - 力扣（LeetCode） 二维差分 从一位差分数组到二维差分数组： 原数组的还原方式：计算二维前缀和即可还原。 > [!example] 二维前缀和：🟨 304. 二维区域和检索 - 矩阵不可变 - 力扣（LeetCode） 相关题目： 🟨 2536. 子矩阵元素加 1 - 力扣（LeetCode） 🟥 2132. ..."}